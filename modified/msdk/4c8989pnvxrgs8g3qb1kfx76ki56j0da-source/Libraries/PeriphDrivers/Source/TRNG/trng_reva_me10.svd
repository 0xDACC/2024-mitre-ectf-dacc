<?xml version="1.0" encoding="utf-8" standalone="no"?>
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="svd_schema.xsd">
 <peripheral>
  <name>TRNG</name>
  <description>Random Number Generator.</description>
  <baseAddress>0x400B5000</baseAddress>
  <addressBlock>
   <offset>0x00</offset>
   <size>0x1000</size>
   <usage>registers</usage>
  </addressBlock>
  <interrupt>
   <name>TRNG</name>
   <description>TRNG interrupt.</description>
   <value>4</value>
  </interrupt>
  <registers>
   <register>
    <name>CTRL</name>
    <description>TRNG Control Register.</description>
    <addressOffset>0x00</addressOffset>
    <resetValue>0xFFFFFFC0</resetValue>
    <fields>
     <field>
      <name>RNG_IE</name>
      <description>To enable IRQ generation when a new 32-bit Random number is ready.</description>
      <bitOffset>2</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>dis</name>
        <description>Disable</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>en</name>
        <description>Enable</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>RNG_ISC</name>
      <description>Clears the RNG interrupt occuring after an 128-bit random number is ready.</description>
      <bitOffset>3</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>clear</name>
        <description>Clear the RNG interrupt.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>RNG_I4S</name>
      <description>This bit is set when a new 128 bit random number is ready to be read (using 4 consecutive reads of TRNG_DATA. When set, an interrupt will be generated if TRNG_CTRL.rng_ie = 1. This bit is cleared by setting TRNG_CTRL.rng_isc.</description>
      <bitOffset>4</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>not_ready</name>
        <description>128-bit random number not ready.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>ready</name>
        <description>128-bit random number ready.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>RNG_IS</name>
      <description>This bit is set when a new 32 bit random number is available in TRNG_DATA.</description>
      <bitOffset>5</bitOffset>
      <bitWidth>1</bitWidth>
      <enumeratedValues>
       <enumeratedValue>
        <name>not_ready</name>
        <description>32-bit random number not ready.</description>
        <value>0</value>
       </enumeratedValue>
       <enumeratedValue>
        <name>ready</name>
        <description>32-bit random number ready.</description>
        <value>1</value>
       </enumeratedValue>
      </enumeratedValues>
     </field>
     <field>
      <name>AESKG</name>
      <description>When enabled, the key for securing NVSRAM is generated and transferred to the secure key register automatically without user visibility or intervention. This bit is cleared by hardware once the key has been transferred to the secure key register.</description>
      <bitOffset>6</bitOffset>
      <bitWidth>1</bitWidth>
     </field>     
    </fields>
   </register>
   <register>
    <name>DATA</name>
    <description>Data. The content of this register is valid only when RNG_IS = 1. When TRNG is disabled, read returns 0x0000 0000.</description>
    <addressOffset>0x04</addressOffset>
    <access>read-only</access>
    <fields>
     <field>
      <name>DATA</name>
      <description>Data. The content of this register is valid only when RNG_IS =1. When TNRG is disabled, read returns 0x0000 0000.</description>
      <bitOffset>0</bitOffset>
      <bitWidth>32</bitWidth>
     </field>
    </fields>
   </register>
  </registers>
 </peripheral>
<!-- TRNG:Random Number Generator              -->
</device>
