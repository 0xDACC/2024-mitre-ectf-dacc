<?xml version='1.0' encoding='utf-8'?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xsi:noNamespaceSchemaLocation="svd_schema.xsd">
 <vendor>Maxim-Integrated</vendor>
 <vendorID>Maxim</vendorID>
 <name>max32520</name>
 <series>ARMCM4</series>
 <version>1.0</version>
 <description>MAX32520 32-bit ARM Cortex-M4 microcontroller, 1024KB of flash, 760KB of system RAM, 128KB of Boot ROM.</description>
 <cpu>
  <name>CM4</name>
  <revision>r2p1</revision>
  <endian>little</endian>
  <mpuPresent>true</mpuPresent>
  <fpuPresent>true</fpuPresent>
  <nvicPrioBits>3</nvicPrioBits>
  <vendorSystickConfig>false</vendorSystickConfig>
 </cpu>
 <addressUnitBits>8</addressUnitBits>
 <width>32</width>
 <size>0x20</size>
 <access>read-write</access>
 <resetValue>0x00000000</resetValue>
 <resetMask>0xFFFFFFFF</resetMask>
 <peripherals>
  <peripheral>
   <name>AESKEYS</name>
   <description>AES Keys.</description>
   <baseAddress>0x40005000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SRAM_KEY</name>
     <description>AES SRAM KEY</description>
     <addressOffset>0x000</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>CODE_KEY</name>
     <description>AES CODE Key </description>
     <addressOffset>0x080</addressOffset>
    </register>
    <register>
     <name>DATA_KEY</name>
     <description>AES DATA KEY</description>
     <addressOffset>0x100</addressOffset>
    </register>
   </registers>
  </peripheral>
<!--AESKEYS AES Keys.-->
  <peripheral>
   <name>CTB</name>
   <description>The Cryptographic Toolbox is a combination of cryptographic engines and a secure cryptographic accelerator (SCA) used to provide advanced cryptographic security.</description>
   <baseAddress>0x40001000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Crypto_Engine</name>
    <description>Crypto Engine interrupt.</description>
    <value>27</value>
   </interrupt>
   <registers>
    <register>
     <name>CRYPTO_CTRL</name>
     <description>Crypto Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0xC0000000</resetValue>
     <fields>
      <field>
       <name>RST</name>
       <description>Reset. This bit is used to reset the crypto accelerator.  All crypto internal states and related registers are reset to their default reset values. Control register such as CRYPTO_CTRL, CIPHER_CTRL, HASH_CTRL, CRC_CTRL, MAA_CTRL (with the exception of the STC bit), HASH_MSG_SZ_[3:0] and MAA_MAWS will retain their values. This bit will automatically clear itself after one cycle.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INT</name>
       <description>Interrupt Enable. Generates an interrupt when done or error set.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRC</name>
       <description>Source Select.  This bit selects the hash function and CRC generator input source.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inputFIFO</name>
         <description>Input FIFO</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>outputFIFO</name>
         <description>Output FIFO</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BSO</name>
       <description>Byte Swap Output. Note. No byte swap will occur if there is not a full word.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BSI</name>
       <description>Byte Swap Input. Note. No byte swap will occur if there is not a full word.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WAIT_EN</name>
       <description>Wait Pin Enable. This can be used to hold off the crypto DMA until an external memory is ready. This is useful for transferring pages from NAND flash which may take several microseconds to become ready.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WAIT_POL</name>
       <description>Wait Pin Polarity. When the wait pin is enabled, this bit selects its active state.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>activeLo</name>
         <description>Active Low.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>activeHi</name>
         <description>Active High.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WRSRC</name>
       <description>Write FIFO Source Select. This field determines where data written to the write FIFO comes from. When data is written to the write FIFO, it is always written out the DMA. To decrypt or encrypt data, the write FIFO source should be set to the cipher output. To implement memcpy() or memset() functions, or to fill memory with random data, the write FIFO source should be set to the read FIFO. When calculating a HASH or CMAC, the write FIFO should be disabled.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>none</name>
         <description>None.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>cipherOutput</name>
         <description>Cipher Output.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>readFIFO</name>
         <description>Read FIFO.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDSRC</name>
       <description>Read FIFO Source Select. This field selects the source of the read FIFO. Typically, it is set to use the DMA. To implement a memset() function, the read FIFO DMA should be disabled. To fill memory with random data or to hash random numbers, the read FIFO source should be set to the random number generator.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dmaDisabled</name>
         <description>DMA Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dmaOrApb</name>
         <description>DMA Or APB.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rng</name>
         <description>RNG.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLAG_MODE</name>
       <description>Done Flag Mode. This bit configures the access behavior of the individual CRYPTO_CTRL Done flags (CRYPTO_CTRL[27:24]). This bit is cleared only on reset to limit upkeep, i.e. once set, it will remain set until a reset occurs.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unres_wr</name>
         <description>Unrestricted write (0 or 1) of CRYPTO_CTRL[27:24] flags.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>res_wr</name>
         <description>Access to CRYPTO_CTRL[27:24] are write 1 to clear/write 0 no effect.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMADNEMSK</name>
       <description>DMA Done Flag Mask. This bit masks the DMA_DONE flag from being used to generate the CRYPTO_CTRL.DONE flag, and this disables a DMA_DONE condition from generating and interrupt. The DMA_DONE flag itself is unaffected and still may be monitored. This allows more optimal interrupt-driven crypto operations using DMA.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_used</name>
         <description>DMA_DONE not used in setting CRYPTO_CTRL.DONE bit.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>used</name>
         <description>DMA_DONE used in setting CRYPTO_CTRL.DONE bit.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMA_DONE</name>
       <description>DMA Done. DMA write/read operation is complete. This bit must be cleared before starting a DMA operation.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>notDone</name>
         <description>Not Done.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>done</name>
         <description>Done.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>GLS_DONE</name>
       <description>Galois Done. FIFO is full and CRC or Hamming Code Generator is enabled. This bit must be cleared before starting a CRC operation Note that DMA_DONE must be polled instead of this bit to determine the end of DMA operation during the utilization of Hamming Code Generator.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>HSH_DONE</name>
       <description>Hash Done. SHA operation is complete. This bit must be cleared before starting a HASH operation.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>CPH_DONE</name>
       <description>Cipher Done. Either AES or DES encryption/decryption operation is complete. This bit must be cleared before starting a cipher operation.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERR</name>
       <description>AHB Bus Error. This bit is set when the DMA encounters a bus error during a read or write operation. Once this bit is set, the DMA will stop. This bit can only be cleared by resetting the crypto block.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noError</name>
         <description>No Error.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Error.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY</name>
       <description>Ready. Crypto block ready for more data.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>DONE</name>
       <description>Done. One or more cryptographic calculations complete (logical OR of done flags).</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CIPHER_CTRL</name>
     <description>Cipher Control Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ENC</name>
       <description>Encrypt. Select encryption or decryption of input data.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>encrypt</name>
         <description>Encrypt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>decrypt</name>
         <description>Decrypt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>KEY</name>
       <description>Load Key from crypto DMA. This bit is automatically cleared by hardware after the DMA has completed loading the key. When the DMA operation is done, it sets the appropriate crypto DMA Done flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRC</name>
       <description>Source of Random key.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>cipherKey</name>
         <description>User cipher key (0x4000_1060).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>regFile</name>
         <description>Key from battery-backed register file (0x4000_5000 to 0x4000_501F).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>qspiKey_regFile</name>
         <description>Key from battery-backed register file (0x4000_5020 to 0x4000_502F).</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CIPHER</name>
       <description>Cipher Operation Select.  Symmetric Block Cipher algorithm selection or memory operation.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>aes128</name>
         <description>AES 128.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>aes192</name>
         <description>AES 192.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>aes256</name>
         <description>AES 256.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>des</name>
         <description>DES.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>tdes</name>
         <description>Triple DES.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE</name>
       <description>Mode Select. Mode of operation for block cipher or memory operation. DES/TDES cannot be used in CFB, OFB or CTR modes.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ECB</name>
         <description>ECB Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CBC</name>
         <description>CBC Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CFB</name>
         <description>CFB (AES only).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>OFB</name>
         <description>OFB (AES only).</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CTR</name>
         <description>CTR (AES only).</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>COMPH</name>
       <description>H Vector Computation.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DTYPE</name>
       <description>GCM/CCM data type.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CCMM</name>
       <description>CCM M Parameter.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>3</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CCML</name>
       <description>CCM L Parameter.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>3</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>HASH_CTRL</name>
     <description>HASH Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>INIT</name>
       <description>Initialize. Initializes hash registers with standard constants.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>XOR</name>
       <description>XOR data with IV from cipher block. Useful when calculating HMAC to XOR the input pad and output pad.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HASH</name>
       <description>Hash function selection.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha1</name>
         <description>SHA-1.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha224</name>
         <description>SHA 224.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha256</name>
         <description>SHA 256.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha384</name>
         <description>SHA 384.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha512</name>
         <description>SHA 512.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LAST</name>
       <description>Last Message Bit. This bit shall be set along with the HASH_MSG_SZ register prior to hashing the last 512 or 1024-bit block of the message data. It will allow automatic preprocessing of the last message padding, which includes the trailing bit 1, followed by the respective number of zero bits for the last block size and finally the message length represented in bytes. The bit will be automatically cleared at the same time the HASH DONE is set, designating the completion of the last message hash.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEffect</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>lastMsgData</name>
         <description>Last Message Data.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_CTRL</name>
     <description>CRC Control Register.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>CRC</name>
       <description>Cyclic Redundancy Check Enable. The CRC cannot be enabled if the PRNG is enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MSB</name>
       <description>MSB select. This bit selects the order of calculating CRC on data.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>lsbFirst</name>
         <description>LSB First.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>msbFirst</name>
         <description>MSB First.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CRC">
       <name>PRNG</name>
       <description>Pseudo Random Number Generator Enable. If entropy is disabled, this outputs one byte of pseudo random data per clock cycle. If entropy is enabled, data is output at a rate of one bit per clock cycle.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CRC">
       <name>ENT</name>
       <description>Entropy Enable. If the PRNG is enabled, this mixes the high frequency ring oscillator with the LFSR. If the PRNG is disabled, the raw entropy data is output at a rate of 1 bit per clock. This makes it possible to characterize the quality of the entropy source.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CRC">
       <name>HAM</name>
       <description>Hamming Code Enable. Enable hamming code calculation.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HRST</name>
       <description>Hamming Reset. Reset Hamming code ECC generator for next block.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
       <enumeratedValues>
        <usage>write</usage>
        <enumeratedValue>
         <name>reset</name>
         <description>Starts reset operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA_SRC</name>
     <description>Crypto DMA Source Address.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>DMA Source Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA_DEST</name>
     <description>Crypto DMA Destination Address.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>DMA Destination Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA_CNT</name>
     <description>Crypto DMA Byte Count.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>CNT</name>
       <description>DMA Byte Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>CRYPTO_DIN[%s]</name>
     <description>Crypto Data Input. Data input can be written to this register instead of using the DMA. This register writes to the FIFO. This register occupies four successive words to allow the use of multi-store instructions. Words can be written to any location, they will be placed in the FIFO in the order they are written. The endian swap input control bit affects this register.</description>
     <addressOffset>0x20</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Crypto Data Input. Input can be written to this register instead of using DMA.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>CRYPTO_DOUT[%s]</name>
     <description>Crypto Data Output. Resulting data from cipher calculation. Data is placed in the lower words of these four registers depending on the algorithm. For block cipher modes, this register holds the result of most recent encryption or decryption operation. These registers are affected by the endian swap bits.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Crypto Data Output. Resulting data from cipher calculation. Data is placed in the lower words of these four registers depending on algorithm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_POLY</name>
     <description>CRC Polynomial. The polynomial to be used for Galois Field calculations (CRC or LFSR) should be written to this register. This register is affected by the MSB control bit.</description>
     <addressOffset>0x40</addressOffset>
     <resetValue>0xEDB88320</resetValue>
     <fields>
      <field>
       <name>POLY</name>
       <description>CRC Polynomial. The polynomial to be used for Galois Field calculations (CRC or LFSR) should be written to this register. This register is affected by the MSB control bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_VAL</name>
     <description>CRC Value. This is the state for the Galois Field. This register holds the result of a CRC calculation or the current state of the LFSR. This register is affected by the MSB control bit.</description>
     <addressOffset>0x44</addressOffset>
     <resetValue>0xFFFFFFFF</resetValue>
     <fields>
      <field>
       <name>VAL</name>
       <description>CRC Value. This is the state for the Galois Field. This register holds the result of a CRC calculation or the current state of LFSR. This register is affected by the MSB control bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_PRNG</name>
     <description>Pseudo-Random Number Generator. Output of the Galois Field shift register. This holds the resulting pseudo-random number if entropy is disabled or true random number if entropy is enabled.</description>
     <addressOffset>0x48</addressOffset>
     <resetValue>0</resetValue>
     <fields>
      <field>
       <name>PRNG</name>
       <description>Pseudo-Random Number Generator. Output of the Galois Field shift register. This holds the resulting pseudo-random number if entropy is disabled or true random number if entropy is enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HAM_ECC</name>
     <description>Hamming ECC Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>ECC</name>
       <description>Hamming ECC Value. These bits are the even parity of their corresponding bit groups.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>PAR</name>
       <description>Parity. This is the parity of the entire array.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>even</name>
         <description>Even.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>odd</name>
         <description>Odd.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>CIPHER_INIT[%s]</name>
     <description>Initial Vector. For block cipher operations that use CBC, CFB, OFB, or CNTR modes, this register holds the initial value. This register is updated with each encryption or decryption operation. This register is affected by the endian swap bits.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>IVEC</name>
       <description>Initial Vector. For block cipher operations that use CBC, CFB, OFB, or CNTR modes, this register holds the initial value. This register is updated with each encryption or decryption operation. This register is affected by the endian swap bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>8</dim>
     <dimIncrement>4</dimIncrement>
     <name>CIPHER_KEY[%s]</name>
     <description>Cipher Key.  This register holds the key used for block cipher operations. The lower words are used for block ciphers that use shorter key lengths. This register is affected by the endian swap input control bits.</description>
     <addressOffset>0x60</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>KEY</name>
       <description>Cipher Key. This register holds the key used for block cipher operations. The lower words are used for block ciphers that use shorter kye lengths. This register is affected by the endian swap input control bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>16</dim>
     <dimIncrement>4</dimIncrement>
     <name>HASH_DIGEST[%s]</name>
     <description>This register holds the calculated hash value. This register is affected by the endian swap bits.</description>
     <addressOffset>0x80</addressOffset>
     <fields>
      <field>
       <name>HASH</name>
       <description>This register holds the calculated hash value. This register is affected by the endian swap bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>HASH_MSG_SZ[%s]</name>
     <description>Message Size. This register holds the lowest 32-bit of message size in bytes.</description>
     <addressOffset>0xC0</addressOffset>
     <fields>
      <field>
       <name>MSGSZ</name>
       <description>Message Size. This register holds the lowest 32-bit of message size in bytes.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>A_LENGTH_0</name>
     <description>.AAD Length Register 0.</description>
     <addressOffset>0xD0</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>A_LENGTH</name>
       <description>AAD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>A_LENGTH_1</name>
     <description>.AAD Length Register 1.</description>
     <addressOffset>0xD4</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>A_LENGTH</name>
       <description>AAD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PLD_LENGTH_0</name>
     <description>.PLD Length Register 0.</description>
     <addressOffset>0xD8</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PLD_LENGTH</name>
       <description>PLD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PLD_LENGTH_1</name>
     <description>.LENGTH.</description>
     <addressOffset>0xDC</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PLD_LENGTH</name>
       <description>PLD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>TAGMIC[%s]</name>
     <description>TAG/MIC Registers.</description>
     <addressOffset>0xE0</addressOffset>
     <fields>
      <field>
       <name>TAGMIC</name>
       <description>TAG/MIC output for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_CN</name>
     <description>SCA Control 0 Register.</description>
     <addressOffset>0x100</addressOffset>
     <fields>
      <field>
       <name>STC</name>
       <description>Start Calculation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SCAIE</name>
       <description>SCA Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Abort Operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERMEM</name>
       <description>Erase Cryptographic Memory.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MANPARAM</name>
       <description>ECC Parameter Source.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HWKEY</name>
       <description>Hardware Key Select.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OPCODE</name>
       <description>SCA Opcode.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>MODADDR</name>
       <description>MODULO Address Offset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>ECCSIZE</name>
       <description>ECC Size.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_ACN</name>
     <description>SCA Advanced Control Register.</description>
     <addressOffset>0x104</addressOffset>
     <fields>
      <field>
       <name>MAN</name>
       <description>SCA Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>auto</name>
         <description>Auto Mode</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>manual</name>
         <description>Manual Mode</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AUTOCARRY</name>
       <description>Automatically propagate the carry for the next operation.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PLUSONE</name>
       <description>Enable Carry propagation for the next operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RESSELECT</name>
       <description>ALU Selection.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>CARRYPOS</name>
       <description>To set Carry location.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>10</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_ST</name>
     <description>SCA Status Register.</description>
     <addressOffset>0x108</addressOffset>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SCA Busy.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SCAIF</name>
       <description>SCA Interrupt Flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PVF1</name>
       <description>Point 1 Verification Failed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PVF2</name>
       <description>Point 2 Verification Failed.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FSMERR</name>
       <description>FSM Transition Error.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>COMPERR</name>
       <description>EC Computation Error.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MEMERR</name>
       <description>SCA Memory Access Error.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARRY</name>
       <description>Carry on ongoing operation.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>GTE2I2</name>
       <description>Modulo 2x Result.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ALUNEG1</name>
       <description>ALU 2 SubSign of the subtraction result for ALU_2.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ALUNEG2</name>
       <description>ALU 2 SubSign of the subtraction result for ALU_2.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PPX_ADDR</name>
     <description>PPX Coordinate Data Pointer Register.</description>
     <addressOffset>0x10C</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PPX_ADDR</name>
       <description>Point P Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PPY_ADDR</name>
     <description>PPY Coordinate Data Pointer Register.</description>
     <addressOffset>0x110</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PPY_ADDR</name>
       <description>Point P Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PPZ_ADDR</name>
     <description>PPZ Coordinate Data Pointer Register.</description>
     <addressOffset>0x114</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PPZ_ADDR</name>
       <description>Point P Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PQX_ADDR</name>
     <description>PQX Coordinate Data Pointer Register.</description>
     <addressOffset>0x118</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PQX_ADDR</name>
       <description>Point Q Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PQY_ADDR</name>
     <description>PQY Coordinate Data Pointer Register.</description>
     <addressOffset>0x11C</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PQY_ADDR</name>
       <description>Point Q Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PQZ_ADDR</name>
     <description>PQZ Coordinate Data Pointer Register.</description>
     <addressOffset>0x120</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>PQZ_ADDR</name>
       <description>Point Q Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_RDSA_ADDR</name>
     <description>SCA RDSA Address Register.</description>
     <addressOffset>0x124</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>RDSA_ADDR</name>
       <description>The starting address of the R portion for R, S ECDSA signature.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_RES_ADDR</name>
     <description>SCA Result Address Register.</description>
     <addressOffset>0x128</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>RES_ADDR</name>
       <description>Starting address of result storage.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_OP_BUFF_ADDR</name>
     <description>SCA Operation Buffer Address Register.</description>
     <addressOffset>0x12C</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>OPBUFF_ADDR</name>
       <description>Starting address of operation buffer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_MODDATA</name>
     <description>SCA Modulo Data Input Register.</description>
     <addressOffset>0x130</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>MODDATA</name>
       <description>Used to load the SCA modulo for modular operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--CTB The Cryptographic Toolbox is a combination of cryptographic engines and a secure cryptographic accelerator (SCA) used to provide advanced cryptographic security.-->
  <peripheral>
   <name>DMA</name>
   <description>DMA Controller Fully programmable, chaining capable DMA channels.</description>
   <baseAddress>0x40028000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>DMA0</name>
    <value>28</value>
   </interrupt>
   <interrupt>
    <name>DMA1</name>
    <value>29</value>
   </interrupt>
   <interrupt>
    <name>DMA2</name>
    <value>30</value>
   </interrupt>
   <interrupt>
    <name>DMA3</name>
    <value>31</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>DMA Control Register.</description>
     <addressOffset>0x000</addressOffset>
     <fields>
      <field>
       <name>CHIEN</name>
       <description>Channel 0-3 Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>DMA Interrupt Register.</description>
     <addressOffset>0x004</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>IPEND</name>
       <description>Channel Interrupt.   To clear an interrupt, all active interrupt bits of the DMA_ST must be cleared. The interrupt bits are set only if their corresponding interrupt enable bits are set in DMA_CN.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <cluster>
     <dim>8</dim>
     <dimIncrement>0x20</dimIncrement>
     <name>CH[%s]</name>
     <description>DMA Channel registers.</description>
     <headerStructName>dma_ch</headerStructName>
     <addressOffset>0x100</addressOffset>
     <access>read-write</access>
     <register>
      <name>CFG</name>
      <description>DMA Channel Configuration Register.</description>
      <addressOffset>0x000</addressOffset>
      <fields>
       <field>
        <name>CHIEN</name>
        <description>Channel Enable.  This bit is automatically cleared when DMA_ST.CH_ST changes from 1 to 0.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. Setting this bit to 1 enables DMA_SRC, DMA_DST and DMA_CNT to be reloaded with their corresponding reload registers upon count-to-zero. This bit is also writeable in the Count Reload Register. Refer to the description on Buffer Chaining for use of this bit. If buffer chaining is not used this bit must be written with a 0. This bit should be set after the reload registers have been programmed.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PRI</name>
        <description>DMA Priority.</description>
        <bitOffset>2</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>high</name>
          <description>Highest Priority.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medHigh</name>
          <description>Medium High Priority.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medLow</name>
          <description>Medium Low Priority.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>low</name>
          <description>Lowest Priority.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQSEL</name>
        <description>Request Select. Select DMA request line for this channel. If memory-to-memory is selected, the channel operates as if the request is always active.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>6</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>MEMTOMEM</name>
          <description>Memory To Memory</description>
          <value>0x00</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0RX</name>
          <description>SPI0 RX</description>
          <value>0x01</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1RX</name>
          <description>SPI1 RX</description>
          <value>0x02</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0RX</name>
          <description>I2C0 RX</description>
          <value>0x07</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0RX</name>
          <description>UART0 RX</description>
          <value>0x1C</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0TX</name>
          <description>SPI0 TX</description>
          <value>0x21</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1TX</name>
          <description>SPI1 TX</description>
          <value>0x22</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0TX</name>
          <description>I2C0 TX</description>
          <value>0x27</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0TX</name>
          <description>UART0 TX</description>
          <value>0x3C</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQWAIT</name>
        <description>Request Wait Enable.  When enabled, delay timer start until DMA request transitions from active to inactive.</description>
        <bitOffset>10</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TOSEL</name>
        <description>Timeout Period Select.</description>
        <bitOffset>11</bitOffset>
        <bitWidth>3</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>to4</name>
          <description>Timeout of 3 to 4 prescale clocks.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to8</name>
          <description>Timeout of 7 to 8 prescale clocks.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to16</name>
          <description>Timeout of 15 to 16 prescale clocks.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to32</name>
          <description>Timeout of 31 to 32 prescale clocks.</description>
          <value>3</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to64</name>
          <description>Timeout of 63 to 64 prescale clocks.</description>
          <value>4</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to128</name>
          <description>Timeout of 127 to 128 prescale clocks.</description>
          <value>5</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to256</name>
          <description>Timeout of 255 to 256 prescale clocks.</description>
          <value>6</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to512</name>
          <description>Timeout of 511 to 512 prescale clocks.</description>
          <value>7</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PSSEL</name>
        <description>Pre-Scale Select. Selects the Pre-Scale divider for timer clock input.</description>
        <bitOffset>14</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable timer.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div256</name>
          <description>hclk / 256.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div64k</name>
          <description>hclk / 64k.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div16M</name>
          <description>hclk / 16M.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCWD</name>
        <description>Source Width. In most cases, this will be the data width of each AHB transactions. However, the width will be reduced in the cases where DMA_CNT indicates a smaller value.</description>
        <bitOffset>16</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCINC</name>
        <description>Source Increment Enable. This bit enables DMA_SRC increment upon every AHB transaction. This bit is forced to 0 for DMA receive from peripherals.</description>
        <bitOffset>18</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTWD</name>
        <description>Destination Width. Indicates the width of the each AHB transactions to the destination peripheral or memory. (The actual width may be less than this if there are insufficient bytes in the DMA FIFO for the full width).</description>
        <bitOffset>20</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTINC</name>
        <description>Destination Increment Enable. This bit enables DMA_DST increment upon every AHB transaction. This bit is forced to 0 for DMA transmit to peripherals.</description>
        <bitOffset>22</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>BRST</name>
        <description>Burst Size. The number of bytes to be transferred into and out of the DMA FIFO in a single burst.  Burst size equals 1 + value stored in this field.</description>
        <bitOffset>24</bitOffset>
        <bitWidth>5</bitWidth>
       </field>
       <field>
        <name>CHDIEN</name>
        <description>Channel Disable Interrupt Enable. When enabled, the IPEND will be set to 1 whenever CH_ST changes from 1 to 0.</description>
        <bitOffset>30</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZIEN</name>
        <description>Count-to-zero Interrupts Enable. When enabled, the IPEND will be set to 1 whenever a count-to-zero event occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
     <register>
      <name>ST</name>
      <description>DMA Channel Status Register.</description>
      <addressOffset>0x004</addressOffset>
      <fields>
       <field>
        <name>CH_ST</name>
        <description>Channel Status. This bit is used to indicate to the programmer when it is safe to change the configuration, address, and count registers for the channel. Whenever this bit is cleared by hardware,  the DMA_CFG.CHEN bit is also cleared (if not cleared already).</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>IPEND</name>
        <description>Channel Interrupt.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>inactive</name>
          <description>No interrupt is pending.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pending</name>
          <description>An interrupt is pending.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZ_ST</name>
        <description>Count-to-Zero (CTZ) Event Interrupt Flag</description>
        <bitOffset>2</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>RLD_ST</name>
        <description>Reload Event Interrupt Flag.</description>
        <bitOffset>3</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>BUS_ERR</name>
        <description>Bus Error. Indicates that an AHB abort was received and the channel has been disabled.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>TO_ST</name>
        <description>Time-Out Event Interrupt Flag.</description>
        <bitOffset>6</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC</name>
      <description>Source Device Address. If SRCINC=1, the counter bits are incremented by 1,2, or 4, depending on the data width of each AHB cycle. For peripheral transfers, some or all of the actual address bits are fixed. If SRCINC=0, this register remains constant. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with the contents of DMA_SRC_RLD.</description>
      <addressOffset>0x008</addressOffset>
      <fields>
       <field>
        <name>SRC</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST</name>
      <description>Destination Device Address. For peripheral transfers, some or all of the actual address bits are fixed. If DSTINC=1, this register is incremented on every AHB write out of the DMA FIFO. They are incremented by 1, 2, or 4, depending on the data width of each AHB cycle. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with DMA_DST_RLD.</description>
      <addressOffset>0x00C</addressOffset>
      <fields>
       <field>
        <name>DST</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT</name>
      <description>DMA Counter. The user loads this register with the number of bytes to transfer. This counter decreases on every AHB cycle into the DMA FIFO. The decrement will be 1, 2, or 4 depending on the data width of each AHB cycle. When the counter reaches 0, a count-to-zero condition is triggered.</description>
      <addressOffset>0x010</addressOffset>
      <fields>
       <field>
        <name>CNT</name>
        <description>DMA Counter.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC_RLD</name>
      <description>Source Address Reload Value. The value of this register is loaded into DMA0_SRC upon a count-to-zero condition.</description>
      <addressOffset>0x014</addressOffset>
      <fields>
       <field>
        <name>SRC_RLD</name>
        <description>Source Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST_RLD</name>
      <description>Destination Address Reload Value. The value of this register is loaded into DMA0_DST upon a count-to-zero condition.</description>
      <addressOffset>0x018</addressOffset>
      <fields>
       <field>
        <name>DST_RLD</name>
        <description>Destination Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT_RLD</name>
      <description>DMA Channel Count Reload Register.</description>
      <addressOffset>0x01C</addressOffset>
      <fields>
       <field>
        <name>CNT_RLD</name>
        <description>Count Reload Value. The value of this register is loaded into DMA0_CNT upon a count-to-zero condition.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. This bit should be set after the address reload registers have been programmed. This bit is automatically cleared to 0 when reload occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
    </cluster>
   </registers>
  </peripheral>
<!--DMA DMA Controller Fully programmable, chaining capable DMA channels.-->
  <peripheral>
   <name>FCR</name>
   <description>Function Control Register.</description>
   <baseAddress>0x40000800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>FCTRL0</name>
     <description>Register 0.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>I2C0_SDA_FILTER_EN</name>
       <description>I2C0 SDA Glitch Filter Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C0_SCL_FILTER_EN</name>
       <description>I2C0 SCL Glitch Filter Enable.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--FCR Function Control Register.-->
  <peripheral>
   <name>FLC</name>
   <description>Flash Memory Control.</description>
   <prependToName>FLSH_</prependToName>
   <baseAddress>0x40029000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Flash_Controller</name>
    <description>Flash Controller interrupt.</description>
    <value>23</value>
   </interrupt>
   <registers>
    <register>
     <name>FLSH_ADDR</name>
     <description>Flash Write Address.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Address for next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FLSH_CLKDIV</name>
     <description>Flash Clock Divide. The clock (PLL0) is divided by this value to generate a 1 MHz clock for Flash controller.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x00000064</resetValue>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>Flash Clock Divide. The clock is divided by this value to generate a 1MHz clock for flash controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FLSH_CN</name>
     <description>Flash Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>WR</name>
       <description>Write.  This bit is automatically cleared after the operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="WR">
       <name>ME</name>
       <description>Mass Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="WR">
       <name>PGE</name>
       <description>Page Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERASE_CODE</name>
       <description>Erase Code.  The ERASE_CODE must be set up property before erase operation can be initiated. These bits are automatically cleared after the operation is complete.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>erasePage</name>
         <description>Enable Page Erase.</description>
         <value>0x55</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>eraseAll</name>
         <description>Enable Mass Erase. The debug port must be enabled.</description>
         <value>0xAA</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PEND</name>
       <description>Flash Pending.  When Flash operation is in progress (busy), Flash reads and writes will fail. When PEND is set, write to all Flash registers, with exception of the Flash interrupt register, are ignored.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UNLOCK</name>
       <description>Flash Unlock.  The correct unlock code must be written to these four bits before any Flash write or erase operation is allowed.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Flash Unlocked.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Flash Locked.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>FLSH_INT</name>
     <description>Flash Interrupt Register.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>Flash Done Interrupt.  This bit is set to 1 upon Flash write or erase completion.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AF</name>
       <description>Flash Access Fail.  This bit is set when an attempt is made to write the flash while the flash is busy or the flash is locked. This bit can only be set to 1 by hardware.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noError</name>
         <description>No Failure.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Failure occurs.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DONEIE</name>
       <description>Flash Done Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DONEIE">
       <name>AFIE</name>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>FLSH_DATA[%s]</name>
     <description>Flash Write Data.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ACNTL</name>
     <description>Access Control Register. Writing the ACTRL register with the following values in the order shown, allows read and write access to the system and user Information block:
		pflc-actrl = 0x3a7f5ca3;
		pflc-actrl = 0xa1e34f20;
		pflc-actrl = 0x9608b2c1. When unlocked, a write of any word will disable access to system and user information block. Readback of this register is always zero.</description>
     <addressOffset>0x40</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>ADATA</name>
       <description>Access control.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--FLC Flash Memory Control.-->
  <peripheral>
   <name>GCR</name>
   <description>Global Control Registers.</description>
   <baseAddress>0x40000000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SYSCTRL</name>
     <description>System Control.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0xFFFFFFFE</resetMask>
     <fields>
      <field>
       <name>BSTAPEN</name>
       <description>Boundary Scan TAP enable. When enabled, the JTAG port is connected to the Boundary Scan TAP. Otherwise, the port is connected to the ARM ICE function. This bit is reset by the POR. Reset value and access depend on the part number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Boundary Scan TAP port disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Boundary Scan TAP port enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLASH0_PAGE_FLIP</name>
       <description>Flips the Flash bottom and top halves. (Depending on the total flash size, each half is either 256K or 512K). Initiating a flash page flip will cause a flush of both the data buffer on the DCODE bus and the internal instruction buffer.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Physical layout matches logical layout.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>swapped</name>
         <description>Bottom half mapped to logical top half and vice versa.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICC0_FLUSH</name>
       <description>Code Cache Flush. This bit is used to flush the code caches and the instruction buffer of the Cortex-M4. </description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Code Cache Operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Code Caches and CPU instruction buffer are flushed </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCHK</name>
       <description>Compute ROM Checksum. This bit is self-cleared when calculation is completed. Once set, software clearing this bit is ignored and the bit will remain set until the operation is completed.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CHKRES</name>
       <description>ROM Checksum Result. This bit is only valid when CHKRD=1.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>pass</name>
         <description>ROM Checksum Correct.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>fail</name>
         <description>ROM Checksum Fail.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MDU_KEYSZ</name>
       <description>MDU Key Size. This register defines the size of AES key that is used in the memory protection logic.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>128b</name>
         <description>128 bit key</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>256b</name>
         <description>256 bit key</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST0</name>
     <description>Reset.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>DMA</name>
       <description>DMA Reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>WDT0</name>
       <description>Watchdog Timer Reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO0</name>
       <description>GPIO0 Reset. Setting this bit to 1 resets GPIO0 pins to their default states.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO1</name>
       <description>GPIO1 Reset. Setting this bit to 1 resets GPIO1 pins to their default states.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR0</name>
       <description>Timer0 Reset. Setting this bit to 1 resets Timer 0 blocks.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR1</name>
       <description>Timer1 Reset. Setting this bit to 1 resets Timer 1 blocks.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR2</name>
       <description>Timer2 Reset. Setting this bit to 1 resets Timer 2 blocks.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR3</name>
       <description>Timer3 Reset. Setting this bit to 1 resets Timer 3 blocks.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART0</name>
       <description>UART0 Reset. Setting this bit to 1 resets all UART 0 blocks.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI0</name>
       <description>SPI0 Reset. Setting this bit to 1 resets all SPI 0 blocks.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI1</name>
       <description>SPI1 Reset. Setting this bit to 1 resets all SPI 1 blocks.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>I2C0</name>
       <description>I2C0 Reset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>CRYPTO</name>
       <description>Cryptographic Reset. Setting this bit to 1 resets the AES block, the SHA block and the DES block.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SOFT</name>
       <description>Soft Reset. Setting this bit to 1 resets everything except the CPU and the watchdog timer.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>PERIPH</name>
       <description>Peripheral Reset. Setting this bit to 1 resets all peripherals. The CPU core, the watchdog timer, and all GPIO pins are unaffected by this reset.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SYS</name>
       <description>System Reset. Setting this bit to 1 resets the CPU core and all peripherals, including the watchdog timer.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKCTRL</name>
     <description>Clock Control.</description>
     <addressOffset>0x08</addressOffset>
     <resetValue>0x00000008</resetValue>
     <fields>
      <field>
       <name>SYSCLK_DIV</name>
       <description>Prescaler Select. This 3 bit field sets the system operating frequency by controlling the prescaler that divides the output of the PLL0.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSCLK_SEL</name>
       <description>Clock Source Select. This 3 bit field selects the source for the system clock.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>IPO</name>
         <description>Internal Primary Oscilatior Clock</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INRO</name>
         <description>8kHz Internal Nano Ring Oscillator is used for the system clock.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBRO</name>
         <description>The internal Baud Rate oscillator is used for the system clock.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSCLK_RDY</name>
       <description>Clock Ready. This read only bit reflects whether the currently selected system clock source is running.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Switchover to the new clock source (as selected by CLKSEL) has not yet occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>System clock running from CLKSEL clock source.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCD</name>
       <description>Cryptographic clock divider</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>non_div</name>
         <description>The cryptographic accelerator clock is running in non-divided mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div</name>
         <description>The cryptographic accelerator clock is running in divided mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IPO_EN</name>
       <description>96MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="IPO_EN">
       <name>IBRO_EN</name>
       <description>8MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBRO_VS</name>
       <description>7.3728MHz Internal Oscillator Voltage Source Select</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IPO_RDY</name>
       <description>Internal Primary Oscillator Ready.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="IPO_RDY">
       <name>IBRO_RDY</name>
       <description>Internal Baud Rate Oscillator Ready.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="IPO_RDY">
       <name>INRO_RDY</name>
       <description>Internal Nano Ring Oscillator Low Frequency Reference Clock Ready.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PM</name>
     <description>Power Management.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>MODE</name>
       <description>Operating Mode. This two bit field selects the current operating mode for the device. Note that code execution only occurs during ACTIVE mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Active Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>DeepSleep Mode.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>backup</name>
         <description>Backup Mode.</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIO_WE</name>
       <description>GPIO Wake Up Enable. This bit enables all GPIO pins as potential wakeup sources. Any GPIO configured for wakeup is capable of causing an exit from IDLE or STANDBY modes when this bit is set.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IPO_PD</name>
       <description>Internal Primary Oscilator Power Down. This bit selects the power state in DEEPSLEEP mode. </description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IBRO_PD</name>
       <description>Internal Baud Rate Oscillator power down. This bit selects the power state in DEEPSLEEP mode. </description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIV</name>
     <description>Peripheral Clock Divider.</description>
     <addressOffset>0x18</addressOffset>
     <resetValue>0x00000001</resetValue>
     <fields>
      <field>
       <name>PCF</name>
       <description>These bits determine the clock frequency for the UART, I2C and Key Pad peripherals. These peripherals have an adaptive clock generator that dynamically adjusts the peripheral frequency based on the main system bus frequency. These bits are dynamically updated when the PLL0 is selected as the system clock source and are set by hardware. These bits determine the clock frequency for the UART, I2C and Key Pad peripherals. These peripherals have an adaptive clock generator that dynamically adjusts the peripheral frequency based on the main system bus frequency. These bits are dynamically updated when the PLL0 is selected as the system clock source and are set by hardware.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>96MHz</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>48MHz</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>24MHz</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12MHz</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6MHz</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3MHz</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PCFWEN</name>
       <description>PCF Write Enable. This bit allows the PCF Register bits to be updated by Software.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>blocked</name>
         <description>Writes to PCF are blocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>allowed</name>
         <description>Writes to PCF are allowed</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AON_CLKDIV</name>
       <description>Always-ON (AON) domain CLock Divider. These bits define the AON domain clock divider.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div_4</name>
         <description>PCLK divide by 4.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div_8</name>
         <description>PCLK divide by 8.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div_16</name>
         <description>PCLK divide by 16.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div_32</name>
         <description>PCLK divide by 32.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIS0</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>GPIO0</name>
       <description>GPIO0 Clock Disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="GPIO0">
       <name>GPIO1</name>
       <description>GPIO1 Disable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>DMA</name>
       <description>DMA Disable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPI0</name>
       <description>SPI 0 Disable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPI1</name>
       <description>SPI 1 Disable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>UART0</name>
       <description>UART 0 Disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>I2C0</name>
       <description>I2C 0 Disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>CRYPTO</name>
       <description>Crypto Disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR0</name>
       <description>Timer 0 Disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR1</name>
       <description>Timer 1 Disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR2</name>
       <description>Timer 2 Disable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR3</name>
       <description>Timer 3 Disable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCTRL</name>
     <description>Memory Clock Control Register.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>FWS</name>
       <description>Flash Wait State. These bits define the number of wait-state cycles per Flash data read access. Minimum wait state is 2.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>RAMWS_EN</name>
       <description>SRAM Wait State Enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM0LS_EN</name>
       <description>System RAM 0 Light Sleep Mode.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM1LS_EN</name>
       <description>System RAM 1 Light Sleep Mode.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM2LS_EN</name>
       <description>System RAM 2 Light Sleep Mode.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM3LS_EN</name>
       <description>System RAM 3 Light Sleep Mode.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM4LS_EN</name>
       <description>System RAM 4 Light Sleep Mode.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>ICC0LS_EN</name>
       <description>ICache RAM Light Sleep Mode.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>ROMLS_EN</name>
       <description>ROM Light Sleep Mode.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMZ</name>
     <description>Memory Zeroize Control.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>System RAM Block 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM1</name>
       <description>System RAM Block 1.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM2</name>
       <description>System RAM Block 2.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM3</name>
       <description>System RAM Block 3.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM4</name>
       <description>System RAM Block 4.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>ICC0</name>
       <description>Instruction Cache.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYSST</name>
     <description>System Status Register.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>ICELOCK</name>
       <description>ARM ICE Lock Status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>ICE is unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>ICE is locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST1</name>
     <description>Reset 1.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>WDT1</name>
       <description>WDT1 Reset.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="WDT1">
       <name>SFES</name>
       <description>Serial Flash Emulation Slave Reset.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIS1</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>TRNG</name>
       <description>TRNG Disable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="TRNG">
       <name>WDT0</name>
       <description>WDT0 Clock Disable</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="TRNG">
       <name>WDT1</name>
       <description>WDT1 Clock Disable</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="TRNG">
       <name>SFES</name>
       <description>Serial Flash emulation slave Clock Disable</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EVENTEN</name>
     <description>Event Enable Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>DMA</name>
       <description>Enable DMA event. When this bit is set, a DMA event will cause an RXEV event to wake the CPU from WFE sleep mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX</name>
       <description>Enable RXEV pin event. When this bit is set, a logic high of GPIO0[24] will cause an RXEV event to wake the CPU from WFE sleep mode. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX</name>
       <description>Enable TXEV pin event. When this bit is set, TXEV event from the CPU is output to GPIO[25].</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>REVISION</name>
     <description>Revision Register.</description>
     <addressOffset>0x50</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>REVISION</name>
       <description>Manufacturer Chip Revision. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYSIE</name>
     <description>System Status Interrupt Enable Register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ICEUNLOCK</name>
       <description>ARM ICE Unlock Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCERR</name>
     <description>ECC Error Register</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>ECC System RAM0 Error Flag. Write 1 to clear.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM1</name>
       <description>ECC System RAM1 Error Flag. Write 1 to clear.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM2</name>
       <description>ECC System RAM2 Error Flag. Write 1 to clear.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM3</name>
       <description>ECC System RAM3 Error Flag. Write 1 to clear.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM4</name>
       <description>ECC System RAM4 Error Flag. Write 1 to clear.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCCED</name>
     <description>ECC Not Double Error Detect Register</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>ECC System RAM0 Error Flag. Write 1 to clear.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM1</name>
       <description>ECC System RAM1 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM2</name>
       <description>ECC System RAM2 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM3</name>
       <description>ECC System RAM3 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM4</name>
       <description>ECC System RAM4 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCIE</name>
     <description>ECC IRQ Enable Register</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>ECC System RAM0 Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM1</name>
       <description>ECC System RAM1 Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM2</name>
       <description>ECC System RAM2 Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM3</name>
       <description>ECC System RAM3 Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM4</name>
       <description>ECC System RAM4 Interrupt Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCADDR</name>
     <description>ECC Error Address Register</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>DATARAMADDR</name>
       <description>ECC Error Address/DATA RAM Error Address</description>
       <bitOffset>0</bitOffset>
       <bitWidth>14</bitWidth>
      </field>
      <field>
       <name>DATARAMBANK</name>
       <description>ECC Error Address/DATA RAM Error Bank</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATARAMERR</name>
       <description>DATA RAM ERROR</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TAGRAMADDR</name>
       <description>ECC Error Address/TAG RAM Error Address</description>
       <bitOffset>16</bitOffset>
       <bitWidth>14</bitWidth>
      </field>
      <field>
       <name>TAGRAMBANK</name>
       <description>ECC Error Address/TAG RAM Error Bank</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TAGRAMERR</name>
       <description>TAG RAM ERROR</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--GCR Global Control Registers.-->
  <peripheral>
   <name>GPIO0</name>
   <description>Individual I/O for each GPIO</description>
   <groupName>GPIO</groupName>
   <baseAddress>0x40008000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>GPIO0</name>
    <description>GPIO0 interrupt.</description>
    <value>24</value>
   </interrupt>
   <registers>
    <register>
     <name>EN0</name>
     <description>GPIO Function Enable Register. Each bit controls the GPIO_EN setting for one GPIO pin on the associated port.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN0</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ALTERNATE</name>
         <description>Alternate function enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>GPIO</name>
         <description>GPIO function is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN0_SET</name>
     <description>GPIO Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN0_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN0_CLR</name>
     <description>GPIO Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN0_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN</name>
     <description>GPIO Output Enable Register. Each bit controls the GPIO_OUT_EN setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>GPIO Output Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>GPIO Output Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN_SET</name>
     <description>GPIO Output Enable Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN_CLR</name>
     <description>GPIO Output Enable Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT</name>
     <description>GPIO Output Register. Each bit controls the GPIO_OUT setting for one pin in the associated port.  This register can be written either directly, or by using the GPIO_OUT_SET and GPIO_OUT_CLR registers.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>low</name>
         <description>Drive Logic 0 (low) on GPIO output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>high</name>
         <description>Drive logic 1 (high) on GPIO output.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_SET</name>
     <description>GPIO Output Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT to 1, without affecting other bits in that register.</description>
     <addressOffset>0x1C</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_OUT bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_CLR</name>
     <description>GPIO Output Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x20</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IN</name>
     <description>GPIO Input Register. Read-only register to read from the logic states of the GPIO pins on this port.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_IN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MOD</name>
     <description>GPIO Interrupt Mode Register. Each bit in this register controls the interrupt mode setting for the associated GPIO pin on this port.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_MOD</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>level</name>
         <description>Interrupts for this pin are level triggered.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>edge</name>
         <description>Interrupts for this pin are edge triggered.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_POL</name>
     <description>GPIO Interrupt Polarity Register. Each bit in this register controls the interrupt polarity setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_POL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>falling</name>
         <description>Interrupts are latched on a falling edge or low level condition for this pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rising</name>
         <description>Interrupts are latched on a rising edge or high condition for this pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>IN_EN</name>
     <description>GPIO Input Enable</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>GPIO_IN_EN</name>
       <description>Connects corresponding input pad to specified input pin for reading the pin state using GPIOn_IN register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_connected</name>
         <description>Input not connected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>connected</name>
         <description>Input pin connected to the pad.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>GPIO Interrupt Enable Register. Each bit in this register controls the GPIO interrupt enable for the associated pin on the GPIO port.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupts are disabled for this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupts are enabled for this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN_SET</name>
     <description>GPIO Interrupt Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_INT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_INT_EN bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN_CLR</name>
     <description>GPIO Interrupt Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear GPIO_INT_EN bit in this position to '0'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_STAT</name>
     <description>GPIO Interrupt Status Register. Each bit in this register contains the pending interrupt status for the associated GPIO pin in this port.</description>
     <addressOffset>0x40</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_INT_STAT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Interrupt is pending on this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An Interrupt is pending on this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_CLR</name>
     <description>GPIO Status Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_STAT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>GPIO Wake Enable Register. Each bit in this register controls the PMU wakeup enable for the associated GPIO pin in this port.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>PMU wakeup for this GPIO is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>PMU wakeup for this GPIO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN_SET</name>
     <description>GPIO Wake Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_WAKE_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN_CLR</name>
     <description>GPIO Wake Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_WAKE_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_DUAL_EDGE</name>
     <description>GPIO Interrupt Dual Edge Mode Register. Each bit in this register selects dual edge mode for the associated GPIO pin in this port.</description>
     <addressOffset>0x5C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_DUAL_EDGE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Dual Edge mode is enabled. If edge-triggered interrupts are enabled on this GPIO pin, then both rising and falling edges will trigger interrupts regardless of the GPIO_INT_POL setting.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PDPU_SEL0</name>
     <description>GPIO Input Mode Config 1. Each bit in this register enables the weak pull-up for the associated GPIO pin in this port.</description>
     <addressOffset>0x60</addressOffset>
     <fields>
      <field>
       <name>GPIO_PDPU_SEL0</name>
       <description>The two bits in GPIO_PDPU_SEL0 and GPIO_PDPU_SEL1 for each GPIO pin work together to determine the pad mode when the GPIO is set to input mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>impedance</name>
         <description>High Impedance.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pu</name>
         <description>Weak pull-up mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pd</name>
         <description>weak pull-down mode.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PDPU_SEL1</name>
     <description>GPIO Input Mode Config 2. Each bit in this register enables the weak pull-up for the associated GPIO pin in this port.</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>GPIO_PDPU_SEL1</name>
       <description>The two bits in GPIO_PDPU_SEL0 and GPIO_PDPU_SEL1 for each GPIO pin work together to determine the pad mode when the GPIO is set to input mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>impedance</name>
         <description>High Impedance.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pu</name>
         <description>Weak pull-up mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pd</name>
         <description>weak pull-down mode.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1</name>
     <description>GPIO Alternate Function Enable Register. Each bit in this register selects between primary/secondary functions for the associated GPIO pin in this port.</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN1</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>primary</name>
         <description>Primary function selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>secondary</name>
         <description>Secondary function selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1_SET</name>
     <description>GPIO Alternate Function Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN1 to 1, without affecting other bits in that register.</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN1_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1_CLR</name>
     <description>GPIO Alternate Function Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN1 to 0, without affecting other bits in that register.</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN1_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DS_SEL0</name>
     <description>GPIO Drive Strength  Register. Each bit in this register selects the drive strength for the associated GPIO pin in this port. Refer to the Datasheet for sink/source current of GPIO pins in each mode.</description>
     <addressOffset>0xB0</addressOffset>
     <fields>
      <field>
       <name>DS_SEL0</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ld</name>
         <description>GPIO port pin is in low-drive mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>hd</name>
         <description>GPIO port pin is in high-drive mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DS_SEL1</name>
     <description>GPIO Drive Strength 1 Register. Each bit in this register selects the drive strength for the associated GPIO pin in this port. Refer to the Datasheet for sink/source current of GPIO pins in each mode.</description>
     <addressOffset>0xB4</addressOffset>
     <fields>
      <field>
       <name>DS_SEL1</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PSSEL</name>
     <description>GPIO Pull Select Mode.</description>
     <addressOffset>0xB8</addressOffset>
     <fields>
      <field>
       <name>PSSEL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--GPIO0 Individual I/O for each GPIO-->
  <peripheral derivedFrom="GPIO0">
   <name>GPIO1</name>
   <description>Individual I/O for each GPIO 1</description>
   <baseAddress>0x40009000</baseAddress>
   <interrupt>
    <name>GPIO1</name>
    <description>GPIO1 IRQ</description>
    <value>25</value>
   </interrupt>
  </peripheral>
<!--GPIO1 Individual I/O for each GPIO 1-->
  <peripheral>
   <name>I2C0</name>
   <description>Inter-Integrated Circuit.</description>
   <groupName>I2C</groupName>
   <baseAddress>0x4001D000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>I2C0</name>
    <description>I2C0 IRQ</description>
    <value>13</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>Control Register0.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>I2CEN</name>
       <description>I2C Enable.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable I2C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable I2C.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST</name>
       <description>Master Mode Enable.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>slave_mode</name>
         <description>Slave Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>master_mode</name>
         <description>Master Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GCEN</name>
       <description>General Call Address Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Ignore Gneral Call Address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Acknowledge general call address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXM</name>
       <description>Interactive Receive Mode.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Interactive Receive Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Interactive Receive Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ACK</name>
       <description>Data Acknowledge. This bit defines the acknowledge bit returned by the I2C receiver while IRXM = 1 HW forces ACK to 0 when IRXM = 0.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>ack</name>
         <description>return ACK (pulling SDA LOW).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>nack</name>
         <description>return NACK (leaving SDA HIGH).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCLO</name>
       <description>SCL Output. This bits control SCL output when SWOE =1.</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>drive_scl_low</name>
         <description>Drive SCL low. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>release_scl</name>
         <description>Release SCL.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDAO</name>
       <description>SDA Output. This bits control SDA output when SWOE = 1. </description>
       <bitRange>[7:7]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>drive_sda_low</name>
         <description>Drive SDA low. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>release_sda</name>
         <description>Release SDA.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL</name>
       <description>SCL status. This bit reflects the logic gate of SCL signal. </description>
       <bitRange>[8:8]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>SDA</name>
       <description>SDA status. THis bit reflects the logic gate of SDA signal.</description>
       <bitRange>[9:9]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>SWOE</name>
       <description>Software Output Enable.</description>
       <bitRange>[10:10]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>outputs_disable</name>
         <description>I2C Outputs SCLO and SDAO disabled. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>outputs_enable</name>
         <description>I2C Outputs SCLO and SDAO enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READ</name>
       <description>Read. This bit reflects the R/W bit of an address match (AMI = 1) or general call match (GCI = 1). This bit is valid 3 cycles after the relevant interrupt bit is set.</description>
       <bitRange>[11:11]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>write</name>
         <description>Write.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>read</name>
         <description>Read.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCLSTRD</name>
       <description>This bit will disable slave clock stretching when set.</description>
       <bitRange>[12:12]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Slave clock stretching enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Slave clock stretching disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCLPPM</name>
       <description>SCL Push-Pull Mode. This bit controls whether SCL is operated in a the I2C standard open-drain mode, or in a non-standard push-pull mode where the Hi-Z output isreplaced with Drive-1. The non-standard mode should only be used when operating as a master and communicating with slaves that are guaranteed to never drive SCL low. </description>
       <bitRange>[13:13]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Standard open-drain operation:
					drive low for 0, Hi-Z for 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Non-standard push-pull operation:
					drive low for 0, drive high for 1</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ST</name>
     <description>Status Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>BUS</name>
       <description>Bus Status.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>I2C Bus Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>I2C Bus Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXE</name>
       <description>RX empty.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXF</name>
       <description>RX Full.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_full</name>
         <description>Not Full.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>full</name>
         <description>Full.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXE</name>
       <description>TX Empty.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXF</name>
       <description>TX Full.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CKMD</name>
       <description>Clock Mode.</description>
       <bitRange>[5:5]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_actively_driving_scl_clock</name>
         <description>Device not actively driving SCL clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>actively_driving_scl_clock</name>
         <description>Device operating as master and actively driving SCL clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ST</name>
       <description>Status Controller.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT0</name>
     <description>Interrupt Status Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>DONEI</name>
       <description>Transfer Done Interrupt.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXMI</name>
       <description>Interactive Receive Interrupt.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GCI</name>
       <description>Slave General Call Address Match Interrupt.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AMI</name>
       <description>Slave Address Match Interrupt.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTHI</name>
       <description>Receive Threshold Interrupt. This bit is automaticcaly cleared when RX_FIFO is below the threshold level.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. RX_FIFO equal or more bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXTHI</name>
       <description>Transmit Threshold Interrupt. This bit is automaticcaly cleared when TX_FIFO is above the threshold level.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. TX_FIFO has equal or less bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOPI</name>
       <description>STOP Interrupt.</description>
       <bitRange>[6:6]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. TX_FIFO has equal or less bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADRACKI</name>
       <description>Address Acknowledge Interrupt.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ARBERI</name>
       <description>Arbritation error Interrupt.</description>
       <bitRange>[8:8]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TOERI</name>
       <description>timeout Error Interrupt.</description>
       <bitRange>[9:9]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADRERI</name>
       <description>Address NACK Error Interrupt.</description>
       <bitRange>[10:10]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATERI</name>
       <description>Data NACK Error Interrupt.</description>
       <bitRange>[11:11]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DNRERI</name>
       <description>Do Not Respond Error Interrupt.</description>
       <bitRange>[12:12]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STRTERI</name>
       <description>Start Error Interrupt.</description>
       <bitRange>[13:13]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOPERI</name>
       <description>Stop Error Interrupt.</description>
       <bitRange>[14:14]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXLOI</name>
       <description>Transmit Lock Out Interrupt.</description>
       <bitRange>[15:15]</bitRange>
      </field>
      <field>
       <name>RDAMI</name>
       <description>Slave Read Address Match Interrupt.</description>
       <bitRange>[22:22]</bitRange>
      </field>
      <field>
       <name>WRAMI</name>
       <description>Slave Write Address Match Interrupt.</description>
       <bitRange>[23:23]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN0</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>DONEIE</name>
       <description>Transfer Done Interrupt Enable.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when DONE = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IRXMIE</name>
       <description>Description not available.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when RX_MODE = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GCIE</name>
       <description>Slave mode general call address match received input enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when GEN_CTRL_ADDR = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AMIE</name>
       <description>Slave mode incoming address match interrupt.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when ADDR_MATCH = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTHIE</name>
       <description>RX FIFO Above Treshold Level Interrupt Enable.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXTHIE</name>
       <description>TX FIFO Below Treshold Level Interrupt Enable.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOPIE</name>
       <description>Stop Interrupt Enable</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when STOP = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADRACKIE</name>
       <description>Received Address ACK from Slave Interrupt.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ARBERIE</name>
       <description>Master Mode Arbitration Lost Interrupt.</description>
       <bitRange>[8:8]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TOERIE</name>
       <description>Timeout Error Interrupt Enable.</description>
       <bitRange>[9:9]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADRERIE</name>
       <description>Master Mode Address NACK Received Interrupt.</description>
       <bitRange>[10:10]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATERIE</name>
       <description>Master Mode Data NACK Received Interrupt.</description>
       <bitRange>[11:11]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DNRERIE</name>
       <description>Slave Mode Do Not Respond Interrupt.</description>
       <bitRange>[12:12]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STRTERIE</name>
       <description>Out of Sequence START condition detected interrupt.</description>
       <bitRange>[13:13]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOPERIE</name>
       <description>Out of Sequence STOP condition detected interrupt.</description>
       <bitRange>[14:14]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXLOIE</name>
       <description>TX FIFO Locked Out Interrupt.</description>
       <bitRange>[15:15]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT1</name>
     <description>Interrupt Status Register 1.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>RXOFI</name>
       <description>Receiver Overflow Interrupt. When operating as a slave receiver, this bit is set when you reach the first data bit and the RX FIFO and shift register are both full.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXUFI</name>
       <description>Transmit Underflow Interrupt. When operating as a slave transmitter, this bit is set when you reach the first data bit and the TX FIFO is empty and the master is still asking for more data (i.e the master hasn't sent a NACK yet).</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN1</name>
     <description>Interrupt Staus Register 1.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RXOFIE</name>
       <description>Receiver Overflow Interrupt Enable.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXUFIE</name>
       <description>Transmit Underflow Interrupt Enable.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>FIFO Configuration Register.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>RXLEN</name>
       <description>Receive FIFO Length.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>TXLEN</name>
       <description>Transmit FIFO Length.</description>
       <bitRange>[15:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RXCFG</name>
     <description>Receive Control Register 0.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>DNR</name>
       <description>Do Not Respond.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>respond</name>
         <description>Always respond to address match.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>not_respond_rx_fifo_empty</name>
         <description>Do not respond to address match when RX_FIFO is not empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXFSH</name>
       <description>Receive FIFO Flush. This bit is automatically cleared to 0 after the operation. Setting this bit to 1 will affect RX_FIFO status.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_flushed</name>
         <description>FIFO not flushed.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush RX_FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTH</name>
       <description>Receive FIFO Threshold. These bits define the RX_FIFO interrupt threshold.</description>
       <bitRange>[11:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>RX</name>
     <description>Receive Control Register 1.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>RXCNT</name>
       <description>Receive Count Bits. These bits define the number of bytes to be received in a transaction, except for the case RXCNT = 0. RXCNT = 0 means 256 bytes to be received in a transaction.</description>
       <bitRange>[7:0]</bitRange>
      </field>
      <field>
       <name>RXFIFO</name>
       <description>Receive FIFO Count. These bits reflect the number of byte in the RX_FIFO. These bits are flushed when I2CEN = 0.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TXCFG</name>
     <description>Transmit Control Register 0.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>TXPRELD</name>
       <description>Transmit FIFO Preaload Mode. Setting this bit will allow for high speed application to preload the transmit FIFO prior to Slave Address Match.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>TXRDYMMODE</name>
       <description>Transmit FIFO Ready Manual Mode.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>HW control of I2CTXRDY enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>HW control of I2CTXRDY disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXFSH</name>
       <description>Transmit FIFO Flush. This bit is automatically cleared to 0 after the operation.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_flushed</name>
         <description>FIFO not flushed.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush TX_FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXTH</name>
       <description>Transmit FIFO Threshold. These bits define the TX_FIFO interrupt threshold.</description>
       <bitRange>[11:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>TX</name>
     <description>Transmit Control Register 1.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>TXRDY</name>
       <description>Transmit FIFO Preload Ready.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>TXLAST</name>
       <description>Transmit Lasr. Used in slave mode only. (Cleared by hardware)</description>
       <bitRange>[1:1]</bitRange>
      </field>
      <field>
       <name>TXFIFO</name>
       <description>Transmit FIFO Count. These bits reflect the number of bytes in the TX_FIFO.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>Data Register.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data is read from or written to this location. Transmit and receive FIFO are separate but both are addressed at this location.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MCN</name>
     <description>Master Control Register.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>START</name>
       <description>Setting this bit to 1 will start a master transfer.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>RESTART</name>
       <description>Setting this bit to 1 will generate a repeated START.</description>
       <bitRange>[1:1]</bitRange>
      </field>
      <field>
       <name>STOP</name>
       <description>Setting this bit to 1 will generate a STOP condition.</description>
       <bitRange>[2:2]</bitRange>
      </field>
      <field>
       <name>SEA</name>
       <description>Slave Extend Address Select.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>7_bits_address</name>
         <description>7-bit address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_bits_address</name>
         <description>10-bit address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CKL</name>
     <description>Clock Low Register.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>CKL</name>
       <description>Clock low. In master mode, these bits define the SCL low period. In slave mode, these bits define the time SCL will be held low after data is outputted.</description>
       <bitRange>[8:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>CKH</name>
     <description>Clock high Register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>CKH</name>
       <description>Clock High. In master mode, these bits define the SCL high period.</description>
       <bitRange>[8:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>TO</name>
     <description>Timeout Register</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>TO</name>
       <description>Timeout</description>
       <bitRange>[15:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>TXEN</name>
       <description>TX channel enable.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXEN</name>
       <description>RX channel enable.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SLA</name>
     <description>Slave Address Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>SLA</name>
       <description>Slave Address.</description>
       <bitRange>[9:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EA</name>
       <description>Extended Address Select. This bit selects whether the SLA contains a 7-bit or 10-bit address.</description>
       <bitRange>[15:15]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>7_bit_address</name>
         <description>7-bit address select.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_bit_address</name>
         <description>10-bit address select.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--I2C0 Inter-Integrated Circuit.-->
  <peripheral>
   <name>ICC0</name>
   <description>Instruction Cache Controller Registers</description>
   <baseAddress>0x4002A000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CACHE_ID</name>
     <description>Cache ID Register.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RELNUM</name>
       <description>Release Number. Identifies the RTL release version.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>PARTNUM</name>
       <description>Part Number. This field reflects the value of C_ID_PART_NUMBER configuration parameter.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>CCHID</name>
       <description>Cache ID. This field reflects the value of the C_ID_CACHEID configuration parameter.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCFG</name>
     <description>Memory Configuration Register.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-only</access>
     <resetValue>0x00080008</resetValue>
     <fields>
      <field>
       <name>CCHSZ</name>
       <description>Cache Size. Indicates total size in Kbytes of cache.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>MEMSZ</name>
       <description>Main Memory Size. Indicates the total size, in units of 128 Kbytes, of code memory accessible to the cache controller.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CACHE_CTRL</name>
     <description>Cache Control and Status Register.</description>
     <addressOffset>0x0100</addressOffset>
     <fields>
      <field>
       <name>CACHE_EN</name>
       <description>Cache Enable. Controls whether the cache is bypassed or is in use. Changing the state of this bit will cause the instruction cache to be flushed and its contents invalidated.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Cache Bypassed. Instruction data is stored in the line fill buffer but is not written to main cache memory array.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Cache Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CACHE_RDY</name>
       <description>Cache Ready flag. Cleared by hardware when at any time the cache as a whole is invalidated (including a system reset). When this bit is 0, the cache is effectively in bypass mode (instruction fetches will come from main memory or from the line fill buffer). Set by hardware when the invalidate operation is complete and the cache is ready.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>notReady</name>
         <description>Not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INVALIDATE</name>
     <description>Invalidate All Registers.</description>
     <addressOffset>0x0700</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IA</name>
       <description>Invalidate.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--ICC0 Instruction Cache Controller Registers-->
  <peripheral>
   <name>MCR</name>
   <description>Misc Control.</description>
   <baseAddress>0x40006C00</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>ECCEN</name>
     <description>ECC Enable Register</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>SYSRAM0ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM1ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM2ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM3ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM4ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FL0ECCEN</name>
       <description>Flash0 ECC Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FL1ECCEN</name>
       <description>Flash1 ECC Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--MCR Misc Control.-->
  <peripheral>
   <name>PWRSEQ</name>
   <description>Power Sequencer / Low Power Control Register.</description>
   <baseAddress>0x40006800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>LPCN</name>
     <description>Low Power Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>RAMRET_EN</name>
       <description>System RAM retention in BACKUP mode. These two bits are used in conjuction with RREGEN bit. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>LDO_DIS</name>
       <description>LDO Disabled</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>VCOREMON_DIS</name>
       <description>Vcore Monitor Disable. This bit controls the power monitor on the VCore supply in all operating modes.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDAMON_DIS</name>
       <description>VDDA Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKST0</name>
     <description>Low Power I/O Wakeup Status Register 0. This register indicates the low power wakeup status for GPIO0.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin (s) transition (s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKEN0</name>
     <description>Low Power I/O Wakeup Enable Register 0. This register enables low power wakeup functionality for GPIO0.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin (s) on transition (s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKST1</name>
     <description>Low Power I/O Wakeup Status Register 1. This register indicates the low power wakeup status for GPIO1.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>ST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin (s) transition (s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKEN1</name>
     <description>Low Power I/O Wakeup Enable Register 1. This register enables low power wakeup functionality for GPIO1.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin (s) on transition (s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPPWKST</name>
     <description>Low Power Peripheral Wakeup Status Register.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>BBMOD</name>
       <description>Battery Back Wakeup Flag (write one to clear). This bit will be set when exiting Battery Backup Mode.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RST</name>
       <description>Reset Detect Wakeup Flag (write one to clear). This bit will be set when the external reset causes wakeup</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SDMA1</name>
       <description>Smart DMA (1) Detect Wakeup Flag (write one to clear). This bit will be set when the SDMA IRQ transitions from low to high or high to low</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPMEMSD</name>
     <description>Low Power Memory Shutdown Control.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>System RAM block 0 Shut Down.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM1</name>
       <description>System RAM block 1 Shut Down.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM2</name>
       <description>System RAM block 2 Shut Down.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM3</name>
       <description>System RAM block 3 Shut Down.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM4</name>
       <description>System RAM block 4 Shut Down.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHE</name>
       <description>Instruction Cache RAM Shut Down.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEXIP</name>
       <description>XiP Instruction Cache RAM Shut Down.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROM</name>
       <description>ROM Shut Down.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>GP0</name>
     <description>Back Up General Purpose Register 0</description>
     <addressOffset>0x48</addressOffset>
    </register>
    <register>
     <name>GP1</name>
     <description>Back Up General Purpose Register 1</description>
     <addressOffset>0x4C</addressOffset>
    </register>
   </registers>
  </peripheral>
<!--PWRSEQ Power Sequencer / Low Power Control Register.-->
  <peripheral>
   <name>SFE</name>
   <description>Serial Flash Emulator.</description>
   <baseAddress>0x400A0000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CFG</name>
     <description>SFE Configuration Register.</description>
     <addressOffset>0x0400</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DRLE</name>
       <description>Data Rise Launch Edge Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLOCK</name>
       <description>Flash Lock.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RD_EN</name>
       <description>RAM Read Enable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WR_EN</name>
       <description>RAM Write Enable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RRLOCK</name>
       <description>RAM Read Lock.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RWLOCK</name>
       <description>RAM Write Lock.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HFSA</name>
     <description>SFE Host Flash Start Address Register.</description>
     <addressOffset>0x0408</addressOffset>
     <fields>
      <field>
       <name>HFSA</name>
       <description> Serial Flash Host Flash Start Address.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>22</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HRSA</name>
     <description>SFE Host RAM Start Address Register.</description>
     <addressOffset>0x040C</addressOffset>
     <fields>
      <field>
       <name>HRSA</name>
       <description> Serial Flash Host RAM Start Address.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>22</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SFDP_SBA</name>
     <description>SFE Discoverable Parameter System Base Register.</description>
     <addressOffset>0x0410</addressOffset>
     <fields>
      <field>
       <name>SFDP_SBA</name>
       <description> SFDP upper 24 bits System Base Address.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>24</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FLASH_SBA</name>
     <description>Flash System Base Address Register.</description>
     <addressOffset>0x0414</addressOffset>
     <fields>
      <field>
       <name>FLASH_SBA</name>
       <description> FLASH upper 22 bits System Base Address.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>22</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FLASH_STA</name>
     <description>Flash System Top Address Register.</description>
     <addressOffset>0x0418</addressOffset>
     <fields>
      <field>
       <name>FLASH_STA</name>
       <description> FLASH upper 22 bits System Top Address.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>22</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RAM_SBA</name>
     <description>RAM System Base Address Register.</description>
     <addressOffset>0x041C</addressOffset>
     <fields>
      <field>
       <name>RAM_SBA</name>
       <description> RAM upper 22 bits System Base Address.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>22</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RAM_STA</name>
     <description>RAM System Top Address Register.</description>
     <addressOffset>0x0420</addressOffset>
     <fields>
      <field>
       <name>RAM_STA</name>
       <description> RAM upper 22 bits System Top Address.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>22</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SFE Serial Flash Emulator.-->
  <peripheral>
   <name>SIR</name>
   <description>System Initialization Registers.</description>
   <baseAddress>0x40000400</baseAddress>
   <access>read-only</access>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SISTAT</name>
     <description>System Initialization Status Register.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>MAGIC</name>
       <description>Magic Word Validation.  This bit is set by the system initialization block following power-up.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>magicNotSet</name>
         <description>Magic word was not set (OTP has not been initialized properly).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>magicSet</name>
         <description>Magic word was set (OTP contains valid settings).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRCERR</name>
       <description>CRC Error Status.  This bit is set by the system initialization block following power-up.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>noError</name>
         <description>No CRC errors occurred during the read of the OTP memory block.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>A CRC error occurred while reading the OTP. The address of the failure location in the OTP memory is stored in the ERRADDR register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ERRADDR</name>
     <description>Read-only field set by the SIB block if a CRC error occurs during the read of the OTP memory. Contains the failing address in OTP memory (when CRCERR equals 1).</description>
     <addressOffset>0x04</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>ERRADDR</name>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FSTAT</name>
     <description>funcstat register.</description>
     <addressOffset>0x100</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>FPU</name>
       <description>FPU Function.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NMI</name>
       <description>NMI function.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SFES</name>
       <description>SFES function.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SFSTAT</name>
     <description>secfuncstat register.</description>
     <addressOffset>0x104</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>TRNG</name>
       <description>TRNG function.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AES</name>
       <description>AES function.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SHA</name>
       <description>SHA function.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SIR System Initialization Registers.-->
  <peripheral>
   <name>SMON</name>
   <description>The Security Monitor block used to monitor system threat conditions.</description>
   <baseAddress>0x40004000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>EXTSCN</name>
     <description>External Sensor Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x3800FFC0</resetMask>
     <fields>
      <field>
       <name>EXTS_EN0</name>
       <description>External Sensor Enable for input/output pair 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN1</name>
       <description>External Sensor Enable for input/output pair 1.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN2</name>
       <description>External Sensor Enable for input/output pair 2.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN3</name>
       <description>External Sensor Enable for input/output pair 3.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN4</name>
       <description>External Sensor Enable for input/output pair 4.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN5</name>
       <description>External Sensor Enable for input/output pair 5.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTCNT</name>
       <description>External Sensor Error Counter. These bits set the number of external sensor accepted mismatches that have to occur within a single bit period before an external sensor alarm is triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>EXTFRQ</name>
       <description>External Sensor Frequency. These bits define the frequency at which the external sensors are clocked to/from the EXTS_IN and EXTS_OUT pair.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>freq2000Hz</name>
         <description>Div 4 (2000Hz).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq1000Hz</name>
         <description>Div 8 (1000Hz).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq500Hz</name>
         <description>Div 16 (500Hz).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq250Hz</name>
         <description>Div 32 (250Hz).</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq125Hz</name>
         <description>Div 64 (125Hz).</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq63Hz</name>
         <description>Div 128 (63Hz).</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq31Hz</name>
         <description>Div 256 (31Hz).</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RFU</name>
         <description>Reserved. Do not use.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DIVCLK</name>
       <description>Clock Divide.  These bits are used to divide the 8KHz input clock. The resulting divided clock is used for all logic within the Security Monitor Block. Note:
                                                             If the input clock is divided with these bits, the error count threshold table and output frequency will be affected accordingly with the same divide factor.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1 (8000 Hz).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2 (4000 Hz).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4 (2000 Hz).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8 (1000 Hz).</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16 (500 Hz).</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32 (250 Hz).</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64 (125 Hz).</description>
         <value>6</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>Busy. This bit is set to 1 by hardware after EXTSCN register is written to. This bit is automatically cleared to 0 after this register information has been transferred to the security monitor domain.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Update in Progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOCK</name>
       <description>Lock Register. Once locked, the EXTSCN register can no longer be modified.  Only a battery disconnect will clear this bit. VBAT powers this register.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTSCN</name>
     <description>Internal Sensor Control Register.</description>
     <addressOffset>0x04</addressOffset>
     <resetMask>0x7F00FFF7</resetMask>
     <fields>
      <field>
       <name>SHIELD_EN</name>
       <description>Die Shield Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TEMP_EN</name>
       <description>Temperature Sensor Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VBAT_EN</name>
       <description>Battery Monitor Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DFD_EN</name>
       <description>Digital Fault Dector Enable</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DFD_NMI</name>
       <description>Digital Fault NMI Enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DFD_STDBY</name>
       <description>Digital Fault Dector Stand by Enable</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PUF_TRIM_ERASE</name>
       <description>Erase puf trim Enable</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LOTEMP_SEL</name>
       <description>Low Temperature Detection Select.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>neg50C</name>
         <description>-50 degrees C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>neg30C</name>
         <description>-30 degrees C.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCORELOEN</name>
       <description>VCORE Undervoltage Detect Enable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCOREHIEN</name>
       <description>VCORE Overvoltage Detect Enable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDLOEN</name>
       <description>VDD Undervoltage Detect Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDHIEN</name>
       <description>VDD Overvoltage Detect Enable.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VGLEN</name>
       <description>Voltage Glitch Detection Enable.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOCK</name>
       <description>Lock Register. Once locked, the INTSCN register can no longer be modified.  Only a battery disconnect will clear this bit. VBAT powers this register.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SECALM</name>
     <description>Security Alarm Register.</description>
     <addressOffset>0x08</addressOffset>
     <resetValue>0x00000000</resetValue>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>DRS</name>
       <description>Destructive Reset Trigger. Setting this bit will generate a DRS. This bit is self-cleared by hardware.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>KEYWIPE</name>
       <description>Key Wipe Trigger. Set to 1 to initiate a wipe of the AES key register. It does not reset the part, or log a timestamp. AES and DES registers are not affected by this bit. This bit is automatically cleared to 0 after the keys have been wiped.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SHIELDF</name>
       <description>Die Shield Flag.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOTEMP</name>
       <description>Low Temperature Detect.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HITEMP</name>
       <description>High Temperature Detect.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATLO</name>
       <description>Battery Undervoltage Detect.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATHI</name>
       <description>Battery Overvoltage Detect.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTF</name>
       <description>External Sensor Flag.   This bit is set to 1 when any of the EXTSTAT bits are set.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDLO</name>
       <description>VDD Undervoltage Detect Flag.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCORELO</name>
       <description>VCORE Undervoltage Detect Flag.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCOREHI</name>
       <description>VCORE Overvoltage Detect Flag.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDHI</name>
       <description>VDD Overvoltage Flag.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VGL</name>
       <description>Voltage Glitch Detection Flag.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT0</name>
       <description>External Sensor 0 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT1</name>
       <description>External Sensor 1 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT2</name>
       <description>External Sensor 2 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT3</name>
       <description>External Sensor 3 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT4</name>
       <description>External Sensor 4 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT5</name>
       <description>External Sensor 5 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN0</name>
       <description>External Sensor 0 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN1</name>
       <description>External Sensor 1 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN2</name>
       <description>External Sensor 2 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN3</name>
       <description>External Sensor 3 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN4</name>
       <description>External Sensor 4 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN5</name>
       <description>External Sensor 5 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SECDIAG</name>
     <description>Security Diagnostic Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-only</access>
     <resetValue>0x00000001</resetValue>
     <resetMask>0xFFC0FE02</resetMask>
     <fields>
      <field>
       <name>BORF</name>
       <description>Battery-On-Reset Flag. This bit is set once the back up battery is conneted.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SHIELDF</name>
       <description>Die Shield Flag.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOTEMP</name>
       <description>Low Temperature Detect.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HITEMP</name>
       <description>High Temperature Detect.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATLO</name>
       <description>Battery Undervoltage Detect.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATHI</name>
       <description>Battery Overvoltage Detect.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DYNF</name>
       <description>Dynamic Sensor Flag.  This bit is set to 1 when any of the EXTSTAT bits are set.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESKT</name>
       <description>AES Key Transfer.  This bit is set to 1 when AES Key has been transferred from the TRNG to the battery backed AES key register. This bit can only be reset by a BOR.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>incomplete</name>
         <description>Key has not been transferred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>complete</name>
         <description>Key has been transferred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT0</name>
       <description>External Sensor 0 Detect.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT1</name>
       <description>External Sensor 1 Detect.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT2</name>
       <description>External Sensor 2 Detect.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT3</name>
       <description>External Sensor 3 Detect.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT4</name>
       <description>External Sensor 4 Detect.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT5</name>
       <description>External Sensor 5 Detect.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SECST</name>
     <description>Security Monitor Status Register.</description>
     <addressOffset>0x34</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>EXTSRS</name>
       <description>External Sensor Control Register Status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>allowed</name>
         <description>Access authorized.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>notAllowed</name>
         <description>Access not authorized.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INTSRS</name>
       <description>Internal Sensor Control Register Status.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>allowed</name>
         <description>Access authorized.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>notAllowed</name>
         <description>Access not authorized.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SECALRS</name>
       <description>Security Alarm Register Status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>allowed</name>
         <description>Access authorized.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>notAllowed</name>
         <description>Access not authorized.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SDBE</name>
     <description>Security Monitor Self Destruct Byte.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>DBYTE</name>
       <description>Self Destruct Byte</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>SBDEN</name>
       <description>Self-Destruct Byte ENable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SMON The Security Monitor block used to monitor system threat conditions.-->
  <peripheral>
   <name>SPI0</name>
   <description>SPI peripheral.</description>
   <baseAddress>0x40046000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SPI0</name>
    <value>16</value>
   </interrupt>
   <registers>
    <register>
     <name>DATA32</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>2</dim>
     <dimIncrement>2</dimIncrement>
     <name>DATA16[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>16</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>1</dimIncrement>
     <name>DATA8[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MSTR_CNTL</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SPIEN</name>
       <description>SPI Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MMEN</name>
       <description>Master Mode Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is Slave mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is  Master mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSIO</name>
       <description>Slave Select 0, IO direction, to support Multi-Master mode,Slave Select 0 can be input in Master mode. This bit has no effect in slave mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>output</name>
         <description>Slave select 0 is output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>input</name>
         <description>Slave Select 0 is input, only valid if MMEN=1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>Start Transmit.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>start</name>
         <description>Master Initiates a transaction, this bit is self clearing when transactions are done. If a transaction cimpletes, and the TX FIFO is empty, the Master halts, if a transaction completes, and the TX FIFO is not empty, the Master initiates another transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSCTRL</name>
       <description>Start Select Control. Used in Master mode to control the behavior of the Slave Select signal at the end of a transaction.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>deassert</name>
         <description>SPI De-asserts Slave Select at the end of a transaction.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>assert</name>
         <description>SPI leaves Slave Select asserted at the end of a transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS</name>
       <description>Slave Select, when in Master mode selects which Slave devices are selected. More than one Slave device can be selected.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ss0</name>
         <description>SS0 is selected.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ss1</name>
         <description>SS1 is selected.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ss2</name>
         <description>SS2 is selected.</description>
         <value>0x4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>TRNMT_SIZE</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_NUM_CHAR</name>
       <description>Nubmer of Characters to transmit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>RX_NUM_CHAR</name>
       <description>Nubmer of Characters to receive.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>STATIC_CONFIG</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>PHASE</name>
       <description>Clock Phase.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>rising_edge</name>
         <description>Data Sampled on clock rising edge. Use when in SPI Mode 0 and Mode 2 </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>falling_edge</name>
         <description>Data Sampled on clock falling edge. Use when in SPI Mode 1 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKPOL</name>
       <description>Clock Polarity.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Clock. Use when in SPI Mode 0 and Mode 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>inverted</name>
         <description>Inverted Clock. Use when in SPI Mode 2 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NUMBITS</name>
       <description>Number of Bits per character.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>16 bits per character.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATAWIDTH</name>
       <description>SPI Data width.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>mono</name>
         <description>1 data pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dual</name>
         <description>2 data pins.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>quad</name>
         <description>4 data pins.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>3WIRE</name>
       <description>Three Wire mode. MOSI/MISO pin (s) shared. Only Mono mode suports Four-Wire.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Use four wire mode (Mono only).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Use three wire mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSPOL</name>
       <description>Slave Select Polarity, each Slave Select can have unique polarity.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0_high</name>
         <description>SS0 active high.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1_high</name>
         <description>SS1 active high.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2_high</name>
         <description>SS2 active high.</description>
         <value>0x4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SS_TIME</name>
     <description>Register for controlling SPI peripheral/Slave Select Timing.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>PRE</name>
       <description>Slave Select Pre delay 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between SS active and first serial clock edge.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>POST</name>
       <description>Slave Select Post delay 2.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between last serial clock edge and SS inactive.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INACT</name>
       <description>Slave Select Inactive delay.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between transactions.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_CONFIG</name>
     <description>Register for controlling SPI clock rate.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>LOW</name>
       <description>Low duty cycle control. In timer mode, reload[7:0].</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HIGH</name>
       <description>High duty cycle control. In timer mode, reload[15:8].</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCALE</name>
       <description>System Clock scale factor. Scales the AMBA clock by 2^SCALE before generating serial clock.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>Register for controlling DMA.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_FIFO_LEVEL</name>
       <description>Transmit FIFO level that will trigger a DMA request, also level for threshold status. When TX FIFO has fewer than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_EN</name>
       <description>Transmit FIFO enabled for SPI transactions.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Transmit FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Transmit FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CLEAR</name>
       <description>Clear TX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the Transmit FIFO, clears any pending TX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CNT</name>
       <description>Count of entries in TX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_DMA_EN</name>
       <description>TX DMA Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>TX DMA requests are disabled, andy pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_LEVEL</name>
       <description>Receive FIFO level that will trigger a DMA request, also level for threshold status. When RX FIFO has more than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_EN</name>
       <description>Receive FIFO enabled for SPI transactions.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Receive FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Receive FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CLEAR</name>
       <description>Clear RX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear the Receive FIFO, clears any pending RX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CNT</name>
       <description>Count of entries in RX FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_DMA_EN</name>
       <description>RX DMA Enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX DMA requests are disabled, any pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Register for reading and clearing interrupt flags. All bits are write 1 to clear.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TXTHRLD</name>
       <description>TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXEMPTY</name>
       <description>TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTHRLD</name>
       <description>RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXFULL</name>
       <description>RX FIFO FULL.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MSTRDONE</name>
       <description>Master Done, set when SPI Master has completed any transactions.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXOVR</name>
       <description>Transmit FIFO Overrun, set when the AMBA side attempts to write data to a full transmit FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXUNDR</name>
       <description>Transmit FIFO Underrun, set when the SPI side attempts to read data from an empty transmit FIFO.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXOVR</name>
       <description>Receive FIFO Overrun, set when the SPI side attempts to write to a full receive FIFO.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXUNDR</name>
       <description>Receive FIFO Underrun, set when the AMBA side attempts to read data from an empty receive FIFO.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Register for enabling interrupts.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TXTHRLD</name>
       <description>TX FIFO Threshold interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXEMPTY</name>
       <description>TX FIFO Empty interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTHRLD</name>
       <description>RX FIFO Threshold Crossed interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXFULL</name>
       <description>RX FIFO FULL interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MSTRDONE</name>
       <description>Master Done interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXOVR</name>
       <description>Transmit FIFO Overrun interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXUNDR</name>
       <description>Transmit FIFO Underrun interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXOVR</name>
       <description>Receive FIFO Overrun interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXUNDR</name>
       <description>Receive FIFO Underrun interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_FL</name>
     <description>Register for wake up flags. All bits in this register are write 1 to clear.</description>
     <addressOffset>0x28</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TXTHRLD</name>
       <description>Wake on TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXEMPTY</name>
       <description>Wake on TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTHRLD</name>
       <description>Wake on RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXFULL</name>
       <description>Wake on RX FIFO Full.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>Register for wake up enable.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TXTHRLD</name>
       <description>Wake on TX FIFO Threshold Crossed Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXEMPTY</name>
       <description>Wake on TX FIFO Empty Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXTHRLD</name>
       <description>Wake on RX FIFO Threshold Crossed Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXFULL</name>
       <description>Wake on RX FIFO Full Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>SPI Status register.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SPI active status. In Master mode, set when transaction starts, cleared when last bit of last character is acted upon and Slave Select de-assertion would occur. In Slave mode, set when Slave Select is asserted, cleared when Slave Select is de-asserted. Not used in Timer mode. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>SPI not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <description>SPI active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SPI0 SPI peripheral.-->
  <peripheral derivedFrom="SPI0">
   <name>SPI1</name>
   <description>SPI peripheral. 1</description>
   <baseAddress>0x40047000</baseAddress>
   <interrupt>
    <name>SPI1</name>
    <description>SPI1 IRQ</description>
    <value>17</value>
   </interrupt>
  </peripheral>
<!--SPI1 SPI peripheral. 1-->
  <peripheral>
   <name>TMR0</name>
   <description>32-bit reloadable timer that can be used for timing and event counting.</description>
   <groupName>Timers</groupName>
   <baseAddress>0x40010000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TMR0</name>
    <description>TMR0 IRQ</description>
    <value>5</value>
   </interrupt>
   <registers>
    <register>
     <name>CNT</name>
     <description>Count.  This register stores the current timer count.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000001</resetValue>
    </register>
    <register>
     <name>CMP</name>
     <description>Compare.  This register stores the compare value, which is used to set the maximum count value to initiate a reload of the timer to 0x0001.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x0000FFFF</resetValue>
    </register>
    <register>
     <name>PWM</name>
     <description>PWM.  This register stores the value that is compared to the current timer count.</description>
     <addressOffset>0x08</addressOffset>
    </register>
    <register>
     <name>INTR</name>
     <description>Clear Interrupt. Writing a value (0 or 1) to a bit in this register clears the associated interrupt.</description>
     <addressOffset>0x0C</addressOffset>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>IRQ_CLR</name>
       <description>Clear Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CN</name>
     <description>Timer Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>TMODE</name>
       <description>Timer Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>oneShot</name>
         <description>One Shot Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>continuous</name>
         <description>Continuous Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>counter</name>
         <description>Counter Mode.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pwm</name>
         <description>PWM Mode.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>capture</name>
         <description>Capture Mode.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>compare</name>
         <description>Compare Mode.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>gated</name>
         <description>Gated Mode.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>captureCompare</name>
         <description>Capture/Compare Mode.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES</name>
       <description>Prescaler.  Set the Timer's prescaler value. The prescaler divides the PCLK input to the timer and sets the Timer's Count Clock, F_CNT_CLK = PCLK (HZ) /prescaler. The Timer's prescaler setting is a 4-bit value with pres3:pres[2:0].</description>
       <bitOffset>3</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TPOL</name>
       <description>Timer input/output polarity bit.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>activeHi</name>
         <description>Active High.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>activeLo</name>
         <description>Active Low.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TEN</name>
       <description>Timer Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES3</name>
       <description>MSB of prescaler value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMSYNC</name>
       <description>Timer PWM Synchronization Mode Enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOLHPOL</name>
       <description>Timer PWM output 0A polarity bit.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOLLPOL</name>
       <description>Timer PWM output 0A' polarity bit.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PWMCKBD</name>
       <description>Timer PWM output 0A Mode Disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--TMR0 32-bit reloadable timer that can be used for timing and event counting.-->
  <peripheral derivedFrom="TMR0">
   <name>TMR1</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 1</description>
   <baseAddress>0x40011000</baseAddress>
   <interrupt>
    <name>TMR1</name>
    <description>TMR1 IRQ</description>
    <value>6</value>
   </interrupt>
  </peripheral>
<!--TMR1 32-bit reloadable timer that can be used for timing and event counting. 1-->
  <peripheral derivedFrom="TMR0">
   <name>TMR2</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 2</description>
   <baseAddress>0x40012000</baseAddress>
   <interrupt>
    <name>TMR2</name>
    <description>TMR2 IRQ</description>
    <value>7</value>
   </interrupt>
  </peripheral>
<!--TMR2 32-bit reloadable timer that can be used for timing and event counting. 2-->
  <peripheral derivedFrom="TMR0">
   <name>TMR3</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 3</description>
   <baseAddress>0x40013000</baseAddress>
   <interrupt>
    <name>TMR3</name>
    <description>TMR3 IRQ</description>
    <value>8</value>
   </interrupt>
  </peripheral>
<!--TMR3 32-bit reloadable timer that can be used for timing and event counting. 3-->
  <peripheral>
   <name>TRNG</name>
   <description>Random Number Generator.</description>
   <baseAddress>0x4004D000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TRNG</name>
    <description>TRNG interrupt.</description>
    <value>4</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>TRNG Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000003</resetValue>
     <fields>
      <field>
       <name>RND_IRQ_EN</name>
       <description>To enable IRQ generation when a new 32-bit Random number is ready.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESKG_MEMPROTE</name>
       <description>AES Key Generate. When enabled, the key for securing NVSRAM is generated and transferred to the secure key register automatically without user visibility or intervention. This bit is cleared by hardware once the key has been transferred to the secure key register.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ST</name>
     <description>Data. The content of this register is valid only when RNG_IS = 1. When TRNG is disabled, read returns 0x0000 0000.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RND_RDY</name>
       <description>32-bit random data is ready to read from TRNG_DATA register. Reading TRNG_DATA when RND_RDY=0 will return all 0's. IRQ is generated when RND_RDY=1 if TRNG_CN.RND_IRQ_EN=1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Busy</name>
         <description>TRNG Busy</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Ready</name>
         <description>32 bit random data is ready</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESKGD_MEU_S</name>
       <description>Automatically AES transfer on going</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>Data. The content of this register is valid only when RNG_IS = 1. When TRNG is disabled, read returns 0x0000 0000.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data. The content of this register is valid only when RNG_IS =1. When TNRG is disabled, read returns 0x0000 0000.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--TRNG Random Number Generator.-->
  <peripheral>
   <name>UART0</name>
   <description>UART</description>
   <baseAddress>0x40042000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>UART0</name>
    <description>UART0 IRQ</description>
    <value>14</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>RXTHD</name>
       <description>Receive Threshhold.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>PAREN</name>
       <description>Enable/disable Parity bit (9th character).</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Parity </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Parity enabled as 9th bit</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PAREO</name>
       <description>When PARITY_EN=1, selects odd or even parity.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Even</name>
         <description>Even parity selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ODD</name>
         <description>Odd parity selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARMD</name>
       <description>Selects parity based on 1s or 0s count (when PARITY_EN=1).</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1</name>
         <description>Parity calculation is based on number of 1s in frame.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>0</name>
         <description>Parity calculation is based on number of 0s in frame.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TXFLUSH</name>
       <description>Flushes the TX FIFO buffer.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXFLUSH</name>
       <description>Flushes the RX FIFO buffer.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SIZE</name>
       <description>Selects UART character size.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>5</name>
         <description>5 bits.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6</name>
         <description>6 bits.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7</name>
         <description>7 bits.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8</name>
         <description>8 bits.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP</name>
       <description>Selects the number of stop bits that will be generated.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1</name>
         <description>1 stop bit.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_5</name>
         <description>1.5 stop bits.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>Status Register.</description>
     <addressOffset>0x04</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>TXBUSY</name>
       <description>Read-only flag indicating the UART transmit status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXBUSY</name>
       <description>Read-only flag indicating the UART receiver status.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXEMPTY</name>
       <description>Read-only flag indicating the RX FIFO state.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXFULL</name>
       <description>Read-only flag indicating the RX FIFO state.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXEMPTY</name>
       <description>Read-only flag indicating the TX FIFO state.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXFULL</name>
       <description>Read-only flag indicating the TX FIFO state.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXELT</name>
       <description>Indicates the number of bytes currently in the RX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXELT</name>
       <description>Indicates the number of bytes currently in the TX FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x08</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>FRAMIE</name>
       <description>Enable for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PARITYIE</name>
       <description>Enable for RX Parity Error interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OVERIE</name>
       <description>Enable for RX FIFO OVerrun interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FFRXIE</name>
       <description>Enable for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FFTXOIE</name>
       <description>Enable for interrupt when TX FIFO has only one byte remaining.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FFTXHIE</name>
       <description>Enable for interrupt when TX FIFO reaches half the number of bytes allowed in the fifo or less.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_STAT</name>
     <description>Interrupt Status Flags.</description>
     <addressOffset>0x0C</addressOffset>
     <size>32</size>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>FRAMIS</name>
       <description>FLAG for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PARITYIS</name>
       <description>FLAG for RX Parity Error interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OVERIS</name>
       <description>FLAG for RX FIFO Overrun interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FFRXIS</name>
       <description>FLAG for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FFTXOIS</name>
       <description>FLAG for interrupt when TX FIFO has only one byte remaining.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FFTXHIS</name>
       <description>FLAG for interrupt when TX FIFO reaches half the number of bytes allowed in the fifo or less.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BAUD0</name>
     <description>Baud rate register. Integer portion.</description>
     <addressOffset>0x10</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>IDIV</name>
       <description>Integer portion of baud rate divisor value. IBAUD = InputClock / (factor * Baud Rate Frequency).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BAUD1</name>
     <description>Baud rate register. Decimal Setting.</description>
     <addressOffset>0x14</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DDIV</name>
       <description>Decimal portion of baud rate divisor value. DIV = InputClock/(factor*Baud Rate Frequency). DDIV=(DIV-IDIV)*128.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>FIFO Data buffer.</description>
     <addressOffset>0x20</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DATA</name>
       <description>Load/unload location for TX and RX FIFO buffers.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>PARITY</name>
       <description>Parity error flag for next byte to be read from FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Configuration.</description>
     <addressOffset>0x30</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>TXCNT</name>
       <description>TX threshold for DMA transmission.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>TXEN</name>
       <description>TX DMA channel enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA is disabled </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA is enabled </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXCNT</name>
       <description>RX threshold for DMA transmission.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>RXEN</name>
       <description>RX DMA channel enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA is disabled </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA is enabled </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--UART0 UART-->
  <peripheral>
   <name>WDT0</name>
   <description>Watchdog Timer 0</description>
   <baseAddress>0x40003000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x0400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>WDT0</name>
    <value>1</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Watchdog Timer Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x7FFFF000</resetMask>
     <fields>
      <field>
       <name>INT_PERIOD</name>
       <description>Watchdog Interrupt Period. The watchdog timer will assert an interrupt, if enabled, if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_PERIOD</name>
       <description>Watchdog Reset Period. The watchdog timer will assert a reset, if enabled, if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WDT_EN</name>
       <description>Watchdog Timer Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_FLAG</name>
       <description>Watchdog Timer Interrupt Flag.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_EN</name>
       <description>Watchdog Timer Interrupt Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_EN</name>
       <description>Watchdog Timer Reset Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_FLAG</name>
       <description>Watchdog Timer Reset Flag.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST</name>
     <description>Watchdog Timer Reset Register.</description>
     <addressOffset>0x04</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>WDT_RST</name>
       <description>Writing the watchdog counter 'reset sequence' to this register resets the watchdog counter. If the watchdog count exceeds INT_PERIOD then a watchdog interrupt will occur, if enabled. If the watchdog count exceeds RST_PERIOD then a watchdog reset will occur, if enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>seq0</name>
         <description>The first value to be written to reset the WDT.</description>
         <value>0x000000A5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>seq1</name>
         <description>The second value to be written to reset the WDT.</description>
         <value>0x0000005A</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--WDT0 Watchdog Timer 0-->
  <peripheral derivedFrom="WDT0">
   <name>WDT1</name>
   <description>Watchdog Timer 0 1</description>
   <baseAddress>0x40003400</baseAddress>
   <interrupt>
    <name>WDT1</name>
    <description>WDT1 IRQ</description>
    <value>57</value>
   </interrupt>
  </peripheral>
<!--WDT1 Watchdog Timer 0 1-->
 </peripherals>
</device>
