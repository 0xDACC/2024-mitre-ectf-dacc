<?xml version='1.0' encoding='utf-8'?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xsi:noNamespaceSchemaLocation="svd_schema.xsd">
 <vendor>Maxim-Integrated</vendor>
 <vendorID>Maxim</vendorID>
 <name>max32570</name>
 <series>ARMCM4</series>
 <version>1.0</version>
 <description>MAX32570 32-bit ARM Cortex-M4 microcontroller, 1024KB of flash, 760KB of system RAM, 128KB of Boot ROM.</description>
 <cpu>
  <name>CM4</name>
  <revision>r2p1</revision>
  <endian>little</endian>
  <mpuPresent>true</mpuPresent>
  <fpuPresent>true</fpuPresent>
  <nvicPrioBits>3</nvicPrioBits>
  <vendorSystickConfig>false</vendorSystickConfig>
 </cpu>
 <addressUnitBits>8</addressUnitBits>
 <width>32</width>
 <size>0x20</size>
 <access>read-write</access>
 <resetValue>0x00000000</resetValue>
 <resetMask>0xFFFFFFFF</resetMask>
 <peripherals>
  <peripheral>
   <name>ADC</name>
   <description>10-bit Analog to Digital Converter</description>
   <baseAddress>0x40034000</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>ADC</name>
    <description>ADC IRQ</description>
    <value>20</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>ADC Control</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>START</name>
       <description>Start ADC Conversion</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>PWR</name>
       <description>ADC Power Up</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>REBUF_PWR</name>
       <description>ADC Reference Buffer Power Up</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CHGPUMP_PWR</name>
       <description>ADC Charge Pump Power Up</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>REF_SCALE</name>
       <description>ADC Reference Scale</description>
       <bitRange>[8:8]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>SCALE</name>
       <description>ADC Scale</description>
       <bitRange>[9:9]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CLK_EN</name>
       <description>ADC Clock Enable</description>
       <bitRange>[11:11]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CH_SEL</name>
       <description>ADC Channel Select</description>
       <bitRange>[16:12]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>AIN0</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN1</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN2</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN3</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN4</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN5</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN6</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>AIN7</name>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>VcoreA</name>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>VcoreB</name>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Vrxout</name>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Vtxout</name>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>VddA</name>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>VddB</name>
         <description>VddB/4</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Vddio</name>
         <description>Vddio/4</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Vddioh</name>
         <description>Vddioh/4</description>
         <value>15</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>VregI</name>
         <description>VregI/4</description>
         <value>16</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADC_DIVSEL</name>
       <description>Scales the external inputs, all inputs are scaled the same</description>
       <bitRange>[18:17]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIV1</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV2</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV3</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIV4</name>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_ALIGN</name>
       <description>ADC Data Alignment Select</description>
       <bitRange>[20:20]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>ADC Status</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>ACTIVE</name>
       <description>ADC Conversion In Progress</description>
       <bitRange>[0:0]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>AFE_PWR_UP_ACTIVE</name>
       <description>AFE Power Up Delay Active</description>
       <bitRange>[2:2]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>OVERFLOW</name>
       <description>ADC Overflow</description>
       <bitRange>[3:3]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>ADC Output Data</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>ADC Converted Sample Data Output</description>
       <bitRange>[15:0]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>ADC Interrupt Control Register</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>DONE_IE</name>
       <description>ADC Done Interrupt Enable</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>REF_READY_IE</name>
       <description>ADC Reference Ready Interrupt Enable</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>HI_LIMIT_IE</name>
       <description>ADC Hi Limit Monitor Interrupt Enable</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>LO_LIMIT_IE</name>
       <description>ADC Lo Limit Monitor Interrupt Enable</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>OVERFLOW_IE</name>
       <description>ADC Overflow Interrupt Enable</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>DONE_IF</name>
       <description>ADC Done Interrupt Flag</description>
       <bitRange>[16:16]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>REF_READY_IF</name>
       <description>ADC Reference Ready Interrupt Flag</description>
       <bitRange>[17:17]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>HI_LIMIT_IF</name>
       <description>ADC Hi Limit Monitor Interrupt Flag</description>
       <bitRange>[18:18]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>LO_LIMIT_IF</name>
       <description>ADC Lo Limit Monitor Interrupt Flag</description>
       <bitRange>[19:19]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>OVERFLOW_IF</name>
       <description>ADC Overflow Interrupt Flag</description>
       <bitRange>[20:20]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>PENDING</name>
       <description>ADC Interrupt Pending Status</description>
       <bitRange>[22:22]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>LIMIT[%s]</name>
     <description>ADC Limit</description>
     <addressOffset>0x0010</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CH_LO_LIMIT</name>
       <description>Low Limit Threshold</description>
       <bitRange>[9:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CH_HI_LIMIT</name>
       <description>High Limit Threshold</description>
       <bitRange>[21:12]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CH_SEL</name>
       <description>ADC Channel Select</description>
       <bitRange>[28:24]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CH_LO_LIMIT_EN</name>
       <description>Low Limit Monitoring Enable</description>
       <bitRange>[29:29]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>CH_HI_LIMIT_EN</name>
       <description>High Limit Monitoring Enable</description>
       <bitRange>[30:30]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--ADC 10-bit Analog to Digital Converter-->
  <peripheral>
   <name>ADC9</name>
   <description>Magnetic Strip Reader - 9 bit ADC</description>
   <baseAddress>0x4002B000</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>ADC9</name>
    <description>ADC IRQ</description>
    <value>22</value>
   </interrupt>
   <registers>
    <register>
     <name>CFG</name>
     <description>ADC Control</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>ADC Clock Divider.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>ACHSEL</name>
       <description>A Channel ADC Input Pin Selection.</description>
       <bitRange>[10:8]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>INVALID_000</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN0</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN1</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN2</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN3</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN4</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN5</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INVALID_111</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="ACHSEL">
       <name>BCHSEL</name>
       <description>B Channel ADC Input Pin Selection.</description>
       <bitRange>[13:11]</bitRange>
       <access>read-write</access>
      </field>
      <field derivedFrom="ACHSEL">
       <name>CCHSEL</name>
       <description>C Channel ADC Input Pin Selection.</description>
       <bitRange>[16:14]</bitRange>
       <access>read-write</access>
      </field>
      <field derivedFrom="ACHSEL">
       <name>DCHSEL</name>
       <description>D Channel ADC Input Pin Selection.</description>
       <bitRange>[19:17]</bitRange>
       <access>read-write</access>
      </field>
      <field derivedFrom="ACHSEL">
       <name>ECHSEL</name>
       <description>E Channel ADC Input Pin Selection.</description>
       <bitRange>[22:20]</bitRange>
       <access>read-write</access>
      </field>
      <field derivedFrom="ACHSEL">
       <name>FCHSEL</name>
       <description>F Channel ADC Input Pin Selection.</description>
       <bitRange>[25:23]</bitRange>
       <access>read-write</access>
      </field>
      <field derivedFrom="ACHSEL">
       <name>GCHSEL</name>
       <description>G Channel ADC Input Pin Selection.</description>
       <bitRange>[28:26]</bitRange>
       <access>read-write</access>
      </field>
      <field derivedFrom="ACHSEL">
       <name>HCHSEL</name>
       <description>H Channel ADC Input Pin Selection.</description>
       <bitRange>[31:29]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CMD</name>
     <description>MSRADC Command</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RST</name>
       <description>ADC Reset.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>NO_RESET</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RESET</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SNGLSMPL</name>
       <description>Single Sample Mode.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>NO_EFFECT</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SINGLE_SMPL</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CONTSMPL</name>
       <description>Continuous Sample Mode Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>NO_CONTINUOUS_SMPL_MODE</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CONTINUOUS_SMPL_MODE</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROTLIMIT</name>
       <description>Rotation Limit.</description>
       <bitRange>[6:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>1_channel</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2_channels</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3_channels</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4_channels</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>5_channels</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6_channels</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7_channels</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8_channels</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKSEL</name>
       <description>Clock Select.</description>
       <bitRange>[10:8]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>3_samples</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>5_samples</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4_samples</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8_samples</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16_samples</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>32_samples</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>64_samples</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>128_samples</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>ADC FIFO</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SAMPLE</name>
       <description>ADC Converted Sample Data Output</description>
       <bitRange>[8:0]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>SMPLIN</name>
       <description>ADC Sample Pin</description>
       <bitRange>[11:9]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>INVALID_000</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN0</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN1</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN2</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN3</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN4</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IN5</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INVALID_111</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>ADC Interrupt Enable Register</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>FIFOLVL</name>
       <description>Set FIFO Interrupt Level.</description>
       <bitRange>[2:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>at_least_1</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_2</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_3</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_4</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_5</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_6</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_7</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>at_least_8</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAREQEN</name>
       <description>DMA Request Enable.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLED</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLED</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>OVERFIE</name>
       <description>FIFO Overflow Interrupt Enable.</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLED</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLED</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UNDRFIE</name>
       <description>FIFO Underflow Interrupt Enable.</description>
       <bitRange>[7:7]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLED</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLED</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FIFOLVLIE</name>
       <description>FIFO Level Interrupt Enable.</description>
       <bitRange>[8:8]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLED</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLED</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GLOBIE</name>
       <description>ADC Global Interrupt Enable.</description>
       <bitRange>[9:9]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLED</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLED</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>ADC Interrupt Flag Register.</description>
     <access>read-write</access>
     <addressOffset>0x0010</addressOffset>
     <fields>
      <field>
       <name>FIFOCNT</name>
       <description>FIFO Count.</description>
       <bitRange>[3:0]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>FIFO_EMPTY</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONE_SAMPLE</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>TWO_SAMPLE</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>THREE_SAMPLE</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FOUR_SAMPLE</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FIVE_SAMPLE</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SIX_SAMPLE</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SEVEN_SAMPLE</name>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EIGHT_SAMPLE</name>
         <value>8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FULL</name>
       <description>FIFO Full Status.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>FIFO_NOT_FULL</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FIFO_FULL</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EMPTY</name>
       <description>FIFO Empty Status.</description>
       <bitRange>[5:5]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>FIFO_NOT_EMPTY</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FIFO_EMPTY</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>OVERFINT</name>
       <description>FIFO Overflow Status.</description>
       <bitRange>[6:6]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>NOT_FIFO_OVERFLOW</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FIFO_OVERFLOW</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UNDRFINT</name>
       <description>FIFO Underflow Status.</description>
       <bitRange>[7:7]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>NOT_FIFO_UNDERFLOW</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FIFO_UNDERFLOW</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FIFOLVLST</name>
       <description>FIFO Level Status.</description>
       <bitRange>[8:8]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>BELOW_LVL</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ABOVE_LVL</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GLOBINT</name>
       <description>ADC Global Interrupt Status.</description>
       <bitRange>[9:9]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>NOT_ACTIVE</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVE</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--ADC9 Magnetic Strip Reader - 9 bit ADC-->
  <peripheral>
   <name>AES</name>
   <description>AES Keys.</description>
   <baseAddress>0x40005000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>AES_SRAM_KEY</name>
     <description>AES SRAM KEY</description>
     <addressOffset>0x000</addressOffset>
     <size>32</size>
    </register>
    <register>
     <name>AES_CODE_KEY</name>
     <description>AES CODE Key </description>
     <addressOffset>0x080</addressOffset>
    </register>
    <register>
     <name>AES_DATA_KEY</name>
     <description>AES DATA KEY</description>
     <addressOffset>0x100</addressOffset>
    </register>
   </registers>
  </peripheral>
<!--AES AES Keys.-->
  <peripheral>
   <name>CAMERAIF</name>
   <description>Parallel Camera Interface.</description>
   <baseAddress>0x4000E000</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>CameraIF</name>
    <value>91</value>
   </interrupt>
   <registers>
    <register>
     <name>VER</name>
     <description>Hardware Version.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>minor</name>
       <description>Minor Version Number.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>major</name>
       <description>Major Version Number.</description>
       <bitRange>[15:8]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO_SIZE</name>
     <description>FIFO Depth.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>fifo_size</name>
       <description>FIFO size.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Control Register.</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>READ_MODE</name>
       <description>Read Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Camera Interface Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>single_img</name>
         <description>Single Image Capture.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>continuous</name>
         <description>Continuous Image Capture.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_WIDTH</name>
       <description>Data Width.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>8bit</name>
         <description>8 bit.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10bit</name>
         <description>10 bit.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12bit</name>
         <description>12 bit.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DS_TIMING_EN</name>
       <description>DS Timing Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Timing from VSYNC and HSYNC.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Timing embedded in data using SAV and EAV codes.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FIFO_THRSH</name>
       <description>Data FIFO Threshold.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>5</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RX_DMA</name>
       <description>DMA Enable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_DMA_THRSH</name>
       <description>DMA Threshold.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>THREE_CH_EN</name>
       <description>Three-channel mode enable.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>PCIF_SYS</name>
       <description>PCIF Control.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>PCIF disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>PCIF enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interupt Enable Register.</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IMG_DONE</name>
       <description>Image Done.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFO_FULL</name>
       <description>FIFO Full.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFO_THRESH</name>
       <description>FIFO Threshold Level Met.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFO_NOT_EMPTY</name>
       <description>FIFO Not Empty.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Interupt Flag Register.</description>
     <addressOffset>0x0010</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IMG_DONE</name>
       <description>Image Done.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFO_FULL</name>
       <description>FIFO Full.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFO_THRESH</name>
       <description>FIFO Threshold Level Met.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFO_NOT_EMPTY</name>
       <description>FIFO Not Empty.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DS_TIMING_CODES</name>
     <description>DS Timing Code Register.</description>
     <addressOffset>0x0014</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SAV</name>
       <description>Start Active Video Code.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>EAV</name>
       <description>End Active Video Code.</description>
       <bitRange>[15:8]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO_DATA</name>
     <description>FIFO DATA Register.</description>
     <addressOffset>0x0030</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data from FIFO to be read by DMA.</description>
       <bitRange>[31:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--CAMERAIF Parallel Camera Interface.-->
  <peripheral>
   <name>CLCD</name>
   <description>Color LCD Controller</description>
   <baseAddress>0x40031000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CLK</name>
     <description>LCD Clock Control Register</description>
     <addressOffset>0x000</addressOffset>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>Clock divsor</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>ACB</name>
       <description>ACB</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DPOL</name>
       <description>D Polarity</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ACTIVEHI</name>
         <description>Active Hi</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVELO</name>
         <description>Active Low</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VPOL</name>
       <description>V Polarity</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ACTIVEHI</name>
         <description>Active Hi</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVELO</name>
         <description>Active Low</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HPOL</name>
       <description>H Polarity</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ACTIVEHI</name>
         <description>Active Hi</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVELO</name>
         <description>Active Low</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EDGE</name>
       <description>Edge Selection</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>RISEEDGE</name>
         <description>Rising edge</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>FALLEDGE</name>
         <description>Falling Edge</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PASCLK</name>
       <description>Clock Active on Data</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ALWAYSACTIVE</name>
         <description>Always Active</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVEONDATA</name>
         <description>ACTIVE ON DATA</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>VTIM_0</name>
     <description>LCD Vertical Timing 0 Register</description>
     <addressOffset>0x004</addressOffset>
     <fields>
      <field>
       <name>VLINES</name>
       <description>V Lines</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>VBACKPORCH</name>
       <description>V BACK PORCH</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>VTIM_1</name>
     <description>LCD Vertical Timing 1 Register</description>
     <addressOffset>0x008</addressOffset>
     <fields>
      <field>
       <name>VSYNCWIDTH</name>
       <description>V Sync Width</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>VFRONTPORCH</name>
       <description>V Front PORCH</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HTIM</name>
     <description>LCD Horizontal Timing Register.</description>
     <addressOffset>0x00C</addressOffset>
     <fields>
      <field>
       <name>HSYNCWIDTH</name>
       <description>Horizontal Sync Width in CLCD Clocks from 1 to 256 HSync Width = HSYNCWIDTH+1 Clocks</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>HFRONTPORCH</name>
       <description>Horizontal Front Porch size in lines from 1 to 256</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>HSIZE</name>
       <description>Horizontal Front Porch Size in Pixels = (HSIZE + 1) *16</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>HBACKPORCH</name>
       <description>Horizontal Back Porch size in CLCD Clocks from 1 to 256 -&gt; HBP= (HBACKPORCH+1) </description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>LCD Control Register</description>
     <addressOffset>0x010</addressOffset>
     <fields>
      <field>
       <name>LCDEN</name>
       <description>LCD Enable</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DISABLE</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ENABLE</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VISEL</name>
       <description>VI Select</description>
       <bitOffset>1</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ONVERTSYNC</name>
         <description>On Vertical Sync</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONVERTBACKPORCH</name>
         <description>On Vertical Back Porch</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONACTIVEVIDEO</name>
         <description>On Active Video</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ONVERTFRONTPORCH</name>
         <description>On Vertical Front Porch</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DISPTYPE</name>
       <description>Display Type</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>STNCOLOR8BIT</name>
         <description>STN Color 8 bit</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CLCD</name>
         <description>CLCD</description>
         <value>8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BPP</name>
       <description>BPP</description>
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>BPP1</name>
         <description>BPP 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BPP2</name>
         <description>BPP 2</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BPP4</name>
         <description>BPP 4</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BPP8</name>
         <description>BPP 8</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BPP16</name>
         <description>BPP 16</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BPP24</name>
         <description>BPP 24</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE565</name>
       <description>MODE565</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>BGR556</name>
         <description>MODE 556</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RGB565</name>
         <description>MODE 565</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EMODE</name>
       <description>EMODE</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>LLBP</name>
         <description>LLBP</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BBBP</name>
         <description>BBBP</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>LBBP</name>
         <description>LBBP</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RFU</name>
         <description>RFU</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>C24</name>
       <description>C24</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BURST</name>
       <description>BURST</description>
       <bitOffset>19</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>WORDS4</name>
         <description>WORDS4</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>WORDS8</name>
         <description>WORDS8</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LPOL</name>
       <description>LPOL</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ACTIVEHI</name>
         <description>ACTIVE HIGH</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVELO</name>
         <description>ACTIVE LOW</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PEN</name>
       <description>PEN</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FR</name>
     <description>FRBUF</description>
     <addressOffset>0x18</addressOffset>
    </register>
    <register>
     <name>INT_EN</name>
     <description>LCD Interrupt Enable Register.</description>
     <addressOffset>0x020</addressOffset>
     <fields>
      <field>
       <name>UFLO</name>
       <description>Under FLow Interupt Enable</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ADRRDY</name>
       <description>Address Ready Interupt Enable</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>VCI</name>
       <description>VCI Interupt Enable</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BERR</name>
       <description>BERR Interupt Enable</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>LCD Status Register.</description>
     <addressOffset>0x024</addressOffset>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>UFLO</name>
       <description>Under FLow Interupt Status</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>Inactive</name>
         <description>No interrupt pending</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Interrupt pending</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
       <enumeratedValues>
        <usage>write</usage>
        <enumeratedValue>
         <name>Clear</name>
         <description>Clears the interrupt flag</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADRRDY</name>
       <description>Address Ready Interupt Status</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>Inactive</name>
         <description>No interrupt pending</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Interrupt pending</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
       <enumeratedValues>
        <usage>write</usage>
        <enumeratedValue>
         <name>Clear</name>
         <description>Clears the interrupt flag</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCI</name>
       <description>VCI Interupt Status</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>Inactive</name>
         <description>No interrupt pending</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Interrupt pending</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
       <enumeratedValues>
        <usage>write</usage>
        <enumeratedValue>
         <name>Clear</name>
         <description>Clears the interrupt flag</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BERR</name>
       <description>BERR Interupt Status</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>Inactive</name>
         <description>No interrupt pending</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Interrupt pending</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
       <enumeratedValues>
        <usage>write</usage>
        <enumeratedValue>
         <name>Clear</name>
         <description>Clears the interrupt flag</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LCDIDLE</name>
       <description>LCD IDLE Staus</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>BUSY</name>
         <description>BUSY</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>READY</name>
         <description>READY</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>256</dim>
     <dimIncrement>4</dimIncrement>
     <name>PALETTE[%s]</name>
     <description>Palette</description>
     <addressOffset>0x400</addressOffset>
     <fields>
      <field>
       <name>RED</name>
       <description>Red Data for Pallet Entry.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>GREEN</name>
       <description>Green Data for Pallet Entry.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>BLUE</name>
       <description>Blue Data for Pallet Entry.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--CLCD Color LCD Controller-->
  <peripheral>
   <name>CTB</name>
   <description>The Cryptographic Toolbox is a combination of cryptographic engines and a secure cryptographic accelerator (SCA) used to provide advanced cryptographic security.</description>
   <baseAddress>0x40001000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Crypto_Engine</name>
    <description>Crypto Engine interrupt.</description>
    <value>27</value>
   </interrupt>
   <registers>
    <register>
     <name>CRYPTO_CTRL</name>
     <description>Crypto Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0xC0000000</resetValue>
     <fields>
      <field>
       <name>RST</name>
       <description>Reset. This bit is used to reset the crypto accelerator.  All crypto internal states and related registers are reset to their default reset values. Control register such as CRYPTO_CTRL, CIPHER_CTRL, HASH_CTRL, CRC_CTRL, MAA_CTRL (with the exception of the STC bit), HASH_MSG_SZ_[3:0] and MAA_MAWS will retain their values. This bit will automatically clear itself after one cycle.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <name>reset_write</name>
        <usage>write</usage>
        <enumeratedValue>
         <name>reset</name>
         <description>Starts reset operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
       <enumeratedValues>
        <name>reset_read</name>
        <usage>read</usage>
        <enumeratedValue>
         <name>reset_done</name>
         <description>Reset complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Reset in progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INTR</name>
       <description>Interrupt Enable. Generates an interrupt when done or error set.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRC</name>
       <description>Source Select.  This bit selects the hash function and CRC generator input source.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inputFIFO</name>
         <description>Input FIFO</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>outputFIFO</name>
         <description>Output FIFO</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="INTR">
       <name>BSO</name>
       <description>Byte Swap Output. Note. No byte swap will occur if there is not a full word.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="INTR">
       <name>BSI</name>
       <description>Byte Swap Input. Note. No byte swap will occur if there is not a full word.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="INTR">
       <name>WAIT_EN</name>
       <description>Wait Pin Enable. This can be used to hold off the crypto DMA until an external memory is ready. This is useful for transferring pages from NAND flash which may take several microseconds to become ready.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WAIT_POL</name>
       <description>Wait Pin Polarity. When the wait pin is enabled, this bit selects its active state.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>activeLo</name>
         <description>Active Low.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>activeHi</name>
         <description>Active High.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WRSRC</name>
       <description>Write FIFO Source Select. This field determines where data written to the write FIFO comes from. When data is written to the write FIFO, it is always written out the DMA. To decrypt or encrypt data, the write FIFO source should be set to the cipher output. To implement memcpy() or memset() functions, or to fill memory with random data, the write FIFO source should be set to the read FIFO. When calculating a HASH or CMAC, the write FIFO should be disabled.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>none</name>
         <description>None.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>cipherOutput</name>
         <description>Cipher Output.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>readFIFO</name>
         <description>Read FIFO.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDSRC</name>
       <description>Read FIFO Source Select. This field selects the source of the read FIFO. Typically, it is set to use the DMA. To implement a memset() function, the read FIFO DMA should be disabled. To fill memory with random data or to hash random numbers, the read FIFO source should be set to the random number generator.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dmaDisabled</name>
         <description>DMA Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dmaOrApb</name>
         <description>DMA Or APB.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rng</name>
         <description>RNG.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLAG_MODE</name>
       <description>Done Flag Mode. This bit configures the access behavior of the individual CRYPTO_CTRL Done flags (CRYPTO_CTRL[27:24]). This bit is cleared only on reset to limit upkeep, i.e. once set, it will remain set until a reset occurs.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unres_wr</name>
         <description>Unrestricted write (0 or 1) of CRYPTO_CTRL[27:24] flags.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>res_wr</name>
         <description>Access to CRYPTO_CTRL[27:24] are write 1 to clear/write 0 no effect.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMADNEMSK</name>
       <description>DMA Done Flag Mask. This bit masks the DMA_DONE flag from being used to generate the CRYPTO_CTRL.DONE flag, and this disables a DMA_DONE condition from generating and interrupt. The DMA_DONE flag itself is unaffected and still may be monitored. This allows more optimal interrupt-driven crypto operations using DMA.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_used</name>
         <description>DMA_DONE not used in setting CRYPTO_CTRL.DONE bit.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>used</name>
         <description>DMA_DONE used in setting CRYPTO_CTRL.DONE bit.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMA_DONE</name>
       <description>DMA Done. DMA write/read operation is complete. This bit must be cleared before starting a DMA operation.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>notDone</name>
         <description>Not Done.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>done</name>
         <description>Done.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>GLS_DONE</name>
       <description>Galois Done. FIFO is full and CRC or Hamming Code Generator is enabled. This bit must be cleared before starting a CRC operation Note that DMA_DONE must be polled instead of this bit to determine the end of DMA operation during the utilization of Hamming Code Generator.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>HSH_DONE</name>
       <description>Hash Done. SHA operation is complete. This bit must be cleared before starting a HASH operation.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>CPH_DONE</name>
       <description>Cipher Done. Either AES or DES encryption/decryption operation is complete. This bit must be cleared before starting a cipher operation.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERR</name>
       <description>AHB Bus Error. This bit is set when the DMA encounters a bus error during a read or write operation. Once this bit is set, the DMA will stop. This bit can only be cleared by resetting the crypto block.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noError</name>
         <description>No Error.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Error.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY</name>
       <description>Ready. Crypto block ready for more data.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DMA_DONE">
       <name>DONE</name>
       <description>Done. One or more cryptographic calculations complete (logical OR of done flags).</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CIPHER_CTRL</name>
     <description>Cipher Control Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ENC</name>
       <description>Encrypt. Select encryption or decryption of input data.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>encrypt</name>
         <description>Encrypt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>decrypt</name>
         <description>Decrypt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>KEY</name>
       <description>Load Key from crypto DMA. This bit is automatically cleared by hardware after the DMA has completed loading the key. When the DMA operation is done, it sets the appropriate crypto DMA Done flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRC</name>
       <description>Source of Random key.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>cipherKey</name>
         <description>User cipher key (0x4000_1060).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>regFile</name>
         <description>Key from battery-backed register file (0x4000_5000 to 0x4000_501F).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>qspiKey_regFile</name>
         <description>Key from battery-backed register file (0x4000_5020 to 0x4000_502F).</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CIPHER</name>
       <description>Cipher Operation Select.  Symmetric Block Cipher algorithm selection or memory operation.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>aes128</name>
         <description>AES 128.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>aes192</name>
         <description>AES 192.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>aes256</name>
         <description>AES 256.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>des</name>
         <description>DES.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>tdes</name>
         <description>Triple DES.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE</name>
       <description>Mode Select. Mode of operation for block cipher or memory operation. DES/TDES cannot be used in CFB, OFB or CTR modes.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ECB</name>
         <description>ECB Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CBC</name>
         <description>CBC Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CFB</name>
         <description>CFB (AES only).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>OFB</name>
         <description>OFB (AES only).</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>CTR</name>
         <description>CTR (AES only).</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HVC</name>
       <description>H Vector Computation.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DTYPE</name>
       <description>GCM/CCM data type.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CCMM</name>
       <description>CCM M Parameter.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>3</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CCML</name>
       <description>CCM L Parameter.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>3</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>HASH_CTRL</name>
     <description>HASH Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>INIT</name>
       <description>Initialize. Initializes hash registers with standard constants.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>XOR</name>
       <description>XOR data with IV from cipher block. Useful when calculating HMAC to XOR the input pad and output pad.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HASH</name>
       <description>Hash function selection.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha1</name>
         <description>SHA-1.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha224</name>
         <description>SHA 224.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha256</name>
         <description>SHA 256.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha384</name>
         <description>SHA 384.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>sha512</name>
         <description>SHA 512.</description>
         <value>5</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LAST</name>
       <description>Last Message Bit. This bit shall be set along with the HASH_MSG_SZ register prior to hashing the last 512 or 1024-bit block of the message data. It will allow automatic preprocessing of the last message padding, which includes the trailing bit 1, followed by the respective number of zero bits for the last block size and finally the message length represented in bytes. The bit will be automatically cleared at the same time the HASH DONE is set, designating the completion of the last message hash.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEffect</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>lastMsgData</name>
         <description>Last Message Data.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_CTRL</name>
     <description>CRC Control Register.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>CRC</name>
       <description>Cyclic Redundancy Check Enable. The CRC cannot be enabled if the PRNG is enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MSB</name>
       <description>MSB select. This bit selects the order of calculating CRC on data.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>lsbFirst</name>
         <description>LSB First.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>msbFirst</name>
         <description>MSB First.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CRC">
       <name>PRNG</name>
       <description>Pseudo Random Number Generator Enable. If entropy is disabled, this outputs one byte of pseudo random data per clock cycle. If entropy is enabled, data is output at a rate of one bit per clock cycle.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CRC">
       <name>ENT</name>
       <description>Entropy Enable. If the PRNG is enabled, this mixes the high frequency ring oscillator with the LFSR. If the PRNG is disabled, the raw entropy data is output at a rate of 1 bit per clock. This makes it possible to characterize the quality of the entropy source.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CRC">
       <name>HAM</name>
       <description>Hamming Code Enable. Enable hamming code calculation.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HRST</name>
       <description>Hamming Reset. Reset Hamming code ECC generator for next block.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
       <enumeratedValues>
        <usage>write</usage>
        <enumeratedValue>
         <name>reset</name>
         <description>Starts reset operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA_SRC</name>
     <description>Crypto DMA Source Address.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>DMA Source Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA_DEST</name>
     <description>Crypto DMA Destination Address.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>DMA Destination Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA_CNT</name>
     <description>Crypto DMA Byte Count.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>COUNT</name>
       <description>DMA Byte Address.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>CRYPTO_DIN[%s]</name>
     <description>Crypto Data Input. Data input can be written to this register instead of using the DMA. This register writes to the FIFO. This register occupies four successive words to allow the use of multi-store instructions. Words can be written to any location, they will be placed in the FIFO in the order they are written. The endian swap input control bit affects this register.</description>
     <addressOffset>0x20</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Crypto Data Input. Input can be written to this register instead of using DMA.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>CRYPTO_DOUT[%s]</name>
     <description>Crypto Data Output. Resulting data from cipher calculation. Data is placed in the lower words of these four registers depending on the algorithm. For block cipher modes, this register holds the result of most recent encryption or decryption operation. These registers are affected by the endian swap bits.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Crypto Data Output. Resulting data from cipher calculation. Data is placed in the lower words of these four registers depending on algorithm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_POLY</name>
     <description>CRC Polynomial. The polynomial to be used for Galois Field calculations (CRC or LFSR) should be written to this register. This register is affected by the MSB control bit.</description>
     <addressOffset>0x40</addressOffset>
     <resetValue>0xEDB88320</resetValue>
     <fields>
      <field>
       <name>DATA</name>
       <description>CRC Polynomial. The polynomial to be used for Galois Field calculations (CRC or LFSR) should be written to this register. This register is affected by the MSB control bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CRC_VAL</name>
     <description>CRC Value. This is the state for the Galois Field. This register holds the result of a CRC calculation or the current state of the LFSR. This register is affected by the MSB control bit.</description>
     <addressOffset>0x44</addressOffset>
     <resetValue>0xFFFFFFFF</resetValue>
     <fields>
      <field>
       <name>VAL</name>
       <description>CRC Value. This is the state for the Galois Field. This register holds the result of a CRC calculation or the current state of LFSR. This register is affected by the MSB control bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HAM_ECC</name>
     <description>Hamming ECC Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>ECC</name>
       <description>Hamming ECC Value. These bits are the even parity of their corresponding bit groups.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>PAR</name>
       <description>Parity. This is the parity of the entire array.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>even</name>
         <description>Even.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>odd</name>
         <description>Odd.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>CIPHER_INIT[%s]</name>
     <description>Initial Vector. For block cipher operations that use CBC, CFB, OFB, or CNTR modes, this register holds the initial value. This register is updated with each encryption or decryption operation. This register is affected by the endian swap bits.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>IVEC</name>
       <description>Initial Vector. For block cipher operations that use CBC, CFB, OFB, or CNTR modes, this register holds the initial value. This register is updated with each encryption or decryption operation. This register is affected by the endian swap bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>8</dim>
     <dimIncrement>4</dimIncrement>
     <name>CIPHER_KEY[%s]</name>
     <description>Cipher Key.  This register holds the key used for block cipher operations. The lower words are used for block ciphers that use shorter key lengths. This register is affected by the endian swap input control bits.</description>
     <addressOffset>0x60</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>KEY</name>
       <description>Cipher Key. This register holds the key used for block cipher operations. The lower words are used for block ciphers that use shorter kye lengths. This register is affected by the endian swap input control bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>16</dim>
     <dimIncrement>4</dimIncrement>
     <name>HASH_DIGEST[%s]</name>
     <description>This register holds the calculated hash value. This register is affected by the endian swap bits.</description>
     <addressOffset>0x80</addressOffset>
     <fields>
      <field>
       <name>HASH</name>
       <description>This register holds the calculated hash value. This register is affected by the endian swap bits.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>HASH_MSG_SZ[%s]</name>
     <description>Message Size. This register holds the lowest 32-bit of message size in bytes.</description>
     <addressOffset>0xC0</addressOffset>
     <fields>
      <field>
       <name>MSGSZ</name>
       <description>Message Size. This register holds the lowest 32-bit of message size in bytes.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AAD_LENGTH_0</name>
     <description>.AAD Length Register 0.</description>
     <addressOffset>0xD0</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>LENGTH</name>
       <description>AAD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AAD_LENGTH_1</name>
     <description>.AAD Length Register 1.</description>
     <addressOffset>0xD4</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>LENGTH</name>
       <description>AAD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PLD_LENGTH_0</name>
     <description>.PLD Length Register 0.</description>
     <addressOffset>0xD8</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>LENGTH</name>
       <description>PLD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PLD_LENGTH_1</name>
     <description>.LENGTH.</description>
     <addressOffset>0xDC</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>LENGTH</name>
       <description>PLD length in bytes for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>TAGMIC[%s]</name>
     <description>TAG/MIC Registers.</description>
     <addressOffset>0xE0</addressOffset>
     <fields>
      <field>
       <name>LENGTH</name>
       <description>TAG/MIC output for AES GCM and CCM operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_CTRL0</name>
     <description>SCA Control 0 Register.</description>
     <addressOffset>0x100</addressOffset>
     <fields>
      <field>
       <name>STC</name>
       <description>Start Calculation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SCAIE</name>
       <description>SCA Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Abort Operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERMEM</name>
       <description>Erase Cryptographic Memory.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MANPARAM</name>
       <description>ECC Parameter Source.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HWKEY</name>
       <description>Hardware Key Select.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OPCODE</name>
       <description>SCA Opcode.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>MODADDR</name>
       <description>MODULO Address Offset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>ECCSIZE</name>
       <description>ECC Size.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_CTRL1</name>
     <description>SCA Advanced Control Register.</description>
     <addressOffset>0x104</addressOffset>
     <fields>
      <field>
       <name>MAN</name>
       <description>SCA Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>auto</name>
         <description>Auto Mode</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>manual</name>
         <description>Manual Mode</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AUTOCARRY</name>
       <description>Automatically propagate the carry for the next operation.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PLUSONE</name>
       <description>Enable Carry propagation for the next operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RESSELECT</name>
       <description>ALU Selection.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>CARRYPOS</name>
       <description>To set Carry location.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>10</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_STAT</name>
     <description>SCA Status Register.</description>
     <addressOffset>0x108</addressOffset>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SCA Busy.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SCAIF</name>
       <description>SCA Interrupt Flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PVF1</name>
       <description>Point 1 Verification Failed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PVF2</name>
       <description>Point 2 Verification Failed.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FSMERR</name>
       <description>FSM Transition Error.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>COMPERR</name>
       <description>EC Computation Error.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>MEMERR</name>
       <description>SCA Memory Access Error.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARRY</name>
       <description>Carry on ongoing operation.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>GTE2I2</name>
       <description>Modulo 2x Result.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ALUNEG1</name>
       <description>ALU 2 SubSign of the subtraction result for ALU_2.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ALUNEG2</name>
       <description>ALU 2 SubSign of the subtraction result for ALU_2.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PPX_ADDR</name>
     <description>PPX Coordinate Data Pointer Register.</description>
     <addressOffset>0x10C</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Point P Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PPY_ADDR</name>
     <description>PPY Coordinate Data Pointer Register.</description>
     <addressOffset>0x110</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Point P Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PPZ_ADDR</name>
     <description>PPZ Coordinate Data Pointer Register.</description>
     <addressOffset>0x114</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Point P Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PQX_ADDR</name>
     <description>PQX Coordinate Data Pointer Register.</description>
     <addressOffset>0x118</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Point Q Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PQY_ADDR</name>
     <description>PQY Coordinate Data Pointer Register.</description>
     <addressOffset>0x11C</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Point Q Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_PQZ_ADDR</name>
     <description>PQZ Coordinate Data Pointer Register.</description>
     <addressOffset>0x120</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Point Q Coordinate Data Pointer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_RDSA_ADDR</name>
     <description>SCA RDSA Address Register.</description>
     <addressOffset>0x124</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>The starting address of the R portion for R, S ECDSA signature.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_RES_ADDR</name>
     <description>SCA Result Address Register.</description>
     <addressOffset>0x128</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Starting address of result storage.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_OP_BUFF_ADDR</name>
     <description>SCA Operation Buffer Address Register.</description>
     <addressOffset>0x12C</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Starting address of operation buffer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCA_MODDATA</name>
     <description>SCA Modulo Data Input Register.</description>
     <addressOffset>0x130</addressOffset>
     <resetValue>0x0</resetValue>
     <fields>
      <field>
       <name>DATA</name>
       <description>Used to load the SCA modulo for modular operations.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--CTB The Cryptographic Toolbox is a combination of cryptographic engines and a secure cryptographic accelerator (SCA) used to provide advanced cryptographic security.-->
  <peripheral>
   <name>DMA</name>
   <description>DMA Controller Fully programmable, chaining capable DMA channels.</description>
   <baseAddress>0x40028000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>DMA0</name>
    <value>28</value>
   </interrupt>
   <interrupt>
    <name>DMA1</name>
    <value>29</value>
   </interrupt>
   <interrupt>
    <name>DMA2</name>
    <value>30</value>
   </interrupt>
   <interrupt>
    <name>DMA3</name>
    <value>31</value>
   </interrupt>
   <interrupt>
    <name>DMA4</name>
    <value>68</value>
   </interrupt>
   <interrupt>
    <name>DMA5</name>
    <value>69</value>
   </interrupt>
   <interrupt>
    <name>DMA6</name>
    <value>70</value>
   </interrupt>
   <interrupt>
    <name>DMA7</name>
    <value>71</value>
   </interrupt>
   <interrupt>
    <name>DMA8</name>
    <value>72</value>
   </interrupt>
   <interrupt>
    <name>DMA9</name>
    <value>73</value>
   </interrupt>
   <interrupt>
    <name>DMA10</name>
    <value>74</value>
   </interrupt>
   <interrupt>
    <name>DMA11</name>
    <value>75</value>
   </interrupt>
   <interrupt>
    <name>DMA12</name>
    <value>76</value>
   </interrupt>
   <interrupt>
    <name>DMA13</name>
    <value>77</value>
   </interrupt>
   <interrupt>
    <name>DMA14</name>
    <value>78</value>
   </interrupt>
   <interrupt>
    <name>DMA15</name>
    <value>79</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>DMA Control Register.</description>
     <addressOffset>0x000</addressOffset>
     <fields>
      <field>
       <name>CH0_IEN</name>
       <description>Channel 0 Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH2_IEN</name>
       <description>Channel 2 Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH3_IEN</name>
       <description>Channel 3 Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH4_IEN</name>
       <description>Channel 4 Interrupt Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH5_IEN</name>
       <description>Channel 5 Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH6_IEN</name>
       <description>Channel 6 Interrupt Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IEN">
       <name>CH7_IEN</name>
       <description>Channel 7 Interrupt Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>DMA Interrupt Register.</description>
     <addressOffset>0x004</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>CH0_IPEND</name>
       <description>Channel Interrupt.   To clear an interrupt, all active interrupt bits of the DMA_ST must be cleared. The interrupt bits are set only if their corresponding interrupt enable bits are set in DMA_CN.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH1_IPEND</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH2_IPEND</name>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH3_IPEND</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH4_IPEND</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH5_IPEND</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH6_IPEND</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="CH0_IPEND">
       <name>CH7_IPEND</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <cluster>
     <dim>8</dim>
     <dimIncrement>0x20</dimIncrement>
     <name>CH[%s]</name>
     <description>DMA Channel registers.</description>
     <headerStructName>dma_ch</headerStructName>
     <addressOffset>0x100</addressOffset>
     <access>read-write</access>
     <register>
      <name>CFG</name>
      <description>DMA Channel Configuration Register.</description>
      <addressOffset>0x000</addressOffset>
      <fields>
       <field>
        <name>CHEN</name>
        <description>Channel Enable.  This bit is automatically cleared when DMA_ST.CH_ST changes from 1 to 0.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. Setting this bit to 1 enables DMA_SRC, DMA_DST and DMA_CNT to be reloaded with their corresponding reload registers upon count-to-zero. This bit is also writeable in the Count Reload Register. Refer to the description on Buffer Chaining for use of this bit. If buffer chaining is not used this bit must be written with a 0. This bit should be set after the reload registers have been programmed.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PRI</name>
        <description>DMA Priority.</description>
        <bitOffset>2</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>high</name>
          <description>Highest Priority.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medHigh</name>
          <description>Medium High Priority.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>medLow</name>
          <description>Medium Low Priority.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>low</name>
          <description>Lowest Priority.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQSEL</name>
        <description>Request Select. Select DMA request line for this channel. If memory-to-memory is selected, the channel operates as if the request is always active.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>6</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>MEMTOMEM</name>
          <description>Memory To Memory</description>
          <value>0x00</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0RX</name>
          <description>SPI0 RX</description>
          <value>0x01</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1RX</name>
          <description>SPI1 RX</description>
          <value>0x02</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0RX</name>
          <description>UART0 RX</description>
          <value>0x04</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART1RX</name>
          <description>UART1 RX</description>
          <value>0x05</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0RX</name>
          <description>I2C0 RX</description>
          <value>0x07</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C1RX</name>
          <description>I2C1 RX</description>
          <value>0x08</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ADC</name>
          <description>Analog-to-Digital Converter Channel</description>
          <value>0x09</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C2RX</name>
          <description>I2C2 RX</description>
          <value>0x0A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART2RX</name>
          <description>UART2 RX</description>
          <value>0x0E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI2RX</name>
          <description>SPI2 RX</description>
          <value>0x0F</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP1</name>
          <description>USB Endpoint 1 RX</description>
          <value>0x11</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP2</name>
          <description>USB Endpoint 2 RX</description>
          <value>0x12</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP3</name>
          <description>USB Endpoint 3 RX</description>
          <value>0x13</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP4</name>
          <description>USB Endpoint 4 RX</description>
          <value>0x14</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP5</name>
          <description>USB Endpoint 5 RX</description>
          <value>0x15</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP6</name>
          <description>USB Endpoint 6 RX</description>
          <value>0x16</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP7</name>
          <description>USB Endpoint 7 RX</description>
          <value>0x17</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP8</name>
          <description>USB Endpoint 8 RX</description>
          <value>0x18</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP9</name>
          <description>USB Endpoint 9 RX</description>
          <value>0x19</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP10</name>
          <description>USB Endpoint 10 RX</description>
          <value>0x1A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBRXEP11</name>
          <description>USB Endpoint 11 RX</description>
          <value>0x1B</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI0TX</name>
          <description>SPI0 TX</description>
          <value>0x21</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI1TX</name>
          <description>SPI1 TX</description>
          <value>0x22</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART0TX</name>
          <description>UART0 TX</description>
          <value>0x24</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART1TX</name>
          <description>UART1 TX</description>
          <value>0x25</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C0TX</name>
          <description>I2C0 TX</description>
          <value>0x27</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C1TX</name>
          <description>I2C1 TX</description>
          <value>0x28</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>I2C2TX</name>
          <description>I2C2 TX</description>
          <value>0x2A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>UART2TX</name>
          <description>UART2 TX</description>
          <value>0x2E</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>SPI2TX</name>
          <description>SPI3 TX</description>
          <value>0x2F</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP1</name>
          <description>USB Endpoint 1 TX</description>
          <value>0x31</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP2</name>
          <description>USB Endpoint 2 TX</description>
          <value>0x32</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP3</name>
          <description>USB Endpoint 3 TX</description>
          <value>0x33</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP4</name>
          <description>USB Endpoint 4 TX</description>
          <value>0x34</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP5</name>
          <description>USB Endpoint 5 TX</description>
          <value>0x35</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP6</name>
          <description>USB Endpoint 6 TX</description>
          <value>0x36</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP7</name>
          <description>USB Endpoint 7 TX</description>
          <value>0x37</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP8</name>
          <description>USB Endpoint 8 TX</description>
          <value>0x38</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP9</name>
          <description>USB Endpoint 9 TX</description>
          <value>0x39</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP10</name>
          <description>USB Endpoint 10 TX</description>
          <value>0x3A</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>USBTXEP11</name>
          <description>USB Endpoint 11 TX</description>
          <value>0x3B</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>REQWAIT</name>
        <description>Request Wait Enable.  When enabled, delay timer start until DMA request transitions from active to inactive.</description>
        <bitOffset>10</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>TOSEL</name>
        <description>Timeout Period Select.</description>
        <bitOffset>11</bitOffset>
        <bitWidth>3</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>to4</name>
          <description>Timeout of 3 to 4 prescale clocks.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to8</name>
          <description>Timeout of 7 to 8 prescale clocks.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to16</name>
          <description>Timeout of 15 to 16 prescale clocks.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to32</name>
          <description>Timeout of 31 to 32 prescale clocks.</description>
          <value>3</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to64</name>
          <description>Timeout of 63 to 64 prescale clocks.</description>
          <value>4</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to128</name>
          <description>Timeout of 127 to 128 prescale clocks.</description>
          <value>5</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to256</name>
          <description>Timeout of 255 to 256 prescale clocks.</description>
          <value>6</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>to512</name>
          <description>Timeout of 511 to 512 prescale clocks.</description>
          <value>7</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>PSSEL</name>
        <description>Pre-Scale Select. Selects the Pre-Scale divider for timer clock input.</description>
        <bitOffset>14</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable timer.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div256</name>
          <description>hclk / 256.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div64k</name>
          <description>hclk / 64k.</description>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div16M</name>
          <description>hclk / 16M.</description>
          <value>3</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCWD</name>
        <description>Source Width. In most cases, this will be the data width of each AHB transactions. However, the width will be reduced in the cases where DMA_CNT indicates a smaller value.</description>
        <bitOffset>16</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>SRCINC</name>
        <description>Source Increment Enable. This bit enables DMA_SRC increment upon every AHB transaction. This bit is forced to 0 for DMA receive from peripherals.</description>
        <bitOffset>18</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTWD</name>
        <description>Destination Width. Indicates the width of the each AHB transactions to the destination peripheral or memory. (The actual width may be less than this if there are insufficient bytes in the DMA FIFO for the full width).</description>
        <bitOffset>20</bitOffset>
        <bitWidth>2</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>byte</name>
          <description>Byte.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>halfWord</name>
          <description>Halfword.</description>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>word</name>
          <description>Word.</description>
          <value>2</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>DSTINC</name>
        <description>Destination Increment Enable. This bit enables DMA_DST increment upon every AHB transaction. This bit is forced to 0 for DMA transmit to peripherals.</description>
        <bitOffset>22</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>BRST</name>
        <description>Burst Size. The number of bytes to be transferred into and out of the DMA FIFO in a single burst.  Burst size equals 1 + value stored in this field.</description>
        <bitOffset>24</bitOffset>
        <bitWidth>5</bitWidth>
       </field>
       <field>
        <name>CHDIEN</name>
        <description>Channel Disable Interrupt Enable. When enabled, the IPEND will be set to 1 whenever CH_ST changes from 1 to 0.</description>
        <bitOffset>30</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZIEN</name>
        <description>Count-to-zero Interrupts Enable. When enabled, the IPEND will be set to 1 whenever a count-to-zero event occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
     <register>
      <name>ST</name>
      <description>DMA Channel Status Register.</description>
      <addressOffset>0x004</addressOffset>
      <fields>
       <field>
        <name>CH_ST</name>
        <description>Channel Status. This bit is used to indicate to the programmer when it is safe to change the configuration, address, and count registers for the channel. Whenever this bit is cleared by hardware,  the DMA_CFG.CHEN bit is also cleared (if not cleared already).</description>
        <bitOffset>0</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>IPEND</name>
        <description>Channel Interrupt.</description>
        <bitOffset>1</bitOffset>
        <bitWidth>1</bitWidth>
        <access>read-only</access>
        <enumeratedValues>
         <enumeratedValue>
          <name>inactive</name>
          <description>No interrupt is pending.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pending</name>
          <description>An interrupt is pending.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
       <field>
        <name>CTZ_ST</name>
        <description>Count-to-Zero (CTZ) Event Interrupt Flag</description>
        <bitOffset>2</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>RLD_ST</name>
        <description>Reload Event Interrupt Flag.</description>
        <bitOffset>3</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>BUS_ERR</name>
        <description>Bus Error. Indicates that an AHB abort was received and the channel has been disabled.</description>
        <bitOffset>4</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
       <field>
        <name>TO_ST</name>
        <description>Time-Out Event Interrupt Flag.</description>
        <bitOffset>6</bitOffset>
        <bitWidth>1</bitWidth>
        <modifiedWriteValues>oneToClear</modifiedWriteValues>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC</name>
      <description>Source Device Address. If SRCINC=1, the counter bits are incremented by 1,2, or 4, depending on the data width of each AHB cycle. For peripheral transfers, some or all of the actual address bits are fixed. If SRCINC=0, this register remains constant. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with the contents of DMA_SRC_RLD.</description>
      <addressOffset>0x008</addressOffset>
      <fields>
       <field>
        <name>SRC</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST</name>
      <description>Destination Device Address. For peripheral transfers, some or all of the actual address bits are fixed. If DSTINC=1, this register is incremented on every AHB write out of the DMA FIFO. They are incremented by 1, 2, or 4, depending on the data width of each AHB cycle. In the case where a count-to-zero condition occurs while RLDEN=1, the register is reloaded with DMA_DST_RLD.</description>
      <addressOffset>0x00C</addressOffset>
      <fields>
       <field>
        <name>DST</name>
        <bitOffset>0</bitOffset>
        <bitWidth>32</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT</name>
      <description>DMA Counter. The user loads this register with the number of bytes to transfer. This counter decreases on every AHB cycle into the DMA FIFO. The decrement will be 1, 2, or 4 depending on the data width of each AHB cycle. When the counter reaches 0, a count-to-zero condition is triggered.</description>
      <addressOffset>0x010</addressOffset>
      <fields>
       <field>
        <name>CNT</name>
        <description>DMA Counter.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>SRC_RLD</name>
      <description>Source Address Reload Value. The value of this register is loaded into DMA0_SRC upon a count-to-zero condition.</description>
      <addressOffset>0x014</addressOffset>
      <fields>
       <field>
        <name>SRC_RLD</name>
        <description>Source Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>DST_RLD</name>
      <description>Destination Address Reload Value. The value of this register is loaded into DMA0_DST upon a count-to-zero condition.</description>
      <addressOffset>0x018</addressOffset>
      <fields>
       <field>
        <name>DST_RLD</name>
        <description>Destination Address Reload Value.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>31</bitWidth>
       </field>
      </fields>
     </register>
     <register>
      <name>CNT_RLD</name>
      <description>DMA Channel Count Reload Register.</description>
      <addressOffset>0x01C</addressOffset>
      <fields>
       <field>
        <name>CNT_RLD</name>
        <description>Count Reload Value. The value of this register is loaded into DMA0_CNT upon a count-to-zero condition.</description>
        <bitOffset>0</bitOffset>
        <bitWidth>24</bitWidth>
       </field>
       <field>
        <name>RLDEN</name>
        <description>Reload Enable. This bit should be set after the address reload registers have been programmed. This bit is automatically cleared to 0 when reload occurs.</description>
        <bitOffset>31</bitOffset>
        <bitWidth>1</bitWidth>
        <enumeratedValues>
         <enumeratedValue>
          <name>dis</name>
          <description>Disable.</description>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>en</name>
          <description>Enable.</description>
          <value>1</value>
         </enumeratedValue>
        </enumeratedValues>
       </field>
      </fields>
     </register>
    </cluster>
   </registers>
  </peripheral>
<!--DMA DMA Controller Fully programmable, chaining capable DMA channels.-->
  <peripheral>
   <name>EMAC</name>
   <description>10/100 Ethernet MAC.</description>
   <baseAddress>0x4004F000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>EMAC</name>
    <description>EMAC IRQ</description>
    <value>64</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>Network Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00</resetValue>
     <fields>
      <field>
       <name>LB</name>
       <description>Loopback.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>LBL</name>
       <description>Loopback local.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RXEN</name>
       <description>Receive Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXEN</name>
       <description>Transmit Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>MPEN</name>
       <description>Management Port Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>CLST</name>
       <description>Clear Statistics.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>INCST</name>
       <description>Increment Statistics.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>WREN</name>
       <description>Write enable for statistics registers.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>BP</name>
       <description>Back pressure.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXSTART</name>
       <description>Transmission start.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXHALT</name>
       <description>Transmit halt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXPF</name>
       <description>Transmit pause frame.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXZQPF</name>
       <description>Transmit zero quantum pause frame.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CFG</name>
     <description>Network Configuration Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>SPEED</name>
       <description>Speed Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FULLDPLX</name>
       <description>Full Duplex. If set to 1 the transmit block ignores the state of collision and carrier sense and allows Rx while transmitting.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>BITRATE</name>
       <description>Bit Rate. Writing 1 to this bit configures the interface for serial operation. </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>JUMBOFR</name>
       <description>Jumbo Frames. Writing 1 to this bit enables jumbo frames of up to 10,240 bytes to be accepted.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>COPYAF</name>
       <description>Copy All Frames. If 1, all valid frames will be received.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>NOBC</name>
       <description>No Broadcast. If 1, frames addressed to the broadcast address of all ones will not be received.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>MHEN</name>
       <description>Multicast Hash Enable. If 1, multicast frames will be received when the 6 bit hash function of the destination address points to a bit that is set in the hash register.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>UHEN</name>
       <description>Unicast Hash Enable. If 1, unicast frames will be received when the 6 bit hash function of the destination address points to a bit that is set in the hash register.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RXFR</name>
       <description>Receive 1536 Byte Frames. Writing 1 to this bit means the MAC receives packets up to 1536 bytes in length. Normally the MAC rejects any packet above 1518 bytes</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>MDCCLK</name>
       <description>MDC Frequency. Set according to PCLK speed. This field determines by what number PCLK is divided to generate MDC.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <access>write-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>div8</name>
         <description>PCLK up to 20MHz</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>PCLK up to 40MHz</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>PCLK up to 80MHz</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>PCLK up to 160MHz</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RTTST</name>
       <description>Retry Test. Must be set to zero for normal operation. If set to 1, the back-off between collisions is always one slot time.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PAUSEEN</name>
       <description>Pause Enable. If 1, Ethernet packet transmission pauses when a valid pause packet is received.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXBUFFOFS</name>
       <description>Receive buffer offset. These bits indicate the number of bytes by which the received data is offset from the start of the first receive buffer.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXLFCEN</name>
       <description>Receive length field checking enable. If 1, packets with measured lengths shorter than their length fields are discarded. Packets containing a type ID in bytes 13 and 14 (length/type field &gt;=0600) are not counted as length errors.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>DCRXFCS</name>
       <description>Discard receive FCS. If 1, the FCS field of received frames will not be copied to memory.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>HDPLXRXEN</name>
       <description>Enable packets to be received in half-duplex mode while transmitting.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>IGNRXFCS</name>
       <description>Ignore RX FCS. If 1, packets with FCS/CRC errors are not rejected and no FCS error statistics are counted. For normal operation, this bit must be set to 0.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>Network Status Register.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>LINK</name>
       <description>LINK pin status. Returns status of EMAC_LINK pin.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>MDIO</name>
       <description>MDIO pin status. Returns status of the EMAC_MDIO pin. Use the PHY maintenance register for reading managed frames rather than this bit.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>IDLE</name>
       <description>PHY management logic status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TX_ST</name>
     <description>Transmit Status Register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>UBR</name>
       <description>Used Bit Read. Set when a transmit buffer descriptor is read with its used bit set. Write 1 to clear this bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>COLS</name>
       <description>Collision Occurred. Set when a collision occurs. Write 1 to clear this bit.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RTYLIM</name>
       <description>Retry Limit Exceeded. Set when the retry limit has been exceeded. Write 1 to clear this bit. </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXGO</name>
       <description>Transmit Go. If 1, transmit is active.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>BEMF</name>
       <description>Buffers Exhausted Mid Frame. If the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and EMAC_TXER asserted. Write 1 to clear this bit.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXCMPL</name>
       <description>Transmit Complete. Set when a frame has been transmitted. Write 1 to clear this bit.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXUR</name>
       <description>Transmit Underrun. Set when the MAC transmit FIFO was read while was empty. If this happens the transmitter forces bad. Write 1 to clear this bit.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RXBUF_PTR</name>
     <description>Receive Buffer Queue Pointer Register.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>RXBUF</name>
       <description>Receive buffer queue pointer. Written with the address of the start of the receive queue, reads as a pointer to the current buffer being used.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>30</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TXBUF_PTR</name>
     <description>Transmit Buffer Queue Pointer Register.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>TXBUF</name>
       <description>Transmit buffer queue pointer. Written with the address of the start of the transmit queue, reads as a pointer to the first buffer of the frame being transmitted or about to be transmitted.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>30</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RX_ST</name>
     <description>Receive Status Register.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>BNA</name>
       <description>Buffer Not Available. An attempt was made to get a new buffer and the pointer indicated that it was owned by the processor. The DMA will reread the pointer each time a new frame starts until a valid pointer is found. This bit will be set at each attempt that fails even if it has not had a successful pointer read since it has been cleared. Write 1 to clear this bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FR</name>
       <description>Frame Received. One or more frames have been received and placed in memory. Write 1 to clear this bit.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RXOR</name>
       <description>Receive Overrun. The DMA block was unable to store the receive frame to memory. Either because the AHB bus was not granted in time or because a not OK hresp was returned. The buffer will be recovered if this happens. Write 1 to clear this bit.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_ST</name>
     <description>Interrupt Status Register.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>MPS</name>
       <description>Management Packet Sent Interrupt Status. The PHY maintenance register has completed its operation. Cleared when read.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RXCMPL</name>
       <description>Receive Complete Interrupt Status. Set when a frame has been stored in memory. Cleared when read.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RXUBR</name>
       <description>RX Used Bit Read Interrupt Status. Set when a receive buffer descriptor is read with its used bit set. Cleared when read.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXUBR</name>
       <description>TX Used Bit Read Interrupt Status. Set when a transmit buffer descriptor is read with its used bit set. Cleared when read</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXUR</name>
       <description>Ethernet Transmit Underrun Interrupt Status. Set when the MAC transmit FIFO was read while was empty. If this happens the transmitter forces bad CRC and forces EMAC_TXER high. Cleared when read.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RLE</name>
       <description>Retry Limit Exceeded Interrupt Status. Transmit error. Cleared when read.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXERR</name>
       <description>Transmit Buffers Exhausted In Mid-frame Interrupt Status. Transmit error. Cleared when read.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TXCMPL</name>
       <description>Transmit Complete Interrupt Status. Set when a frame has been transmitted. Cleared when read.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>LC</name>
       <description>Link Change Interrupt Status. Set when the external link signal changes. Cleared when read.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RXOR</name>
       <description>Receive Overrun Interrupt Status. Set when the receive overrun status bit gets set. Cleared when read.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>HRESPNO</name>
       <description>hresp not OK Interrupt Status. Set when the DMA block sees hresp not OK. Cleared when read.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>PPR</name>
       <description>Pause Packet Received Interrupt Status. Indicates a valid pause packet has been received. Cleared when read.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>PTZ</name>
       <description>Pause Time Zero Interrupt Status. Set when the MAC Pause Time register (MAC_PT) decrements to zero. Cleared when read.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x28</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>MPS</name>
       <description>Management Packet Sent Interrupt Enable</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXCMPL</name>
       <description>Receive Complete Interrupt Enable</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXUBR</name>
       <description>RX Used Bit Read Interrupt Enable</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXUBR</name>
       <description>TX Used Bit Read Interrupt Enable</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXUR</name>
       <description>Ethernet Transmit Underrun Interrupt Enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RLE</name>
       <description>Retry Limit Exceeded Interrupt Enable</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXERR</name>
       <description>Transmit Buffers Exhausted In Mid-frame Interrupt Enable</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXCMPL</name>
       <description>Transmit Complete Interrupt Enable</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>LC</name>
       <description>Link Change Interrupt Enable</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXOR</name>
       <description>Receive Overrun Interrupt Enable</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>HRESPNO</name>
       <description>hresp not OK Interrupt Enable</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PPR</name>
       <description>Pause Packet Received Interrupt Enable</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PTZ</name>
       <description>Pause Time Zero Interrupt Enable</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_DIS</name>
     <description>Interrupt Disable Register.</description>
     <addressOffset>0x2C</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>MPS</name>
       <description>Management Packet Sent Interrupt Disable</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXCMPL</name>
       <description>Receive Complete Interrupt Disable</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXUBR</name>
       <description>RX Used Bit Read Interrupt Disable</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXUBR</name>
       <description>TX Used Bit Read Interrupt Disable</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXUR</name>
       <description>Ethernet Transmit Underrun Interrupt Disable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RLE</name>
       <description>Retry Limit Exceeded Interrupt Disable</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXERR</name>
       <description>Transmit Buffers Exhausted In Mid-frame Interrupt Disable</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TXCMPL</name>
       <description>Transmit Complete Interrupt Disable</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>LC</name>
       <description>Link Change Interrupt Disable</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>RXOR</name>
       <description>Receive Overrun Interrupt Disable</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>HRESPNO</name>
       <description>hresp not OK Interrupt Disable</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PPR</name>
       <description>Pause Packet Received Interrupt Disable</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PTZ</name>
       <description>Pause Time Zero Interrupt Disable</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MASK</name>
     <description>Interrupt Mask Register.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>MPS</name>
       <description>Management Packet Sent Interrupt Mask</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXCMPL</name>
       <description>Receive Complete Interrupt Mask</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXUBR</name>
       <description>RX Used Bit Read Interrupt Mask</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXUBR</name>
       <description>TX Used Bit Read Interrupt Mask</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXUR</name>
       <description>Ethernet Transmit Underrun Interrupt Mask</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RLE</name>
       <description>Retry Limit Exceeded Interrupt Mask</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXERR</name>
       <description>Transmit Buffers Exhausted In Mid-frame Interrupt Mask</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TXCMPL</name>
       <description>Transmit Complete Interrupt Mask</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>LC</name>
       <description>Link Change Interrupt Mask</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RXOR</name>
       <description>Receive Overrun Interrupt Mask</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>HRESPNO</name>
       <description>hresp not OK Interrupt Mask</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>PPR</name>
       <description>Pause Packet Received Interrupt Mask</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>PTZ</name>
       <description>Pause Time Zero Interrupt Mask</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PHY_MT</name>
     <description>PHY Maintenance Register.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>PHY Data. For a write operation this field is the data to be written to the PHY. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>REGADDR</name>
       <description>Register Address. Specifies the register in the PHY to access.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>5</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>PHYADDR</name>
       <description>PHY Address. Specifies the PHY to access.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>5</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>OP</name>
       <description>Operation</description>
       <bitOffset>28</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>write</name>
         <description>Write</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>read</name>
         <description>Read</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SOP</name>
       <description>TBD </description>
       <bitOffset>30</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PT</name>
     <description>Pause Time Register.</description>
     <addressOffset>0x38</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>TIME</name>
       <description>Pause Time. Stores the current value of the pause time register, which is decremented every 512 bit times.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PFR</name>
     <description>Pause Frame Received OK.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>PFR</name>
       <description>Pause Frames Received OK. A 16-bit register counting the number of good pause frames received. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FTOK</name>
     <description>Frames Transmitted OK.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>FTOK</name>
       <description>Frames Transmitted OK. A 32-bit register counting the number of frames successfully transmitted, i.e. no underrun and not too many retries.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SCF</name>
     <description>Single Collision Frames.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>SCF</name>
       <description>Single Collision Frames. A 16-bit register counting the number of frames experiencing a single collision before being successfully transmitted, i.e. no underrun.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>MCF</name>
     <description>Multiple Collision Frames.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>MCF</name>
       <description>Multiple Collision Frames. A 16-bit register counting the number of frames experiencing between two and fifteen collisions prior to being successfully transmitted, i.e. no underrun and not too many retries.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FROK</name>
     <description>Fames Received OK.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>FROK</name>
       <description>Frames Received OK. A 24-bit register counting the number of good packets received</description>
       <bitOffset>0</bitOffset>
       <bitWidth>24</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FCS_ERR</name>
     <description>Frame Check Sequence Errors.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>FCSERR</name>
       <description>Frame Check Sequence Errors.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>ALGN_ERR</name>
     <description>Alignment Errors.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ALGNERR</name>
       <description>Alignment Errors. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DFTXF</name>
     <description>Deferred Transmission Frames.</description>
     <addressOffset>0x58</addressOffset>
     <fields>
      <field>
       <name>DFTXF</name>
       <description>Deferred Transmission Frames. A 16-bit register counting the number of packets experiencing deferral due to carrier sense being active on their first attempt at transmission</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>LC</name>
     <description>Late Collisions.</description>
     <addressOffset>0x5C</addressOffset>
     <fields>
      <field>
       <name>LC</name>
       <description>Late Collisions. An 8-bit register counting the number of packets that experience a collision after the slot time (512 bits) has expired.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>EC</name>
     <description>Excessive Collisions.</description>
     <addressOffset>0x60</addressOffset>
     <fields>
      <field>
       <name>EC</name>
       <description>Excessive Collisions. An 8-bit register counting the number of packets that failed to be transmitted because they experienced 16 collisions.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TUR_ERR</name>
     <description>Transmit Underrun Errors.</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>TURERR</name>
       <description>Transmit Underrun Error. An 8-bit register counting the number of packets not transmitted due to a transmit FIFO underrun.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CS_ERR</name>
     <description>Carrier Sense Errors.</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>CSERR</name>
       <description>An 8-bit register counting the number of packets transmitted where carrier sense was not seen during transmission or where carrier sense was deasserted after being asserted in a transmit packet without collision (no underrun).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RR_ERR</name>
     <description>Receive Resource Errors.</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>RRERR</name>
       <description>Receive Resource Errors. A 16 bit register counting the number of frames that were address matched but could not be copied to memory because no receive buffer was available.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>ROR_ERR</name>
     <description>Receive Overrun Errors.</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>RORERR</name>
       <description>Receive Overruns. An 8 bit register counting the number of frames that are address recognized but were not copied to memory due to a receive DMA overrun.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RS_ERR</name>
     <description>Receive Symbol Errors.</description>
     <addressOffset>0x74</addressOffset>
     <fields>
      <field>
       <name>RSERR</name>
       <description>Receive Symbol Errors. An 8-bit register counting the number of packets that had EMAC_RXER asserted during reception.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>EL_ERR</name>
     <description>Excessive Length Errors.</description>
     <addressOffset>0x78</addressOffset>
     <fields>
      <field>
       <name>ELERR</name>
       <description>Excessive Length Errors. An 8-bit register counting the number of packets received exceeding 1518 bytes in length (1536 if RXFR is set in the MAC_CFG register;</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RJ</name>
     <description>Receive Jabber.</description>
     <addressOffset>0x7C</addressOffset>
     <fields>
      <field>
       <name>RJERR</name>
       <description>Receive Jabbers. An 8-bit register counting the number of packets received exceeding 1518 bytes in length (1536 if RXFR is set in the MAC_CFG register; </description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>USF</name>
     <description>Undersize Frames.</description>
     <addressOffset>0x80</addressOffset>
     <fields>
      <field>
       <name>USF</name>
       <description>Undersize Frames. An 8-bit register counting the number of packets received less than 64 bytes in length but do not have either a CRC error, an alignment error or a receive symbol error.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SQE_ERR</name>
     <description>SQE Test Errors.</description>
     <addressOffset>0x84</addressOffset>
     <fields>
      <field>
       <name>SQEERR</name>
       <description>SQE Test Errors. An 8-bit register counting the number of packets where collision was not asserted within 96 bit times (an interframe gap) of EMAC_TXEN being deasserted in half duplex mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RLFM</name>
     <description>Received Length Field Mismatch.</description>
     <addressOffset>0x88</addressOffset>
     <fields>
      <field>
       <name>RLFM</name>
       <description>Receive length field mismatch </description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TPF</name>
     <description>Transmitted Pause Frames.</description>
     <addressOffset>0x8C</addressOffset>
     <fields>
      <field>
       <name>TPF</name>
       <description>Transmitted Pause Frames. A 16-bit register counting the number of pause packets transmitted.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>HASHL</name>
     <description>Hash Register Bottom [31:0].</description>
     <addressOffset>0x90</addressOffset>
     <fields>
      <field>
       <name>HASH</name>
       <description>Bits 31:0 of the hash address register. See Hash Addressing</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>HASHH</name>
     <description>Hash Register top [63:32].</description>
     <addressOffset>0x94</addressOffset>
     <fields>
      <field>
       <name>HASH</name>
       <description>Bits 63:32 of the hash address register. See Hash Addressing</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA1L</name>
     <description>Specific Address 1 Bottom.</description>
     <addressOffset>0x98</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 1 [31:0]. Least significant bits of the MAC specific address 1, i.e. bits 31:0. This field is used for transmission of pause packets</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA1H</name>
     <description>Specific Address 1 Top.</description>
     <addressOffset>0x9C</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 1 [47:32]. Most significant bits of the MAC specific address 1, i.e. bits 47:32.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA2L</name>
     <description>Specific Address 2 Bottom.</description>
     <addressOffset>0xA0</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 2 [31:0]. Least significant bits of the MAC specific address 2, i.e. bits 31:0. This field is used for transmission of pause packets</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA2H</name>
     <description>Specific Address 2 Top.</description>
     <addressOffset>0xA4</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 2 [47:32]. Most significant bits of the MAC specific address 2, i.e. bits 47:32.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA3L</name>
     <description>Specific Address 3 Bottom.</description>
     <addressOffset>0xA8</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 3 [31:0]. Least significant bits of the MAC specific address 3, i.e. bits 31:0. This field is used for transmission of pause packets</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA3H</name>
     <description>Specific Address 3 Top.</description>
     <addressOffset>0xAC</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 3 [47:32]. Most significant bits of the MAC specific address 3, i.e. bits 47:32.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA4L</name>
     <description>Specific Address 4 Bottom.</description>
     <addressOffset>0xB0</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 4 [31:0]. Least significant bits of the MAC specific address 4, i.e. bits 31:0. This field is used for transmission of pause packets</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SA4H</name>
     <description>Specific Address 4 Top.</description>
     <addressOffset>0xB4</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>MAC Specific Address 4 [47:32]. Most significant bits of the MAC specific address 4, i.e. bits 47:32.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TID_CK</name>
     <description>Type ID Checking.</description>
     <addressOffset>0xB8</addressOffset>
     <fields>
      <field>
       <name>TID</name>
       <description>Type ID Checking. For use in comparisons with received frames TypeID/Length field.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TPQ</name>
     <description>Transmit Pause Quantum.</description>
     <addressOffset>0xBC</addressOffset>
     <fields>
      <field>
       <name>TPQ</name>
       <description>Transmit Pause Quantum. Used in hardware generation of transmitted pause packets as value for pause quantum</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>REV</name>
     <description>Revision register.</description>
     <addressOffset>0xFC</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>REV</name>
       <description>Revision Reference. Fixed two byte value specific to revision of design.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>PART</name>
       <description>Part Reference. For Ethernet MAC design, this is fixed at 0x01.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--EMAC 10/100 Ethernet MAC.-->
  <peripheral>
   <name>FCR</name>
   <description>Function Control Register.</description>
   <baseAddress>0x40000800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>FCTRL0</name>
     <description>Register 0.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>USB_EXTCLK_SEL</name>
       <description>USB External Core Clock Select.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>sys</name>
         <description>Generated clock from system clock.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dig</name>
         <description>Digital clock from a GPIO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C0_SDA_FILTER_EN</name>
       <description>I2C0 SDA Glitch Filter Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C0_SCL_FILTER_EN</name>
       <description>I2C0 SCL Glitch Filter Enable.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C1_SDA_FILTER_EN</name>
       <description>I2C1 SDA Glitch Filter Enable.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C1_SCL_FILTER_EN</name>
       <description>I2C1 SCL Glitch Filter Enable.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C2AF2_SDA_FILTER_EN</name>
       <description>I2C2 AF2 SDA Glitch Filter Enable.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C2AF2_SCL_FILTER_EN</name>
       <description>I2C2 AF2 SCL Glitch Filter Enable.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C2AF3_SDA_FILTER_EN</name>
       <description>I2C2 AF3 SDA Glitch Filter Enable.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C2AF3_SCL_FILTER_EN</name>
       <description>I2C2 AF3 SCL Glitch Filter Enable.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C2AF4_SDA_FILTER_EN</name>
       <description>I2C2 AF4 SDA Glitch Filter Enable</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>I2C2AF4_SCL_FILTER_EN</name>
       <description>I2C2 AF4 SCL Glitch Filter Enable</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Filter disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Filter enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTOCAL0</name>
     <description>Register 1.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SEL</name>
       <description>Auto-calibration Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EN</name>
       <description>Autocalibration Run.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Not Running.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>run</name>
         <description>Running.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOAD</name>
       <description>Load Trim.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INVERT</name>
       <description>Invert Gain.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Not Running.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>run</name>
         <description>Running.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ATOMIC</name>
       <description>Atomic mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Not Running.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>run</name>
         <description>Running.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GAIN</name>
       <description>MU value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>TRIM</name>
       <description>150MHz HFIO Auto Calibration Trim</description>
       <bitOffset>23</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTOCAL1</name>
     <description>Register 2.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>NFC_FWD_EN</name>
       <description>Enabled FWD mode for NFC block</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NFC_CLK_EN</name>
       <description>Enabled the NFC blocks clock divider in Analog</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NFC_FWD_TX_DATA_OVR</name>
       <description>FWD input for NFC block</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>XO_EN_DGL</name>
       <description>TBD</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_BIAS_PD</name>
       <description>Power down enable for NFC receiver analog block</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_BIAS_EN</name>
       <description>Enable the NFC receiver analog blocks</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_TM_VBG_VABUS</name>
       <description>TBD</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_TM_BIAS</name>
       <description>TBD</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NFC_FWD_DOUT</name>
       <description>FWD output from FNC block</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTOCAL2</name>
     <description>Register 3.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RUNTIME</name>
       <description>Automatic Calibration Run Time.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--FCR Function Control Register.-->
  <peripheral>
   <name>FLC</name>
   <description>Flash Memory Control.</description>
   <prependToName>FLSH_</prependToName>
   <baseAddress>0x40029000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Flash_Controller</name>
    <description>Flash Controller interrupt.</description>
    <value>23</value>
   </interrupt>
   <registers>
    <register>
     <name>ADDR</name>
     <description>Flash Write Address.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Address for next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKDIV</name>
     <description>Flash Clock Divide. The clock (PLL0) is divided by this value to generate a 1 MHz clock for Flash controller.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x00000064</resetValue>
     <fields>
      <field>
       <name>CLKDIV</name>
       <description>Flash Clock Divide. The clock is divided by this value to generate a 1MHz clock for flash controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CN</name>
     <description>Flash Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>WR</name>
       <description>Write.  This bit is automatically cleared after the operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="WR">
       <name>ME</name>
       <description>Mass Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="WR">
       <name>PGE</name>
       <description>Page Erase.  This bit is automatically cleared after the operation.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERASE_CODE</name>
       <description>Erase Code.  The ERASE_CODE must be set up property before erase operation can be initiated. These bits are automatically cleared after the operation is complete.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>erasePage</name>
         <description>Enable Page Erase.</description>
         <value>0x55</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>eraseAll</name>
         <description>Enable Mass Erase. The debug port must be enabled.</description>
         <value>0xAA</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PEND</name>
       <description>Flash Pending.  When Flash operation is in progress (busy), Flash reads and writes will fail. When PEND is set, write to all Flash registers, with exception of the Flash interrupt register, are ignored.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>UNLOCK</name>
       <description>Flash Unlock.  The correct unlock code must be written to these four bits before any Flash write or erase operation is allowed.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Flash Unlocked.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Flash Locked.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTR</name>
     <description>Flash Interrupt Register.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>Flash Done Interrupt.  This bit is set to 1 upon Flash write or erase completion.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AF</name>
       <description>Flash Access Fail.  This bit is set when an attempt is made to write the flash while the flash is busy or the flash is locked. This bit can only be set to 1 by hardware.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noError</name>
         <description>No Failure.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>Failure occurs.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DONEIE</name>
       <description>Flash Done Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="DONEIE">
       <name>AFIE</name>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECC_DATA</name>
     <description>ECC Data Register.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>ECC_EVEN</name>
       <description>Error Correction Code Odd Data.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
      <field>
       <name>ECC_ODD</name>
       <description>Error Correction Code Even Data.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>9</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>DATA[%s]</name>
     <description>Flash Write Data.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data next operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--FLC Flash Memory Control.-->
  <peripheral derivedFrom="FLC">
   <name>FLC1</name>
   <description>Flash Memory Control. 1</description>
   <baseAddress>0x40029400</baseAddress>
   <interrupt>
    <name>FLC1</name>
    <description>FLC1 IRQ</description>
    <value>87</value>
   </interrupt>
  </peripheral>
<!--FLC1 Flash Memory Control. 1-->
  <peripheral>
   <name>GCR</name>
   <description>Global Control Registers.</description>
   <baseAddress>0x40000000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SYSCTRL</name>
     <description>System Control.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0xFFFFFFFE</resetMask>
     <fields>
      <field>
       <name>BSTAPEN</name>
       <description>Boundary Scan TAP enable. When enabled, the JTAG port is connected to the Boundary Scan TAP. Otherwise, the port is connected to the ARM ICE function. This bit is reset by the POR. Reset value and access depend on the part number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Boundary Scan TAP port disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Boundary Scan TAP port enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SBUSARB</name>
       <description>System bus abritration scheme. These bits are used to select between Fixed-burst abritration and Round-Robin scheme. The Round-Robin scheme is selected by default. These bits are reset by the system reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>fix</name>
         <description>Fixed Burst abritration.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>round</name>
         <description>Round-robin scheme.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLASH0_PAGE_FLIP</name>
       <description>Flips the Flash bottom and top halves. (Depending on the total flash size, each half is either 256K or 512K). Initiating a flash page flip will cause a flush of both the data buffer on the DCODE bus and the internal instruction buffer.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Physical layout matches logical layout.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>swapped</name>
         <description>Bottom half mapped to logical top half and vice versa.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FPU_DIS</name>
       <description>Cortex M4 Floating Point Disable This bit is used to disable the floating-point unit of the Cortex-M4.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICC0_FLUSH</name>
       <description>Code Cache Flush. This bit is used to flush the code caches and the instruction buffer of the Cortex-M4. </description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Code Cache Operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Code Caches and CPU instruction buffer are flushed </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRCC_FLUSH</name>
       <description>Data Cache Flush. The system cache (s) will be flushed when this bit is set. </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal System Cache Operation</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>System Cache is flushed </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRCC_DIS</name>
       <description>Data Cache Disable. The system cache (s) will be completely disabled when this bit is set.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Is enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Is Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCHK</name>
       <description>Compute ROM Checksum. This bit is self-cleared when calculation is completed. Once set, software clearing this bit is ignored and the bit will remain set until the operation is completed.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CHKRES</name>
       <description>ROM Checksum Result. This bit is only valid when CHKRD=1.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>pass</name>
         <description>ROM Checksum Correct.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>fail</name>
         <description>ROM Checksum Fail.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST0</name>
     <description>Reset.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>DMA</name>
       <description>DMA Reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>WDT0</name>
       <description>Watchdog Timer Reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO0</name>
       <description>GPIO0 Reset. Setting this bit to 1 resets GPIO0 pins to their default states.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO1</name>
       <description>GPIO1 Reset. Setting this bit to 1 resets GPIO1 pins to their default states.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>GPIO2</name>
       <description>GPIO2 Reset. Setting this bit to 1 resets GPIO2 pins to their default states.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR0</name>
       <description>Timer0 Reset. Setting this bit to 1 resets Timer 0 blocks.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR1</name>
       <description>Timer1 Reset. Setting this bit to 1 resets Timer 1 blocks.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR2</name>
       <description>Timer2 Reset. Setting this bit to 1 resets Timer 2 blocks.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR3</name>
       <description>Timer3 Reset. Setting this bit to 1 resets Timer 3 blocks.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR4</name>
       <description>Timer4 Reset. Setting this bit to 1 resets Timer 4 blocks.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR5</name>
       <description>Timer5 Reset. Setting this bit to 1 resets Timer 5 blocks.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART0</name>
       <description>UART0 Reset. Setting this bit to 1 resets all UART 0 blocks.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART1</name>
       <description>UART1 Reset. Setting this bit to 1 resets all UART 1 blocks.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI0</name>
       <description>SPI0 Reset. Setting this bit to 1 resets all SPI 0 blocks.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI1</name>
       <description>SPI1 Reset. Setting this bit to 1 resets all SPI 1 blocks.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SPI2</name>
       <description>SPI2 Reset. Setting this bit to 1 resets all SPI 2 blocks.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>I2C0</name>
       <description>I2C0 Reset.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>RTC</name>
       <description>Real Time Clock Reset.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>CRYPTO</name>
       <description>Cryptographic Reset. Setting this bit to 1 resets the AES block, the SHA block and the DES block.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR6</name>
       <description>Timer6 Reset. Setting this bit to 1 resets Timer 6 blocks.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>TMR7</name>
       <description>Timer7 Reset. Setting this bit to 1 resets Timer 7 blocks.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>CLCD</name>
       <description>CLCD Reset. Setting this bit to 1 resets the CLCD block.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>USB</name>
       <description>USB Reset. Setting this bit resets both USB blocks.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>ADC</name>
       <description>Analog to Digital Reset.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>UART2</name>
       <description>UART2 Reset. Setting this bit to 1 resets all UART 2 blocks.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SOFT</name>
       <description>Soft Reset. Setting this bit to 1 resets everything except the CPU and the watchdog timer.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>PERIPH</name>
       <description>Peripheral Reset. Setting this bit to 1 resets all peripherals. The CPU core, the watchdog timer, and all GPIO pins are unaffected by this reset.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="DMA">
       <name>SYS</name>
       <description>System Reset. Setting this bit to 1 resets the CPU core and all peripherals, including the watchdog timer.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLKCTRL</name>
     <description>Clock Control.</description>
     <addressOffset>0x08</addressOffset>
     <resetValue>0x00000008</resetValue>
     <fields>
      <field>
       <name>SYSCLK_DIV</name>
       <description>Prescaler Select. This 3 bit field sets the system operating frequency by controlling the prescaler that divides the output of the PLL0.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSCLK_SEL</name>
       <description>Clock Source Select. This 3 bit field selects the source for the system clock.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ISO</name>
         <description>Internal Secondary Oscilatior Clock</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ERFO</name>
         <description>27MHz Crystal is used for the system clock.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INRO</name>
         <description>8kHz Internal Nano Ring Oscillator is used for the system clock.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IPO</name>
         <description>The internal Primary oscillator is used for the system clock.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>IBRO</name>
         <description>The internal Baud Rate oscillator is used for the system clock.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ERTCO</name>
         <description> 32kHz is used for the system clock.</description>
         <value>6</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSCLK_RDY</name>
       <description>Clock Ready. This read only bit reflects whether the currently selected system clock source is running.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Switchover to the new clock source (as selected by CLKSEL) has not yet occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>System clock running from CLKSEL clock source.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CCD</name>
       <description>Cryptographic clock divider</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>non_div</name>
         <description>The cryptographic accelerator clock is running in non-divided mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div</name>
         <description>The cryptographic accelerator clock is running in divided mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERFO_EN</name>
       <description>27MHz Crystal Oscillator Enable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Is Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Is Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERTCO_EN</name>
       <description>32kHz Crystal Oscillator Enable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_EN">
       <name>ISO_EN</name>
       <description>60MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_EN">
       <name>IPO_EN</name>
       <description>96MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_EN">
       <name>IBRO_EN</name>
       <description>8MHz High Frequency Internal Reference Clock Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IBRO_VS</name>
       <description>7.3728MHz Internal Oscillator Voltage Source Select</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERFO_RDY</name>
       <description>27MHz Crystal Oscillator Ready</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Is not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Is Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ERTCO_RDY</name>
       <description>32kHz Crystal Oscillator Ready</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>Is not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Is Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>ISO_RDY</name>
       <description>60MHz ISO Ready.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>IPO_RDY</name>
       <description>Internal Primary Oscillator Ready.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>IBRO_RDY</name>
       <description>Internal Baud Rate Oscillator Ready.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ERTCO_RDY">
       <name>INRO_RDY</name>
       <description>Internal Nano Ring Oscillator Low Frequency Reference Clock Ready.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PM</name>
     <description>Power Management.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>MODE</name>
       <description>Operating Mode. This two bit field selects the current operating mode for the device. Note that code execution only occurs during ACTIVE mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Active Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>DeepSleep Mode.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>backup</name>
         <description>Backup Mode.</description>
         <value>4</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GPIO_WE</name>
       <description>GPIO Wake Up Enable. This bit enables all GPIO pins as potential wakeup sources. Any GPIO configured for wakeup is capable of causing an exit from IDLE or STANDBY modes when this bit is set.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO_WE">
       <name>RTC_WE</name>
       <description>RTC Alarm Wake Up Enable. This bit enables RTC alarm as wakeup source. If enabled, the desired RTC alarm must be configured via the RTC control registers.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO_WE">
       <name>USB_WE</name>
       <description>USB Wake Up Enable. This bit enables USB activity as wakeup source.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO_WE">
       <name>HA0_WE</name>
       <description>Hardware Accelerator 0 Wake Up Enable. This bit enables USB activity as wakeup source.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO_WE">
       <name>HA1_WE</name>
       <description>Hardware Accelerator 1 Wake Up Enable. This bit enables USB activity as wakeup source.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERFO_PD</name>
       <description>Radio Frequency oscilator Crystal Power Down. This bit selects the power state in DEEPSLEEP mode. </description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ISO_PD</name>
       <description>Internal Secondary Oscilator Power Down. This bit selects the power state in DEEPSLEEP mode. </description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IPO_PD</name>
       <description>Internal Primary Oscilatory power down. This bit selects the power state in DEEPSLEEP mode. </description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IBRO_PD</name>
       <description>Internal Baud Rate Oscillator power down. This bit selects the power state in DEEPSLEEP mode. </description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NFC_PD</name>
       <description>When set, the NFC radio becomes inactive when the upon entering DEEPSLEEP mode</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>Mode is Active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>deepsleep</name>
         <description>Powered down in DEEPSLEEP.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>XTALBP</name>
       <description>XTAL Bypass </description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>bypass</name>
         <description>Bypass</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIV</name>
     <description>Peripheral Clock Divider.</description>
     <addressOffset>0x18</addressOffset>
     <resetValue>0x00000001</resetValue>
     <fields>
      <field>
       <name>PCF</name>
       <description>These bits determine the clock frequency for the UART, I2C and Key Pad peripherals. These peripherals have an adaptive clock generator that dynamically adjusts the peripheral frequency based on the main system bus frequency. These bits are dynamically updated when the PLL0 is selected as the system clock source and are set by hardware. These bits determine the clock frequency for the UART, I2C and Key Pad peripherals. These peripherals have an adaptive clock generator that dynamically adjusts the peripheral frequency based on the main system bus frequency. These bits are dynamically updated when the PLL0 is selected as the system clock source and are set by hardware.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>96MHz</name>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>48MHz</name>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>24MHz</name>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12MHz</name>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6MHz</name>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3MHz</name>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PCFWEN</name>
       <description>PCF Write Enable. This bit allows the PCF Register bits to be updated by Software.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>blocked</name>
         <description>Writes to PCF are blocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>allowed</name>
         <description>Writes to PCF are allowed</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDHCFRQ</name>
       <description>SDHC Clock Frequency. This bits defines the clock frequency of SDHC.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>48MHz</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>24MHz</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADCFRQ</name>
       <description>ADC clock Frequency. These bits define the ADC clock frequency. FADC = FPCLK/ (ADCFRQ).</description>
       <bitOffset>10</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>AON_CLKDIV</name>
       <description>Always-ON (AON) domain CLock Divider. These bits define the AON domain clock divider.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div_4</name>
         <description>PCLK divide by 4.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div_8</name>
         <description>PCLK divide by 8.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div_16</name>
         <description>PCLK divide by 16.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div_32</name>
         <description>PCLK divide by 32.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIS0</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>GPIO0</name>
       <description>GPIO0 Clock Disable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>enable it.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>disable it.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="GPIO0">
       <name>GPIO1</name>
       <description>GPIO1 Disable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>GPIO2</name>
       <description>GPIO2 Disable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>USB</name>
       <description>USB Disable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>CLCD</name>
       <description>CLCD Disable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>DMA</name>
       <description>DMA Disable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPI0</name>
       <description>SPI 0 Disable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPI1</name>
       <description>SPI 1 Disable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPI2</name>
       <description>SPI 2 Disable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>UART0</name>
       <description>UART 0 Disable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>UART1</name>
       <description>UART 1 Disable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>I2C0</name>
       <description>I2C 0 Disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>CRYPTO</name>
       <description>Crypto Disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR0</name>
       <description>Timer 0 Disable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR1</name>
       <description>Timer 1 Disable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR2</name>
       <description>Timer 2 Disable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR3</name>
       <description>Timer 3 Disable.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR4</name>
       <description>Timer 4 Disable.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR5</name>
       <description>Timer 5 Disable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>KBD</name>
       <description>Secure Keyboard Disable.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>ADC</name>
       <description>ADC Disable.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR6</name>
       <description>Timer 6 Disable.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>TMR7</name>
       <description>Timer 7 Disable.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>HTMR0</name>
       <description>HTimer 0 Disable.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>HTMR1</name>
       <description>HTimer 1 Disable.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>I2C1</name>
       <description>I2C 1 Disable.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>PT</name>
       <description>PT Clock Disable.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPIXIP</name>
       <description>SPI XiP Disable.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="GPIO0">
       <name>SPIM</name>
       <description>SPI XiP Master Controller Disable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCTRL</name>
     <description>Memory Clock Control Register.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>FWS</name>
       <description>Flash Wait State. These bits define the number of wait-state cycles per Flash data read access. Minimum wait state is 2.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>RAMWS_EN</name>
       <description>SRAM Wait State Enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM0LS_EN</name>
       <description>System RAM 0 Light Sleep Mode.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>active</name>
         <description>RAM is active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>light_sleep</name>
         <description>RAM is in Light Sleep mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM1LS_EN</name>
       <description>System RAM 1 Light Sleep Mode.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM2LS_EN</name>
       <description>System RAM 2 Light Sleep Mode.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM3LS_EN</name>
       <description>System RAM 3 Light Sleep Mode.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM4LS_EN</name>
       <description>System RAM 4 Light Sleep Mode.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>RAM5LS_EN</name>
       <description>System RAM 5 Light Sleep Mode.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>ICC0LS_EN</name>
       <description>ICache RAM Light Sleep Mode.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>ICCXIPLS_EN</name>
       <description>ICACHE-XIP RAM Light Sleep Mode.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>SRCCLS_EN</name>
       <description>SysCache RAM Light Sleep Mode.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>CRYPTOLS_EN</name>
       <description>CRYPTO RAM Light Sleep Mode.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>USBLS_EN</name>
       <description>USB FIFO Light Sleep Mode.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0LS_EN">
       <name>ROMLS_EN</name>
       <description>ROM Light Sleep Mode.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMZ</name>
     <description>Memory Zeroize Control.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>System RAM Block 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>nop</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM1</name>
       <description>System RAM Block 1.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM2</name>
       <description>System RAM Block 2.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM3</name>
       <description>System RAM Block 3.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM4</name>
       <description>System RAM Block 4.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM5</name>
       <description>System RAM Block 5.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>RAM6</name>
       <description>System RAM Block 6.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>ICC0</name>
       <description>Instruction Cache.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>ICCXIP</name>
       <description>Instruction Cache XIP Data and Tag Ram zeroizatoin.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>SCACHEDATA</name>
       <description>System Cache Data Ram Zeroization.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>SCACHETAG</name>
       <description>System Cache Tag Zeroization.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>CRYPTO</name>
       <description>Crypto (MAA) Memory.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="RAM0">
       <name>USBFIFO</name>
       <description>USB FIFO Zeroization.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SCCK</name>
     <description>Smart Card Clock Control.</description>
     <addressOffset>0x34</addressOffset>
     <resetValue>0x00000000</resetValue>
     <fields>
      <field>
       <name>SC0CD</name>
       <description>Smart Card0 Clock Divider</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>SC1CD</name>
       <description>Smart Card1 Clock Divider</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYSST</name>
     <description>System Status Register.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>ICELOCK</name>
       <description>ARM ICE Lock Status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>ICE is unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>ICE is locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CODEINTERR</name>
       <description>Code Integrity Error Flag. This bit indicates a code integrity error has occured in XiP interface. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>norm</name>
         <description>Normal Operating Condition.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>code</name>
         <description>Code Integrity Error.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCMEMF</name>
       <description>System Cache Memory Fault Flag. This bit indicates a memory fault has occured in the System Cache while receiving data from the Hyperbus Interface.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>norm</name>
         <description>Normal Operating Condition.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>memory</name>
         <description>Memory Fault.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST1</name>
     <description>Reset 1.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>I2C1</name>
       <description>I2C1 Reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>PT</name>
       <description>PT Reset.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SPIXIP</name>
       <description>SPI XiP Master Reset.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>XSPIM</name>
       <description>GSPI XiP Master Controller Reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>GPIO3</name>
       <description>GPIO3 Reset.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SDHC</name>
       <description>SDHC/SDIO Reset.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>OWIRE</name>
       <description>OWIRE Reset.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>WDT1</name>
       <description>WDT1 Reset.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SPI3</name>
       <description>SPI3 Reset.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>AC</name>
       <description>AC Reset.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SPIXMEM</name>
       <description>SPIXMEM Reset.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>I2C2</name>
       <description>I2C2 Reset.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>UART3</name>
       <description>UART3 Reset.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>UART4</name>
       <description>UART4 Reset.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>UART5</name>
       <description>UART5 Reset.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>KBD</name>
       <description>KBD Reset.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>ADC9</name>
       <description>ADC9 Reset.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SC0</name>
       <description>SC0 Reset.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>SC1</name>
       <description>SC1 Reset.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>NFC</name>
       <description>NFC Reset.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>EMAC</name>
       <description>EMAC Reset.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>PCIF</name>
       <description>PCIF Reset.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>HTMR0</name>
       <description>HTIMER0 Reset.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="I2C1">
       <name>HTMR1</name>
       <description>HTIMER1 Reset.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PCLKDIS1</name>
     <description>Peripheral Clock Disable.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>UART2</name>
       <description>UART2 Disable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="UART2">
       <name>TRNG</name>
       <description>TRNG Disable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>WDT0</name>
       <description>WDT0 Clock Disable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>WDT1</name>
       <description>WDT1 Clock Disable</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>GPIO3</name>
       <description>GPIO3 Disable</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>SCACHE</name>
       <description>System Cache Clock Disable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>HA0</name>
       <description>Hardware Accelerator 0 Clock Disable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>SDHC</name>
       <description>SDHC/SDIO Clock Disable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>ICC0</name>
       <description>ICache Clock Disable. </description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>ICCXIP</name>
       <description>ICache XIP Clock Disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>OWIRE</name>
       <description>One-Wire Clock Disable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>SPI3</name>
       <description>SPI3 Clock Disable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>SPIXIP</name>
       <description>SPI-XIP Data Clock Disable</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>I2C2</name>
       <description>I2C2 Clock Disable</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>UART3</name>
       <description>UART3 Clock Disable</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>UART4</name>
       <description>UART4 Clock Disable</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>UART5</name>
       <description>UART5 Clock Disable</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>ADC9</name>
       <description>ADC9 Clock Disable</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>SC0</name>
       <description>SC0 Clock Disable</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>SC1</name>
       <description>SC1 Clock Disable</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>NFC</name>
       <description>NFC Clock Disable</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>EMAC</name>
       <description>EMAC Clock Disable</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>HA1</name>
       <description>Hardware Accelerator 1 Clock Disable</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="UART2">
       <name>PCIF</name>
       <description>PCIF Clock Disable</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EVENTEN</name>
     <description>Event Enable Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>DMA</name>
       <description>Enable DMA event. When this bit is set, a DMA event will cause an RXEV event to wake the CPU from WFE sleep mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX</name>
       <description>Enable RXEV pin event. When this bit is set, a logic high of GPIO0[24] will cause an RXEV event to wake the CPU from WFE sleep mode. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX</name>
       <description>Enable TXEV pin event. When this bit is set, TXEV event from the CPU is output to GPIO[25].</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>REVISION</name>
     <description>Revision Register.</description>
     <addressOffset>0x50</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>REVISION</name>
       <description>Manufacturer Chip Revision. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SYSIE</name>
     <description>System Status Interrupt Enable Register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ICEUNLOCK</name>
       <description>ARM ICE Unlock Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="ICEUNLOCK">
       <name>CIE</name>
       <description>Code Integrity Error Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="ICEUNLOCK">
       <name>SCMF</name>
       <description>System Cache Memory Fault Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IPOCNT</name>
     <description>IPO Warmup Count Register.</description>
     <addressOffset>0x58</addressOffset>
     <fields>
      <field>
       <name>WMUPCNT</name>
       <description>TBD</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCERR</name>
     <description>ECC Error Register</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>ECC System RAM0 Error Flag. Write 1 to clear.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM1</name>
       <description>ECC System RAM1 Error Flag. Write 1 to clear.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM2</name>
       <description>ECC System RAM2 Error Flag. Write 1 to clear.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM3</name>
       <description>ECC System RAM3 Error Flag. Write 1 to clear.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM4</name>
       <description>ECC System RAM4 Error Flag. Write 1 to clear.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM5</name>
       <description>ECC System RAM5 Error Flag. Write 1 to clear.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICC0</name>
       <description>ECC Icache0 Error Flag. Write 1 to clear.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICSPIXF</name>
       <description>ECC SFCC Instruction Cache Error Flag. Write 1 to clear.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLASH0</name>
       <description>ECC Flash0 Error Flag. Write 1 to clear.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLASH1</name>
       <description>ECC Flash1 Error Flag. Write 1 to clear.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCCED</name>
     <description>ECC Not Double Error Detect Register</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>ECC System RAM0 Error Flag. Write 1 to clear.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM1</name>
       <description>ECC System RAM1 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM2</name>
       <description>ECC System RAM2 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM3</name>
       <description>ECC System RAM3 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM4</name>
       <description>ECC System RAM4 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM5</name>
       <description>ECC System RAM5 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICC0</name>
       <description>ECC Icache0 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICSPIXF</name>
       <description>ECC IcacheXIP Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLASH0</name>
       <description>ECC Flash0 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLASH1</name>
       <description>ECC Flash1 Not Double Error Detect. Write 1 to clear.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCIE</name>
     <description>ECC IRQ Enable Register</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>ECC System RAM0 Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM1</name>
       <description>ECC System RAM1 Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM2</name>
       <description>ECC System RAM2 Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM3</name>
       <description>ECC System RAM3 Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM4</name>
       <description>ECC System RAM4 Interrupt Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RAM5</name>
       <description>ECC System RAM5 Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICC0</name>
       <description>ECC Icache0 Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ICSPIXF</name>
       <description>ECC IcacheXIP Interrupt Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLASH0</name>
       <description>ECC Flash0 Interrupt Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>FLASH1</name>
       <description>ECC Flash1 Interrupt Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ECCADDR</name>
     <description>ECC Error Address Register</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>DATARAMADDR</name>
       <description>ECC Error Address/DATA RAM Error Address</description>
       <bitOffset>0</bitOffset>
       <bitWidth>14</bitWidth>
      </field>
      <field>
       <name>DATARAMBANK</name>
       <description>ECC Error Address/DATA RAM Error Bank</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATARAMERR</name>
       <description>DATA RAM ERROR</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TAGRAMADDR</name>
       <description>ECC Error Address/TAG RAM Error Address</description>
       <bitOffset>16</bitOffset>
       <bitWidth>14</bitWidth>
      </field>
      <field>
       <name>TAGRAMBANK</name>
       <description>ECC Error Address/TAG RAM Error Bank</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TAGRAMERR</name>
       <description>TAG RAM ERROR</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>NFC_LDOCR</name>
     <description>NFC LDO Control Register</description>
     <addressOffset>0x74</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Enabled the dedicated NFC LDO</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PULLD</name>
       <description>Enabled the dedicated NFC LDO pin pulldown</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>VSEL</name>
       <description>Voltage Selection for NFC LDO</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>BYPEN</name>
       <description>Bypass enable</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DISCH</name>
       <description>TBD</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>EN_DLY</name>
       <description>TBD</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BYP_EN_DLY</name>
       <description>TBD</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>NFCLDO_DLY</name>
     <description>NFC LDO Delay Register</description>
     <addressOffset>0x78</addressOffset>
     <fields>
      <field>
       <name>BYPCNT</name>
       <description>TBD</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>ENCNT</name>
       <description>TBD</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--GCR Global Control Registers.-->
  <peripheral>
   <name>GPIO0</name>
   <description>Individual I/O for each GPIO</description>
   <groupName>GPIO</groupName>
   <baseAddress>0x40008000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>GPIO0</name>
    <description>GPIO0 interrupt.</description>
    <value>24</value>
   </interrupt>
   <registers>
    <register>
     <name>EN0</name>
     <description>GPIO Function Enable Register. Each bit controls the GPIO_EN setting for one GPIO pin on the associated port.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ALTERNATE</name>
         <description>Alternate function enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>GPIO</name>
         <description>GPIO function is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN0_SET</name>
     <description>GPIO Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN0_CLR</name>
     <description>GPIO Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN</name>
     <description>GPIO Output Enable Register. Each bit controls the GPIO_OUT_EN setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>GPIO Output Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>GPIO Output Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN_SET</name>
     <description>GPIO Output Enable Set Function Enable Register. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_EN_CLR</name>
     <description>GPIO Output Enable Clear Function Enable Register. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT</name>
     <description>GPIO Output Register. Each bit controls the GPIO_OUT setting for one pin in the associated port.  This register can be written either directly, or by using the GPIO_OUT_SET and GPIO_OUT_CLR registers.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>GPIO_OUT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>low</name>
         <description>Drive Logic 0 (low) on GPIO output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>high</name>
         <description>Drive logic 1 (high) on GPIO output.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_SET</name>
     <description>GPIO Output Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_OUT to 1, without affecting other bits in that register.</description>
     <addressOffset>0x1C</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_OUT bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUT_CLR</name>
     <description>GPIO Output Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_OUT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x20</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>GPIO_OUT_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IN</name>
     <description>GPIO Input Register. Read-only register to read from the logic states of the GPIO pins on this port.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_IN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MODE</name>
     <description>GPIO Interrupt Mode Register. Each bit in this register controls the interrupt mode setting for the associated GPIO pin on this port.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_MODE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>level</name>
         <description>Interrupts for this pin are level triggered.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>edge</name>
         <description>Interrupts for this pin are edge triggered.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_POL</name>
     <description>GPIO Interrupt Polarity Register. Each bit in this register controls the interrupt polarity setting for one GPIO pin in the associated port.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_POL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>falling</name>
         <description>Interrupts are latched on a falling edge or low level condition for this pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>rising</name>
         <description>Interrupts are latched on a rising edge or high condition for this pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>IN_EN</name>
     <description>GPIO Input Enable</description>
     <addressOffset>0x30</addressOffset>
    </register>
    <register>
     <name>INT_EN</name>
     <description>GPIO Interrupt Enable Register. Each bit in this register controls the GPIO interrupt enable for the associated pin on the GPIO port.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupts are disabled for this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupts are enabled for this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN_SET</name>
     <description>GPIO Interrupt Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_INT_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN_SET</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set GPIO_INT_EN bit in this position to '1'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN_CLR</name>
     <description>GPIO Interrupt Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x3C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_EN_CLR</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>Clear GPIO_INT_EN bit in this position to '0'</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_STAT</name>
     <description>GPIO Interrupt Status Register. Each bit in this register contains the pending interrupt status for the associated GPIO pin in this port.</description>
     <addressOffset>0x40</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>GPIO_INT_STAT</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Interrupt is pending on this GPIO pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An Interrupt is pending on this GPIO pin.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_CLR</name>
     <description>GPIO Status Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_INT_STAT to 0, without affecting other bits in that register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>GPIO Wake Enable Register. Each bit in this register controls the PMU wakeup enable for the associated GPIO pin in this port.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>GPIO_WAKE_EN</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>PMU wakeup for this GPIO is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>PMU wakeup for this GPIO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN_SET</name>
     <description>GPIO Wake Enable Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_WAKE_EN to 1, without affecting other bits in that register.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN_CLR</name>
     <description>GPIO Wake Enable Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_WAKE_EN to 0, without affecting other bits in that register.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_DUAL_EDGE</name>
     <description>GPIO Interrupt Dual Edge Mode Register. Each bit in this register selects dual edge mode for the associated GPIO pin in this port.</description>
     <addressOffset>0x5C</addressOffset>
     <fields>
      <field>
       <name>GPIO_INT_DUAL_EDGE</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Dual Edge mode is enabled. If edge-triggered interrupts are enabled on this GPIO pin, then both rising and falling edges will trigger interrupts regardless of the GPIO_INT_POL setting.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PAD_CFG1</name>
     <description>GPIO Input Mode Config 1. Each bit in this register enables the weak pull-up for the associated GPIO pin in this port.</description>
     <addressOffset>0x60</addressOffset>
     <fields>
      <field>
       <name>GPIO_PAD_CFG1</name>
       <description>The two bits in GPIO_PAD_CFG1 and GPIO_PAD_CFG2 for each GPIO pin work together to determine the pad mode when the GPIO is set to input mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>impedance</name>
         <description>High Impedance.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pu</name>
         <description>Weak pull-up mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pd</name>
         <description>weak pull-down mode.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PAD_CFG2</name>
     <description>GPIO Input Mode Config 2. Each bit in this register enables the weak pull-up for the associated GPIO pin in this port.</description>
     <addressOffset>0x64</addressOffset>
     <fields>
      <field>
       <name>GPIO_PAD_CFG2</name>
       <description>The two bits in GPIO_PAD_CFG1 and GPIO_PAD_CFG2 for each GPIO pin work together to determine the pad mode when the GPIO is set to input mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>impedance</name>
         <description>High Impedance.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pu</name>
         <description>Weak pull-up mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pd</name>
         <description>weak pull-down mode.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1</name>
     <description>GPIO Alternate Function Enable Register. Each bit in this register selects between primary/secondary functions for the associated GPIO pin in this port.</description>
     <addressOffset>0x68</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN1</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>primary</name>
         <description>Primary function selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>secondary</name>
         <description>Secondary function selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1_SET</name>
     <description>GPIO Alternate Function Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN1 to 1, without affecting other bits in that register.</description>
     <addressOffset>0x6C</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN1_CLR</name>
     <description>GPIO Alternate Function Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN1 to 0, without affecting other bits in that register.</description>
     <addressOffset>0x70</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN2</name>
     <description>GPIO Alternate Function Enable Register. Each bit in this register selects between primary/secondary functions for the associated GPIO pin in this port.</description>
     <addressOffset>0x74</addressOffset>
     <fields>
      <field>
       <name>GPIO_EN2</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>primary</name>
         <description>Primary function selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>secondary</name>
         <description>Secondary function selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>EN2_SET</name>
     <description>GPIO Alternate Function 2 Set. Writing a 1 to one or more bits in this register sets the bits in the same positions in GPIO_EN2 to 1, without affecting other bits in that register.</description>
     <addressOffset>0x78</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EN2_CLR</name>
     <description>GPIO Wake Alternate Function Clear. Writing a 1 to one or more bits in this register clears the bits in the same positions in GPIO_EN2 to 0, without affecting other bits in that register.</description>
     <addressOffset>0x7C</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DS</name>
     <description>GPIO Drive Strength  Register. Each bit in this register selects the drive strength for the associated GPIO pin in this port. Refer to the Datasheet for sink/source current of GPIO pins in each mode.</description>
     <addressOffset>0xB0</addressOffset>
     <fields>
      <field>
       <name>GPIO_DS</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ld</name>
         <description>GPIO port pin is in low-drive mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>hd</name>
         <description>GPIO port pin is in high-drive mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DS1</name>
     <description>GPIO Drive Strength 1 Register. Each bit in this register selects the drive strength for the associated GPIO pin in this port. Refer to the Datasheet for sink/source current of GPIO pins in each mode.</description>
     <addressOffset>0xB4</addressOffset>
     <fields>
      <field>
       <name>GPIO_DS1</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PS</name>
     <description>GPIO Pull Select Mode.</description>
     <addressOffset>0xB8</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>VSSEL</name>
     <description>GPIO Voltage Select.</description>
     <addressOffset>0xC0</addressOffset>
     <fields>
      <field>
       <name>ALL</name>
       <description>Mask of all of the pins on the port.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--GPIO0 Individual I/O for each GPIO-->
  <peripheral derivedFrom="GPIO0">
   <name>GPIO1</name>
   <description>Individual I/O for each GPIO 1</description>
   <baseAddress>0x40009000</baseAddress>
   <interrupt>
    <name>GPIO1</name>
    <description>GPIO1 IRQ</description>
    <value>25</value>
   </interrupt>
  </peripheral>
<!--GPIO1 Individual I/O for each GPIO 1-->
  <peripheral derivedFrom="GPIO0">
   <name>GPIO2</name>
   <description>Individual I/O for each GPIO 2</description>
   <baseAddress>0x4000A000</baseAddress>
   <interrupt>
    <name>GPIO2</name>
    <description>GPIO2 IRQ</description>
    <value>26</value>
   </interrupt>
  </peripheral>
<!--GPIO2 Individual I/O for each GPIO 2-->
  <peripheral derivedFrom="GPIO0">
   <name>GPIO3</name>
   <description>Individual I/O for each GPIO 3</description>
   <baseAddress>0x4000B000</baseAddress>
   <interrupt>
    <name>GPIO3</name>
    <description>GPIO3 IRQ</description>
    <value>58</value>
   </interrupt>
  </peripheral>
<!--GPIO3 Individual I/O for each GPIO 3-->
  <peripheral>
   <name>HA</name>
   <description>Hardware Accelerator</description>
   <baseAddress>0x40036000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>HA</name>
    <description>Smart DMA interrupt.</description>
    <value>60</value>
   </interrupt>
   <registers>
    <register>
     <name>IP</name>
     <description>Q30E Instruction Pointer.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>SP</name>
     <description>Q30E Stack Pointer.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>DP0</name>
     <description>Q30E Data Pointer 0.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>DP1</name>
     <description>Q30E Data Pointer 1.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>BP</name>
     <description>Q30E Frame Pointer Base.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>OFFS</name>
     <description>Q30E Frame Pointer Offset.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>LC0</name>
     <description>Q30E Loop Counter 0.</description>
     <addressOffset>0x18</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>LC1</name>
     <description>Q30E Loop Counter 1.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>A0</name>
     <description>Q30E Accumulator 0.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>A1</name>
     <description>Q30E Accumulator 1.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>A2</name>
     <description>Q30E Accumulator 2.</description>
     <addressOffset>0x28</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>A3</name>
     <description>Q30E Accumulator 3.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>WDCN</name>
     <description>Q30E Watchdog Control.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>INT_MUX_CTRL0</name>
     <description>Interrupt Mux Control 0.</description>
     <addressOffset>0x80</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INTSEL16</name>
       <description>Interrupt Selection For 16th Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL17</name>
       <description>Interrupt Selection For 17th Interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL18</name>
       <description>Interrupt Selection For 18th Interrupt.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL19</name>
       <description>Interrupt Selection For 19th Interrupt.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MUX_CTRL1</name>
     <description>Interrupt Mux Control 1.</description>
     <addressOffset>0x84</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INTSEL20</name>
       <description>Interrupt Selection For 20th Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL21</name>
       <description>Interrupt Selection For 21st Interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL22</name>
       <description>Interrupt Selection For 22nd Interrupt.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL23</name>
       <description>Interrupt Selection For 23rd Interrupt.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MUX_CTRL2</name>
     <description>Interrupt Mux Control 2.</description>
     <addressOffset>0x88</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INTSEL24</name>
       <description>Interrupt Selection For 24th Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL25</name>
       <description>Interrupt Selection For 25th Interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL26</name>
       <description>Interrupt Selection For 26th Interrupt.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL27</name>
       <description>Interrupt Selection For 27th Interrupt.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_MUX_CTRL3</name>
     <description>Interrupt Mux Control 3.</description>
     <addressOffset>0x8C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INTSEL28</name>
       <description>Interrupt Selection For 28th Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL29</name>
       <description>Interrupt Selection For 29th Interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL30</name>
       <description>Interrupt Selection For 30th Interrupt.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>INTSEL31</name>
       <description>Interrupt Selection For 31st Interrupt.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IP_ADDR</name>
     <description>Configurable starting IP address for Q30E.</description>
     <addressOffset>0x90</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>START_IP_ADDR</name>
       <description>Starting IP address for Q30E</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Control Register.</description>
     <addressOffset>0x94</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>EN</name>
       <description>Enable SDMA.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable SDMA.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable SDMA.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_IN_CTRL</name>
     <description>Interrupt Input From CPU Control Register.</description>
     <addressOffset>0xA0</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INTSET</name>
       <description>Set Interrupt Flag.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Set interrupt Flag to 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>set</name>
         <description>Set Interrupt Flag to 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_IN_FLAG</name>
     <description>Interrupt Input From CPU Flag.</description>
     <addressOffset>0xA4</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INTFLAG</name>
       <description>Interrupt Flag.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no_eff</name>
         <description>No Effect.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>clear</name>
         <description>INT_IN_FLAG =0</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_IN_IE</name>
     <description>Interrupt Input From CPU Enable.</description>
     <addressOffset>0xA8</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INT_IN_EN</name>
       <description>Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IRQ_FLAG</name>
     <description>Interrupt Output To CPU Flag.</description>
     <addressOffset>0xB0</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IRQ_FLAG</name>
       <description>Interrupt Flag.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IRQ_IE</name>
     <description>Interrupt Output To CPU Control Register.</description>
     <addressOffset>0xB4</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>IRQ_EN</name>
       <description>Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--HA Hardware Accelerator-->
  <peripheral>
   <name>HTMR</name>
   <description>High Speed Timer Module.</description>
   <baseAddress>0x4001B000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0xFFF</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>HTimer</name>
    <description>HTimer interrupt.</description>
    <value>93</value>
   </interrupt>
   <registers>
    <register>
     <name>SEC</name>
     <description>HTimer Long-Interval Counter. This register contains the 32 most significant bits of the counter.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>RTS</name>
       <description>HTimer Long Interval Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSEC</name>
     <description>HTimer Short Interval Counter. This counter ticks every t_htclk (16.48uS). HTIMER_SEC is incremented when this register rolls over from 0xFF to 0x00.</description>
     <addressOffset>0x04</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>RTSS</name>
       <description>HTimer Short Interval Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RAS</name>
     <description>Long Interval Alarm.</description>
     <addressOffset>0x08</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>RAS</name>
       <description>HTimer Long Interval Alarm. An Alarm is triggered when this value matches HTIMER_SEC[19:0]</description>
       <bitOffset>0</bitOffset>
       <bitWidth>20</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RSSA</name>
     <description>HTimer Short Interval Alarm. This register contains the reload value for the short interval alarm, HTIMER_CTRL.alarm_ss_fl is raised on rollover.</description>
     <addressOffset>0x0C</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>RSSA</name>
       <description>This register contains the reload value for the short interval alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>HTimer Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <resetValue>0x00000008</resetValue>
     <resetMask>0xFFFFFF38</resetMask>
     <fields>
      <field>
       <name>HTEN</name>
       <description>HTimer Enable. This bit enables the Real Time Clock. This bit can only be written when WE=1 and BUSY =0. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADE</name>
       <description>Long Interval Alarm Interrupt Enable. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ASE</name>
       <description>Short Interval Alarm Interrupt Enable.  Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>HTimer Busy. This bit is set to 1 by hardware when changes to HTimer registers required a synchronized version of the register to be in place.  This bit is automatically cleared by hardware.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY</name>
       <description>HTimer Ready. This bit is set to 1 by hardware when the HTimer count registers update.  It can be cleared to 0 by software at any time. It will also be cleared to 0 by hardware just prior to an update of the HTimer count register.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Register has not updated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDYE</name>
       <description>HTimer Ready Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ALDF</name>
       <description>Long Interval Alarm Interrupt Flag.  This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ALSF</name>
       <description>Short Interval Alarm Interrupt Flag. This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pending</name>
         <description>Active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WE</name>
       <description>Write Enable. This register bit serves as a protection mechanism against unintentional writes to critical HTimer bits.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--HTMR High Speed Timer Module.-->
  <peripheral derivedFrom="HTMR">
   <name>HTMR1</name>
   <description>High Speed Timer Module. 1</description>
   <baseAddress>0x4001C000</baseAddress>
   <interrupt>
    <name>HTMR1</name>
    <description>HTMR1 IRQ</description>
    <value>94</value>
   </interrupt>
  </peripheral>
<!--HTMR1 High Speed Timer Module. 1-->
  <peripheral>
   <name>I2C0</name>
   <description>Inter-Integrated Circuit.</description>
   <groupName>I2C</groupName>
   <baseAddress>0x4001D000</baseAddress>
   <size>32</size>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>I2C0</name>
    <description>I2C0 IRQ</description>
    <value>13</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Control Register0.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>I2C_EN</name>
       <description>I2C Enable.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable I2C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable I2C.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MST</name>
       <description>Master Mode Enable.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>slave_mode</name>
         <description>Slave Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>master_mode</name>
         <description>Master Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GEN_CALL_ADDR</name>
       <description>General Call Address Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Ignore Gneral Call Address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Acknowledge general call address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_MODE</name>
       <description>Interactive Receive Mode.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Interactive Receive Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Interactive Receive Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_MODE_ACK</name>
       <description>Data Acknowledge. This bit defines the acknowledge bit returned by the I2C receiver while IRXM = 1 HW forces ACK to 0 when IRXM = 0.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>ack</name>
         <description>return ACK (pulling SDA LOW).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>nack</name>
         <description>return NACK (leaving SDA HIGH).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL_OUT</name>
       <description>SCL Output. This bits control SCL output when SWOE =1.</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>drive_scl_low</name>
         <description>Drive SCL low. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>release_scl</name>
         <description>Release SCL.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDA_OUT</name>
       <description>SDA Output. This bits control SDA output when SWOE = 1. </description>
       <bitRange>[7:7]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>drive_sda_low</name>
         <description>Drive SDA low. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>release_sda</name>
         <description>Release SDA.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL</name>
       <description>SCL status. This bit reflects the logic gate of SCL signal. </description>
       <bitRange>[8:8]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>SDA</name>
       <description>SDA status. THis bit reflects the logic gate of SDA signal.</description>
       <bitRange>[9:9]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>SW_OUT_EN</name>
       <description>Software Output Enable.</description>
       <bitRange>[10:10]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>outputs_disable</name>
         <description>I2C Outputs SCLO and SDAO disabled. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>outputs_enable</name>
         <description>I2C Outputs SCLO and SDAO enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READ</name>
       <description>Read. This bit reflects the R/W bit of an address match (AMI = 1) or general call match (GCI = 1). This bit is valid 3 cycles after the relevant interrupt bit is set.</description>
       <bitRange>[11:11]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>write</name>
         <description>Write.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>read</name>
         <description>Read.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL_CLK_STRETCH_DIS</name>
       <description>This bit will disable slave clock stretching when set.</description>
       <bitRange>[12:12]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Slave clock stretching enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Slave clock stretching disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCL_PP_MODE</name>
       <description>SCL Push-Pull Mode. This bit controls whether SCL is operated in a the I2C standard open-drain mode, or in a non-standard push-pull mode where the Hi-Z output isreplaced with Drive-1. The non-standard mode should only be used when operating as a master and communicating with slaves that are guaranteed to never drive SCL low. </description>
       <bitRange>[13:13]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Standard open-drain operation:
					drive low for 0, Hi-Z for 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Non-standard push-pull operation:
					drive low for 0, drive high for 1</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>Status Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>BUS</name>
       <description>Bus Status.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>I2C Bus Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>I2C Bus Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_EMPTY</name>
       <description>RX empty.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX Full.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_full</name>
         <description>Not Full.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>full</name>
         <description>Full.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX Empty.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FULL</name>
       <description>TX Full.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_empty</name>
         <description>Not Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>empty</name>
         <description>Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLK_MODE</name>
       <description>Clock Mode.</description>
       <bitRange>[5:5]</bitRange>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_actively_driving_scl_clock</name>
         <description>Device not actively driving SCL clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>actively_driving_scl_clock</name>
         <description>Device operating as master and actively driving SCL clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL0</name>
     <description>Interrupt Status Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>DONE</name>
       <description>Transfer Done Interrupt.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_MODE</name>
       <description>Interactive Receive Interrupt.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GEN_CALL_ADDR</name>
       <description>Slave General Call Address Match Interrupt.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_MATCH</name>
       <description>Slave Address Match Interrupt.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>Receive Threshold Interrupt. This bit is automaticcaly cleared when RX_FIFO is below the threshold level.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. RX_FIFO equal or more bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_THRESH</name>
       <description>Transmit Threshold Interrupt. This bit is automaticcaly cleared when TX_FIFO is above the threshold level.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. TX_FIFO has equal or less bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP</name>
       <description>STOP Interrupt.</description>
       <bitRange>[6:6]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending. TX_FIFO has equal or less bytes than the threshold.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_ACK</name>
       <description>Address Acknowledge Interrupt.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ARB_ER</name>
       <description>Arbritation error Interrupt.</description>
       <bitRange>[8:8]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TO_ER</name>
       <description>timeout Error Interrupt.</description>
       <bitRange>[9:9]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_NACK_ER</name>
       <description>Address NACK Error Interrupt.</description>
       <bitRange>[10:10]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_ER</name>
       <description>Data NACK Error Interrupt.</description>
       <bitRange>[11:11]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DO_NOT_RESP_ER</name>
       <description>Do Not Respond Error Interrupt.</description>
       <bitRange>[12:12]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START_ER</name>
       <description>Start Error Interrupt.</description>
       <bitRange>[13:13]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP_ER</name>
       <description>Stop Error Interrupt.</description>
       <bitRange>[14:14]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_LOCK_OUT</name>
       <description>Transmit Lock Out Interrupt.</description>
       <bitRange>[15:15]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>TX FIFO not locked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>TX FIFO locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RD_ADDR_MATCH</name>
       <description>Slave Read Address Match Interrupt</description>
       <bitRange>[22:22]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>no_match</name>
         <description>No address match.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>match</name>
         <description>Address match.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WR_ADDR_MATCH</name>
       <description>Slave Write Address Match Interrupt</description>
       <bitRange>[23:23]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>no_match</name>
         <description>No address match.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>match</name>
         <description>Address match.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN0</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>DONE</name>
       <description>Transfer Done Interrupt Enable.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when DONE = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_MODE</name>
       <description>Description not available.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when RX_MODE = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>GEN_CALL_ADDR</name>
       <description>Slave mode general call address match received input enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when GEN_CTRL_ADDR = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_MATCH</name>
       <description>Slave mode incoming address match interrupt.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when ADDR_MATCH = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>RX FIFO Above Treshold Level Interrupt Enable.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_THRESH</name>
       <description>TX FIFO Below Treshold Level Interrupt Enable.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP</name>
       <description>Stop Interrupt Enable</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled when STOP = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_ACK</name>
       <description>Received Address ACK from Slave Interrupt.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ARB_ER</name>
       <description>Master Mode Arbitration Lost Interrupt.</description>
       <bitRange>[8:8]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TO_ER</name>
       <description>Timeout Error Interrupt Enable.</description>
       <bitRange>[9:9]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_NACK_ERR</name>
       <description>Master Mode Address NACK Received Interrupt.</description>
       <bitRange>[10:10]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_ER</name>
       <description>Master Mode Data NACK Received Interrupt.</description>
       <bitRange>[11:11]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DO_NOT_RESP_ER</name>
       <description>Slave Mode Do Not Respond Interrupt.</description>
       <bitRange>[12:12]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START_ER</name>
       <description>Out of Sequence START condition detected interrupt.</description>
       <bitRange>[13:13]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOP_ER</name>
       <description>Out of Sequence STOP condition detected interrupt.</description>
       <bitRange>[14:14]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_LOCK_OUT</name>
       <description>TX FIFO Locked Out Interrupt.</description>
       <bitRange>[15:15]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RD_ADDR_MATCH</name>
       <description>Slave Read Address Match Interrupt</description>
       <bitRange>[22:22]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WR_ADDR_MATCH</name>
       <description>Slave Write Address Match Interrupt</description>
       <bitRange>[23:23]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL1</name>
     <description>Interrupt Status Register 1.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>RX_OVERFLOW</name>
       <description>Receiver Overflow Interrupt. When operating as a slave receiver, this bit is set when you reach the first data bit and the RX FIFO and shift register are both full.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UNDERFLOW</name>
       <description>Transmit Underflow Interrupt. When operating as a slave transmitter, this bit is set when you reach the first data bit and the TX FIFO is empty and the master is still asking for more data (i.e the master hasn't sent a NACK yet).</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>START Condition Status Flag.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_detected</name>
         <description>START condition not detected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>detected</name>
         <description>START condition detected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN1</name>
     <description>Interrupt Staus Register 1.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RX_OVERFLOW</name>
       <description>Receiver Overflow Interrupt Enable.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UNDERFLOW</name>
       <description>Transmit Underflow Interrupt Enable.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Interrupt is Pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>START Condition Interrupt Enable.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable START condition interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable START condition interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO_LEN</name>
     <description>FIFO Configuration Register.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>RX_LEN</name>
       <description>Receive FIFO Length.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_LEN</name>
       <description>Transmit FIFO Length.</description>
       <bitRange>[15:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RX_CTRL0</name>
     <description>Receive Control Register 0.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>DNR</name>
       <description>Do Not Respond.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>respond</name>
         <description>Always respond to address match.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>not_respond_rx_fifo_empty</name>
         <description>Do not respond to address match when RX_FIFO is not empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FLUSH</name>
       <description>Receive FIFO Flush. This bit is automatically cleared to 0 after the operation. Setting this bit to 1 will affect RX_FIFO status.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_flushed</name>
         <description>FIFO not flushed.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush RX_FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>Receive FIFO Threshold. These bits define the RX_FIFO interrupt threshold.</description>
       <bitRange>[11:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>RX_CTRL1</name>
     <description>Receive Control Register 1.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>RX_CNT</name>
       <description>Receive Count Bits. These bits define the number of bytes to be received in a transaction, except for the case RXCNT = 0. RXCNT = 0 means 256 bytes to be received in a transaction.</description>
       <bitRange>[7:0]</bitRange>
      </field>
      <field>
       <name>RX_FIFO</name>
       <description>Receive FIFO Count. These bits reflect the number of byte in the RX_FIFO. These bits are flushed when I2CEN = 0.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TX_CTRL0</name>
     <description>Transmit Control Register 0.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>TX_PRELOAD</name>
       <description>Transmit FIFO Preaload Mode. Setting this bit will allow for high speed application to preload the transmit FIFO prior to Slave Address Match.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>TX_READY_MODE</name>
       <description>Transmit FIFO Ready Manual Mode.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>HW control of I2CTXRDY enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>HW control of I2CTXRDY disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_AMGC_AFD</name>
       <description>TX FIFO General Call Address Match Auto Flush Disable.</description>
       <bitRange>[2:2]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_AMW_AFD</name>
       <description>TX FIFO Slave Address Match Write Auto Flush Disable.</description>
       <bitRange>[3:3]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_AMR_AFD</name>
       <description>TX FIFO Slave Address Match Read Auto Flush Disable.</description>
       <bitRange>[4:4]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_NACK_AFD</name>
       <description>TX FIFO received NACK Auto Flush Disable.</description>
       <bitRange>[5:5]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FLUSH</name>
       <description>Transmit FIFO Flush. This bit is automatically cleared to 0 after the operation.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>not_flushed</name>
         <description>FIFO not flushed.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>flush</name>
         <description>Flush TX_FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_THRESH</name>
       <description>Transmit FIFO Threshold. These bits define the TX_FIFO interrupt threshold.</description>
       <bitRange>[11:8]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>TX_CTRL1</name>
     <description>Transmit Control Register 1.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>TX_READY</name>
       <description>Transmit FIFO Preload Ready.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>TX_FIFO</name>
       <description>Transmit FIFO Count. These bits reflect the number of bytes in the TX_FIFO.</description>
       <bitRange>[11:8]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>Data Register.</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data is read from or written to this location. Transmit and receive FIFO are separate but both are addressed at this location.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MASTER_CTRL</name>
     <description>Master Control Register.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>START</name>
       <description>Setting this bit to 1 will start a master transfer.</description>
       <bitRange>[0:0]</bitRange>
      </field>
      <field>
       <name>RESTART</name>
       <description>Setting this bit to 1 will generate a repeated START.</description>
       <bitRange>[1:1]</bitRange>
      </field>
      <field>
       <name>STOP</name>
       <description>Setting this bit to 1 will generate a STOP condition.</description>
       <bitRange>[2:2]</bitRange>
      </field>
      <field>
       <name>SL_EX_ADDR</name>
       <description>Slave Extend Address Select.</description>
       <bitRange>[7:7]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>7_bits_address</name>
         <description>7-bit address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_bits_address</name>
         <description>10-bit address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_LO</name>
     <description>Clock Low Register.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>SCL_LO</name>
       <description>Clock low. In master mode, these bits define the SCL low period. In slave mode, these bits define the time SCL will be held low after data is outputted.</description>
       <bitRange>[8:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_HI</name>
     <description>Clock high Register.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>SCL_HI</name>
       <description>Clock High. In master mode, these bits define the SCL high period.</description>
       <bitRange>[8:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>TIMEOUT</name>
     <description>Timeout Register</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>TO</name>
       <description>Timeout</description>
       <bitRange>[15:0]</bitRange>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Register.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>TX_EN</name>
       <description>TX channel enable.</description>
       <bitRange>[0:0]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_EN</name>
       <description>RX channel enable.</description>
       <bitRange>[1:1]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SLAVE_ADDR</name>
     <description>Slave Address Register.</description>
     <addressOffset>0x4C</addressOffset>
     <fields>
      <field>
       <name>SLAVE_ADDR</name>
       <description>Slave Address.</description>
       <bitRange>[9:0]</bitRange>
      </field>
      <field>
       <name>EX_ADDR</name>
       <description>Extended Address Select.</description>
       <bitRange>[15:15]</bitRange>
       <enumeratedValues>
        <enumeratedValue>
         <name>7_bits_address</name>
         <description>7-bit address.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_bits_address</name>
         <description>10-bit address.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--I2C0 Inter-Integrated Circuit.-->
  <peripheral derivedFrom="I2C0">
   <name>I2C1</name>
   <description>Inter-Integrated Circuit. 1</description>
   <baseAddress>0x4001E000</baseAddress>
   <interrupt>
    <name>I2C1</name>
    <description>I2C1 IRQ</description>
    <value>36</value>
   </interrupt>
  </peripheral>
<!--I2C1 Inter-Integrated Circuit. 1-->
  <peripheral derivedFrom="I2C0">
   <name>I2C2</name>
   <description>Inter-Integrated Circuit. 2</description>
   <baseAddress>0x4001F000</baseAddress>
   <interrupt>
    <name>I2C2</name>
    <description>I2C2 IRQ</description>
    <value>62</value>
   </interrupt>
  </peripheral>
<!--I2C2 Inter-Integrated Circuit. 2-->
  <peripheral>
   <name>ICC0</name>
   <description>Instruction Cache Controller Registers</description>
   <baseAddress>0x4002A000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CACHE_ID</name>
     <description>Cache ID Register.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RELNUM</name>
       <description>Release Number. Identifies the RTL release version.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>PARTNUM</name>
       <description>Part Number. This field reflects the value of C_ID_PART_NUMBER configuration parameter.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>CCHID</name>
       <description>Cache ID. This field reflects the value of the C_ID_CACHEID configuration parameter.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCFG</name>
     <description>Memory Configuration Register.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-only</access>
     <resetValue>0x00080008</resetValue>
     <fields>
      <field>
       <name>CCHSZ</name>
       <description>Cache Size. Indicates total size in Kbytes of cache.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>MEMSZ</name>
       <description>Main Memory Size. Indicates the total size, in units of 128 Kbytes, of code memory accessible to the cache controller.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CACHE_CTRL</name>
     <description>Cache Control and Status Register.</description>
     <addressOffset>0x0100</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Cache Enable. Controls whether the cache is bypassed or is in use. Changing the state of this bit will cause the instruction cache to be flushed and its contents invalidated.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Cache Bypassed. Instruction data is stored in the line fill buffer but is not written to main cache memory array.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Cache Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY</name>
       <description>Cache Ready flag. Cleared by hardware when at any time the cache as a whole is invalidated (including a system reset). When this bit is 0, the cache is effectively in bypass mode (instruction fetches will come from main memory or from the line fill buffer). Set by hardware when the invalidate operation is complete and the cache is ready.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>invalid</name>
         <description>Not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INVALIDATE</name>
     <description>Invalidate All Registers.</description>
     <addressOffset>0x0700</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>INVALID</name>
       <description>Invalidate.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--ICC0 Instruction Cache Controller Registers-->
  <peripheral>
   <name>MCR</name>
   <description>Misc Control.</description>
   <baseAddress>0x40006C00</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>ECCEN</name>
     <description>ECC Enable Register</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>SYSRAM0ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM1ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM2ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM3ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM4ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SYSRAM5ECCEN</name>
       <description>ECC System RAM Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IC0ECCEN</name>
       <description>Icache0 ECC Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICXIPECCEN</name>
       <description>IcacheXIP ECC Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FL0ECCEN</name>
       <description>Flash0 ECC Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FL1ECCEN</name>
       <description>Flash1 ECC Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>PDOWN</name>
     <description>PDOWN Drive Strength</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>PDOWNDS</name>
       <description>PDOWN Drive Strength</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>PDOWNVS</name>
       <description>PDOWN Voltage Select</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>Misc Power State Control Register</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>VDDCSW</name>
       <description>Controls switching of VCORE</description>
       <bitOffset>1</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>USBSWEN_N</name>
       <description>USB Switch Control</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>off</name>
         <description>USB SW off in LP modes</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>on</name>
         <description>USB SW On</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>P1M</name>
       <description>Enable the Reset Pad Pull Up Resistors</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1m</name>
         <description>1MOhm Pullup</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>25k</name>
         <description>25kOhm Pullup.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rstn_voltage_sel</name>
       <description>Error! Description not Found!</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--MCR Misc Control.-->
  <peripheral>
   <name>OWM</name>
   <description>1-Wire Master Interface.</description>
   <baseAddress>0x4003D000</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>OneWire</name>
    <value>67</value>
   </interrupt>
   <registers>
    <register>
     <name>CFG</name>
     <description>1-Wire Master Configuration.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>long_line_mode</name>
       <description>Long Line Mode.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>force_pres_det</name>
       <description>Force Line During Presence Detect.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>bit_bang_en</name>
       <description>Bit Bang Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>ext_pullup_mode</name>
       <description>Provide an extra output control to control an external pullup.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>ext_pullup_enable</name>
       <description>Enable External Pullup.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>single_bit_mode</name>
       <description>Enable Single Bit TX/RX Mode.</description>
       <bitRange>[5:5]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>overdrive</name>
       <description>Enables overdrive speed for 1-Wire operations.</description>
       <bitRange>[6:6]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>int_pullup_enable</name>
       <description>Enable intenral pullup.</description>
       <bitRange>[7:7]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_DIV_1US</name>
     <description>1-Wire Master Clock Divisor.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>divisor</name>
       <description>Clock Divisor for 1Mhz.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL_STAT</name>
     <description>1-Wire Master Control/Status.</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>start_ow_reset</name>
       <description>Start OW Reset.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>sra_mode</name>
       <description>SRA Mode.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>bit_bang_oe</name>
       <description>Bit Bang Output Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>ow_input</name>
       <description>OW Input State.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>od_spec_mode</name>
       <description>Overdrive Spec Mode.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-only</access>
      </field>
      <field>
       <name>presence_detect</name>
       <description>Presence Pulse Detected.</description>
       <bitRange>[5:5]</bitRange>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>1-Wire Master Data Buffer.</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>tx_rx</name>
       <description>TX/RX Buffer.</description>
       <bitRange>[7:0]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>1-Wire Master Interrupt Flags.</description>
     <addressOffset>0x0010</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>ow_reset_done</name>
       <description>OW Reset Sequence Completed.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>tx_data_empty</name>
       <description>TX Data Empty Interrupt Flag.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>rx_data_ready</name>
       <description>RX Data Ready Interrupt Flag</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>line_short</name>
       <description>OW Line Short Detected Interrupt Flag.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
      </field>
      <field>
       <name>line_low</name>
       <description>OW Line Low Detected Interrupt Flag.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN</name>
     <description>1-Wire Master Interrupt Enables.</description>
     <addressOffset>0x0014</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>ow_reset_done</name>
       <description>OW Reset Sequence Completed.</description>
       <bitRange>[0:0]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>tx_data_empty</name>
       <description>Tx Data Empty Interrupt Enable.</description>
       <bitRange>[1:1]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>rx_data_ready</name>
       <description>Rx Data Ready Interrupt Enable.</description>
       <bitRange>[2:2]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>line_short</name>
       <description>OW Line Short Detected Interrupt Enable.</description>
       <bitRange>[3:3]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
      <field>
       <name>line_low</name>
       <description>OW Line Low Detected Interrupt Enable.</description>
       <bitRange>[4:4]</bitRange>
       <access>read-write</access>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--OWM 1-Wire Master Interface.-->
  <peripheral>
   <name>PT</name>
   <description>Pulse Train</description>
   <groupName>Pulse_Train</groupName>
   <baseAddress>0x4003C020</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x0010</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>RATE_LENGTH</name>
     <description>Pulse Train Configuration</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>rate_control</name>
       <description>Pulse Train Enable and Rate Control. Set to 0 to disable the Pulse Train.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>27</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>mode</name>
       <description>Pulse Train Output Mode/Train Length</description>
       <bitOffset>27</bitOffset>
       <bitWidth>5</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>32_BIT</name>
         <description>Pulse train, 32 bit pattern.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SQUARE_WAVE</name>
         <description>Square wave mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2_BIT</name>
         <description>Pulse train, 2 bit pattern.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>3_BIT</name>
         <description>Pulse train, 3 bit pattern.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4_BIT</name>
         <description>Pulse train, 4 bit pattern.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>5_BIT</name>
         <description>Pulse train, 5 bit pattern.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6_BIT</name>
         <description>Pulse train, 6 bit pattern.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7_BIT</name>
         <description>Pulse train, 7 bit pattern.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8_BIT</name>
         <description>Pulse train, 8 bit pattern.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>9_BIT</name>
         <description>Pulse train, 9 bit pattern.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>10_BIT</name>
         <description>Pulse train, 10 bit pattern.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>11_BIT</name>
         <description>Pulse train, 11 bit pattern.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12_BIT</name>
         <description>Pulse train, 12 bit pattern.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>13_BIT</name>
         <description>Pulse train, 13 bit pattern.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>14_BIT</name>
         <description>Pulse train, 14 bit pattern.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>15_BIT</name>
         <description>Pulse train, 15 bit pattern.</description>
         <value>15</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16_BIT</name>
         <description>Pulse train, 16 bit pattern.</description>
         <value>16</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>17_BIT</name>
         <description>Pulse train, 17 bit pattern.</description>
         <value>17</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>18_BIT</name>
         <description>Pulse train, 18 bit pattern.</description>
         <value>18</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>19_BIT</name>
         <description>Pulse train, 19 bit pattern.</description>
         <value>19</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>20_BIT</name>
         <description>Pulse train, 20 bit pattern.</description>
         <value>20</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>21_BIT</name>
         <description>Pulse train, 21 bit pattern.</description>
         <value>21</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>22_BIT</name>
         <description>Pulse train, 22 bit pattern.</description>
         <value>22</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>23_BIT</name>
         <description>Pulse train, 23 bit pattern.</description>
         <value>23</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>24_BIT</name>
         <description>Pulse train, 24 bit pattern.</description>
         <value>24</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>25_BIT</name>
         <description>Pulse train, 25 bit pattern.</description>
         <value>25</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>26_BIT</name>
         <description>Pulse train, 26 bit pattern.</description>
         <value>26</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>27_BIT</name>
         <description>Pulse train, 27 bit pattern.</description>
         <value>27</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>28_BIT</name>
         <description>Pulse train, 28 bit pattern.</description>
         <value>28</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>29_BIT</name>
         <description>Pulse train, 29 bit pattern.</description>
         <value>29</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>30_BIT</name>
         <description>Pulse train, 30 bit pattern.</description>
         <value>30</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>31_BIT</name>
         <description>Pulse train, 31 bit pattern.</description>
         <value>31</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>TRAIN</name>
     <description>Write the repeating bit pattern that is shifted out, LSB first, when configured in Pulse Train mode. See PT_RATE_LENGTH.mode for setting the length.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
    </register>
    <register>
     <name>LOOP</name>
     <description>Pulse Train Loop Count</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>count</name>
       <description>Number of loops for this pulse train to repeat.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>delay</name>
       <description>Delay between loops of the Pulse Train in PT Peripheral Clock cycles</description>
       <bitOffset>16</bitOffset>
       <bitWidth>12</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RESTART</name>
     <description> Pulse Train Auto-Restart Configuration.</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>pt_x_select</name>
       <description>Auto-Restart PT X Select</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>on_pt_x_loop_exit</name>
       <description>Enable Auto-Restart on PT X Loop Exit</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt_y_select</name>
       <description>Auto-Restart PT Y Select</description>
       <bitOffset>8</bitOffset>
       <bitWidth>5</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>on_pt_y_loop_exit</name>
       <description>Enable Auto-Restart on PT Y Loop Exit</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--PT Pulse Train-->
  <peripheral derivedFrom="PT">
   <name>PT1</name>
   <description>Pulse Train 1</description>
   <baseAddress>0x4003C040</baseAddress>
  </peripheral>
<!--PT1 Pulse Train 1-->
  <peripheral derivedFrom="PT">
   <name>PT2</name>
   <description>Pulse Train 2</description>
   <baseAddress>0x4003C060</baseAddress>
  </peripheral>
<!--PT2 Pulse Train 2-->
  <peripheral derivedFrom="PT">
   <name>PT3</name>
   <description>Pulse Train 3</description>
   <baseAddress>0x4003C080</baseAddress>
  </peripheral>
<!--PT3 Pulse Train 3-->
  <peripheral derivedFrom="PT">
   <name>PT4</name>
   <description>Pulse Train 4</description>
   <baseAddress>0x4003C0A0</baseAddress>
  </peripheral>
<!--PT4 Pulse Train 4-->
  <peripheral derivedFrom="PT">
   <name>PT5</name>
   <description>Pulse Train 5</description>
   <baseAddress>0x4003C0C0</baseAddress>
  </peripheral>
<!--PT5 Pulse Train 5-->
  <peripheral derivedFrom="PT">
   <name>PT6</name>
   <description>Pulse Train 6</description>
   <baseAddress>0x4003C0E0</baseAddress>
  </peripheral>
<!--PT6 Pulse Train 6-->
  <peripheral derivedFrom="PT">
   <name>PT7</name>
   <description>Pulse Train 7</description>
   <baseAddress>0x4003C100</baseAddress>
  </peripheral>
<!--PT7 Pulse Train 7-->
  <peripheral derivedFrom="PT">
   <name>PT8</name>
   <description>Pulse Train 8</description>
   <baseAddress />
  </peripheral>
<!--PT8 Pulse Train 8-->
  <peripheral>
   <name>PTG</name>
   <description>Pulse Train Generation</description>
   <groupName>Pulse_Train</groupName>
   <baseAddress>0x4003C000</baseAddress>
   <size>32</size>
   <access>read-write</access>
   <addressBlock>
    <offset>0</offset>
    <size>0x0018</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>PT</name>
    <description>Pulse Train IRQ</description>
    <value>59</value>
   </interrupt>
   <registers>
    <register>
     <name>ENABLE</name>
     <description>Global Enable/Disable Controls for All Pulse Trains</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>pt0</name>
       <description>Enable/Disable control for PT0</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt1</name>
       <description>Enable/Disable control for PT1</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt2</name>
       <description>Enable/Disable control for PT2</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt3</name>
       <description>Enable/Disable control for PT3</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt4</name>
       <description>Enable/Disable control for PT4</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt5</name>
       <description>Enable/Disable control for PT5</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt6</name>
       <description>Enable/Disable control for PT6</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt7</name>
       <description>Enable/Disable control for PT7</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RESYNC</name>
     <description>Global Resync (All Pulse Trains) Control</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>pt0</name>
       <description>Resync control for PT0</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt1</name>
       <description>Resync control for PT1</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt2</name>
       <description>Resync control for PT2</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt3</name>
       <description>Resync control for PT3</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt4</name>
       <description>Resync control for PT4</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt5</name>
       <description>Resync control for PT5</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt6</name>
       <description>Resync control for PT6</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt7</name>
       <description>Resync control for PT7</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTFL</name>
     <description>Pulse Train Interrupt Flags</description>
     <addressOffset>0x0008</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>pt0</name>
       <description>Pulse Train 0 Stopped Interrupt Flag</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt1</name>
       <description>Pulse Train 1 Stopped Interrupt Flag</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt2</name>
       <description>Pulse Train 2 Stopped Interrupt Flag</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt3</name>
       <description>Pulse Train 3 Stopped Interrupt Flag</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt4</name>
       <description>Pulse Train 4 Stopped Interrupt Flag</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt5</name>
       <description>Pulse Train 5 Stopped Interrupt Flag</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt6</name>
       <description>Pulse Train 6 Stopped Interrupt Flag</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt7</name>
       <description>Pulse Train 7 Stopped Interrupt Flag</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTEN</name>
     <description>Pulse Train Interrupt Enable/Disable</description>
     <addressOffset>0x000C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>pt0</name>
       <description>Pulse Train 0 Stopped Interrupt Enable/Disable</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt1</name>
       <description>Pulse Train 1 Stopped Interrupt Enable/Disable</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt2</name>
       <description>Pulse Train 2 Stopped Interrupt Enable/Disable</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt3</name>
       <description>Pulse Train 3 Stopped Interrupt Enable/Disable</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt4</name>
       <description>Pulse Train 4 Stopped Interrupt Enable/Disable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt5</name>
       <description>Pulse Train 5 Stopped Interrupt Enable/Disable</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt6</name>
       <description>Pulse Train 6 Stopped Interrupt Enable/Disable</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>pt7</name>
       <description>Pulse Train 7 Stopped Interrupt Enable/Disable</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SAFE_EN</name>
     <description>Pulse Train Global Safe Enable.</description>
     <addressOffset>0x0010</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>PT0</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT1</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT2</name>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT3</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT4</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT5</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT6</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT7</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SAFE_DIS</name>
     <description>Pulse Train Global Safe Disable.</description>
     <addressOffset>0x0014</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>PT0</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT1</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT2</name>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT3</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT4</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT5</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT6</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>PT7</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--PTG Pulse Train Generation-->
  <peripheral>
   <name>PWRSEQ</name>
   <description>Power Sequencer / Low Power Control Register.</description>
   <baseAddress>0x40006800</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>LPCN</name>
     <description>Low Power Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>RAMRET_EN</name>
       <description>System RAM retention in BACKUP mode. These two bits are used in conjuction with RREGEN bit. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>OVR</name>
       <description>Operating Voltage Range</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0_9V</name>
         <description>0.9V 24MHz</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_0V</name>
         <description>1.0V 48MHz</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_1V</name>
         <description>1.1V 96MHz</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RETREG_EN</name>
       <description>Retention Regulator Enable. This bit controls the retention regulator in BACKUP mode. </description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FASTWK_EN</name>
       <description>Fast Wake-Up Mode. This bit enables fast wake-up from DeepSleep mode. (5uS typical). </description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BG_DIS</name>
       <description>Bandgap OFF. This controls the System Bandgap in DeepSleep mode.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>on</name>
         <description>Bandgap is always ON.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>off</name>
         <description>Bandgap is OFF in DeepSleep mode (default).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VCOREPOR_DIS</name>
       <description>VCore Power-On Reset Monitor Disable. This bit controls the Power-On Reset monitor on VDDC supply in DeepSleep and BACKUP mode.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LDO_DIS</name>
       <description>Disable Main LDO</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>VCOREMON_DIS</name>
       <description>Vcore Monitor Disable. This bit controls the power monitor on the VCore supply in all operating modes.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VRTCMON_DIS</name>
       <description>VRTC Monitor Disable. This bit controls the power monitor on the Always-On Supply in all operating modes.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDAMON_DIS</name>
       <description>VDDA Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDIOMON_DIS</name>
       <description>VDDIO Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VDDIOHMON_DIS</name>
       <description>VFDDIOH Monitor Disable. This bit controls the power monitor of the Analog Supply in all operating modes.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable if Bandgap is ON (default) </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PORVDDBMON_DIS</name>
       <description>VDDB Power-On Reset Monitor Disable. This bit controls the Power-On Reset monitor on VDDB supply in all operating mods.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKST0</name>
     <description>Low Power I/O Wakeup Status Register 0. This register indicates the low power wakeup status for GPIO0.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>ST</name>
       <description>Wakeup IRQ flags (write ones to clear). One or more of these bits will be set when the corresponding dedicated GPIO pin (s) transition (s) from low to high or high to low. If GPIO wakeup source is selected, using PM.GPIOWKEN register, and the corresponding bit is also selected in LPWKEN register, an interrupt will be gnerated to wake up the CPU from a low power mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPWKEN0</name>
     <description>Low Power I/O Wakeup Enable Register 0. This register enables low power wakeup functionality for GPIO0.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>EN</name>
       <description>Enable wakeup. These bits allow wakeup from the corresponding GPIO pin (s) on transition (s) from low to high or high to low when PM.GPIOWKEN is set. Wakeup status is indicated in PPWKST register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>31</bitWidth>
      </field>
     </fields>
    </register>
    <register derivedFrom="LPWKST0">
     <name>LPWKST1</name>
     <description>Low Power I/O Wakeup Status Register 1. This register indicates the low power wakeup status for GPIO1.</description>
     <addressOffset>0x0C</addressOffset>
    </register>
    <register derivedFrom="LPWKEN0">
     <name>LPWKEN1</name>
     <description>Low Power I/O Wakeup Enable Register 1. This register enables low power wakeup functionality for GPIO1.</description>
     <addressOffset>0x10</addressOffset>
    </register>
    <register derivedFrom="LPWKST0">
     <name>LPWKST2</name>
     <description>Low Power I/O Wakeup Status Register 2. This register indicates the low power wakeup status for GPIO2.</description>
     <addressOffset>0x14</addressOffset>
    </register>
    <register derivedFrom="LPWKEN0">
     <name>LPWKEN2</name>
     <description>Low Power I/O Wakeup Enable Register 2. This register enables low power wakeup functionality for GPIO2.</description>
     <addressOffset>0x18</addressOffset>
    </register>
    <register derivedFrom="LPWKST0">
     <name>LPWKST3</name>
     <description>Low Power I/O Wakeup Status Register 3. This register indicates the low power wakeup status for GPIO3.</description>
     <addressOffset>0x1C</addressOffset>
    </register>
    <register derivedFrom="LPWKEN0">
     <name>LPWKEN3</name>
     <description>Low Power I/O Wakeup Enable Register 3. This register enables low power wakeup functionality for GPIO3.</description>
     <addressOffset>0x20</addressOffset>
    </register>
    <register>
     <name>LPPWKST</name>
     <description>Low Power Peripheral Wakeup Status Register.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>USBLS</name>
       <description>USB UTMI Linestate Detect Wakeup Flag (write one to clear). One or both of these bits will be set when the USB bus activity causes the linestate to change and the device to wake while USB wakeup is enabled using PMLUSBWKEN.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>USBVBUS</name>
       <description>USB VBUS Detect Wakeup Flag (write one to clear). This bit will be set when the USB power supply is powered on or powered off.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HA0</name>
       <description>Hardware Accelerator 0 Detect Wakeup Status Flag</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BBMOD</name>
       <description>Battery Back Wakeup Flag (write one to clear). This bit will be set when exiting Battery Backup Mode.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RST</name>
       <description>Reset Detect Wakeup Flag (write one to clear). This bit will be set when the external reset causes wakeup</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SDMA1</name>
       <description>Smart DMA (1) Detect Wakeup Flag (write one to clear). This bit will be set when the SDMA IRQ transitions from low to high or high to low</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPPWKEN</name>
     <description>Low Power Peripheral Wakeup Enable Register.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>USBLS</name>
       <description>USB UTMI Linestate Detect Wakeup Enable. These bits allow wakeup from the corresponding USB linestate signal (s) on transition (s) from low to high or high to low when PM.USBWKEN is set.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>USBVBUS</name>
       <description>USB VBUS Detect Wakeup Enable. This bit allows wakeup from the USB power supply on or off status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SDMA0</name>
       <description>Smart DMA Wakeup Enable. This bit allows wakeup from the Smart DMA IRQ.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SDMA1</name>
       <description>Smart DMA Wakeup Enable. This bit allows wakeup from the Smart DMA IRQ.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>LPMEMSD</name>
     <description>Low Power Memory Shutdown Control.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>RAM0</name>
       <description>System RAM block 0 Shut Down.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM1</name>
       <description>System RAM block 1 Shut Down.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM2</name>
       <description>System RAM block 2 Shut Down.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM3</name>
       <description>System RAM block 3 Shut Down.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM4</name>
       <description>System RAM block 4 Shut Down.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RAM5</name>
       <description>System RAM block 5 Shut Down.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHE</name>
       <description>Instruction Cache RAM Shut Down.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ICACHEXIP</name>
       <description>XiP Instruction Cache RAM Shut Down.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRCC</name>
       <description>System Cache RAM Shut Down.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USBFIFO</name>
       <description>USB FIFO Shut Down.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ROM</name>
       <description>ROM Shut Down.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operating Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>shutdown</name>
         <description>Shutdown Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>LPVDDPD</name>
     <description>Low Power VDD Domain Power Down Control.</description>
     <addressOffset>0x44</addressOffset>
    </register>
    <register>
     <name>GP0</name>
     <description>General Purpose Register 0</description>
     <addressOffset>0x48</addressOffset>
    </register>
    <register>
     <name>GP1</name>
     <description>General Purpose Register 1</description>
     <addressOffset>0x4C</addressOffset>
    </register>
   </registers>
  </peripheral>
<!--PWRSEQ Power Sequencer / Low Power Control Register.-->
  <peripheral>
   <name>RTC</name>
   <description>Real Time Clock and Alarm.</description>
   <baseAddress>0x40006000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>RTC</name>
    <description>RTC interrupt.</description>
    <value>3</value>
   </interrupt>
   <registers>
    <register>
     <name>SEC</name>
     <description>RTC Second Counter. This register contains the 32-bit second counter.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SEC</name>
       <description>Seconds Counter.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSEC</name>
     <description>RTC Sub-second Counter. This counter increments at 256Hz. RTC_SEC is incremented when this register rolls over from 0xFF to 0x00.</description>
     <addressOffset>0x04</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SSEC</name>
       <description>Sub-Seconds Counter (12-bit).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TODA</name>
     <description>Time-of-day Alarm.</description>
     <addressOffset>0x08</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>TOD_ALARM</name>
       <description>Time-of-day Alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>20</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SSECA</name>
     <description>RTC sub-second alarm.  This register contains the reload value for the sub-second alarm.</description>
     <addressOffset>0x0C</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>SSEC_ALARM</name>
       <description>This register contains the reload value for the sub-second alarm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL</name>
     <description>RTC Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <resetValue>0x00000008</resetValue>
     <resetMask>0xFFFFFF38</resetMask>
     <fields>
      <field>
       <name>RTCE</name>
       <description>Real Time Clock Enable. This bit enables the Real Time Clock. This bit can only be written when WE=1 and BUSY =0. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADE</name>
       <description>Alarm Time-of-Day Interrupt Enable. Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ASE</name>
       <description>Alarm Sub-second Interrupt Enable.  Change to this bit is effective only after BUSY is cleared from 1 to 0.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>RTC Busy. This bit is set to 1 by hardware when changes to RTC registers required a synchronized version of the register to be in place.  This bit is automatically cleared by hardware.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDY</name>
       <description>RTC Ready. This bit is set to 1 by hardware when the RTC count registers update.  It can be cleared to 0 by software at any time. It will also be cleared to 0 by hardware just prior to an update of the RTC count register.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>busy</name>
         <description>Register has not updated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RDYE</name>
       <description>RTC Ready Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ALDF</name>
       <description>Time-of-Day Alarm Interrupt Flag.  This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ALSF</name>
       <description>Sub-second Alarm Interrupt Flag. This alarm is qualified as wake-up source to the processor.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>Not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>Active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SQE</name>
       <description>Square Wave Output Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FT</name>
       <description>Frequency Output Selection. When SQE=1, these bits specify the output frequency on the SQW pin.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>freq1Hz</name>
         <description>1 Hz (Compensated).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq512Hz</name>
         <description>512 Hz (Compensated).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq4KHz</name>
         <description>4 KHz.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ACRE</name>
       <description>Asynchronous Counter Read Enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>sync</name>
         <description>Synchronous.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>async</name>
         <description>Asynchronous.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WE</name>
       <description>Write Enable. This register bit serves as a protection mechanism against unintentional writes to critical RTC bits.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ignore</name>
         <description>Ignored.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>allow</name>
         <description>Allowed.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>TRIM</name>
     <description>RTC Trim Register.</description>
     <addressOffset>0x14</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>TRIM</name>
       <description>RTC Trim. This register contains the 2's complement value that specifies the trim resolution. Each increment or decrement of the bit adds or subtracts 1ppm at each 4KHz clock value, with a maximum correction of +/- 127ppm.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>COUNT</name>
       <description>VBAT Timer Value. When RTC is running off of VBAT, this field is incremented every 32 seconds.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>24</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OSCCTRL</name>
     <description>RTC Oscillator Control Register.</description>
     <addressOffset>0x18</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>BYPASS</name>
       <description>RTC Crystal Bypass</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>32KOUT</name>
       <description>RTC 32kHz Square Wave Output</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--RTC Real Time Clock and Alarm.-->
  <peripheral>
   <name>SCN</name>
   <description>Smart Card Interface.</description>
   <groupName>SCN</groupName>
   <baseAddress>0x4002C000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SC0</name>
    <description>SC0 IRQ</description>
    <value>11</value>
   </interrupt>
   <registers>
    <register>
     <name>CR</name>
     <description>Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>CONV</name>
       <description>Convention Select Bit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CREP</name>
       <description>Character Repeat Enable Bit.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WTEN</name>
       <description>Wait Time Counter Enable Bit.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>UART</name>
       <description>Smart Card Mode Bit.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CCEN</name>
       <description>Clock Counter Enable Bit.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXFLUSH</name>
       <description>Receive FIFO Flush.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXFLUSH</name>
       <description>Transmit FIFO Flush.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXTHD</name>
       <description>Receive FIFO Depth.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>TXTHD</name>
       <description>Transmit FIFO Depth.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SR</name>
     <description>Status Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>PAR</name>
       <description>Parity Error Detector Flag.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WTOV</name>
       <description>Waiting Time Counter Overflow.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CCOV</name>
       <description>Clock Counter Overflow Flag.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXCF</name>
       <description>Transmit Complete Flag.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXEMPTY</name>
       <description>Receive FIFO Empty Flag.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXFULL</name>
       <description>Receive FIFO Full Flag.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXEMPTY</name>
       <description>Transmit FIFO Empty Flag.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXFULL</name>
       <description>Transmit FIFO Full Flag.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXELT</name>
       <description>Number of Bytes in the Receive FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>TXELT</name>
       <description>Number of Bytes in the Transmit FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PN</name>
     <description>Pin Register,</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>CRDRST</name>
       <description>Smart Card Reset Pin Control.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRDCLK</name>
       <description>Smart Card Clock Piin Control.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRDIO</name>
       <description>Smart Card IO Pin Control.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRDC4</name>
       <description>Smart Card SCn_C4 Pin Control.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRDC8</name>
       <description>Smart Card SCn_C8 Pin Control.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLKSEL</name>
       <description>Smart Card Clock Select.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ETUR</name>
     <description>ETU Register.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>ETU</name>
       <description>Elemental Time Unit Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>15</bitWidth>
      </field>
      <field>
       <name>COMP</name>
       <description>Compensation Mode Enable Bit.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HALF</name>
       <description>Half ETU Count Selection Bit.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>GTR</name>
     <description>Guard Time Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>GT</name>
       <description>Guard Time.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WT0R</name>
     <description>Waiting Time 0 Register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>WT</name>
       <description>Wait Time.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WT1R</name>
     <description>Waiting Time 1 Register.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>WT</name>
       <description>Wait Time.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>IER</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>PARIE</name>
       <description>Parity Error Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WTIE</name>
       <description>Waiting Time Overflow Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTIE</name>
       <description>Clock Counter Overflow Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TCIE</name>
       <description>Character Transmission Completion Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXEIE</name>
       <description>Receive FIFO Empty Interrupt Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXTIE</name>
       <description>Receive FIFO Threshold Reached Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXFIE</name>
       <description>Receive FIFO Full Interrupt Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXEIE</name>
       <description>Transmit FIFO Empty Interrupt Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXTIE</name>
       <description>Transmit FIFO Threshold Reached Interrupt Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ISR</name>
     <description>Interrupt Status Register.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>PARIS</name>
       <description>Parity Error Interrupt Status Flag.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>WTIS</name>
       <description>Waiting Time Overflow Interrupt Status Flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTIS</name>
       <description>Clock Counter Overflow Interrupt Status Flag.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TCIS</name>
       <description>Character Transmission Completion Interrupt Status Flag.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXEIS</name>
       <description>Receive FIFO Empty Interrupt Status Flag.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXTIS</name>
       <description>Receive FIFO Threshold Reached Interrupt Status Flag.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXFIS</name>
       <description>Receive FIFO Full Interrupt Status Flag.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXEIS</name>
       <description>Transmit FIFO Empty Interrupt Status Flag.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXTIS</name>
       <description>Transmit FIFO Threshold Reached Interrupt Status Flag.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TXR</name>
     <description>Transmit Register.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Transmit Data.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>RXR</name>
     <description>Receive Register.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Receive Data.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>PARER</name>
       <description>Parity Error Detect Bit.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CCR</name>
     <description>Clock Counter Register,</description>
     <addressOffset>0x2C</addressOffset>
     <fields>
      <field>
       <name>CCYC</name>
       <description>Number of Clock Cycles to Count.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>24</bitWidth>
      </field>
      <field>
       <name>MAN</name>
       <description>Manual Mode.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SCN Smart Card Interface.-->
  <peripheral derivedFrom="SCN">
   <name>SCN1</name>
   <description>Smart Card Interface. 1</description>
   <baseAddress>0x4002D000</baseAddress>
   <interrupt>
    <name>SCN1</name>
    <description>SCN1 IRQ</description>
    <value>37</value>
   </interrupt>
  </peripheral>
<!--SCN1 Smart Card Interface. 1-->
  <peripheral>
   <name>SDHC</name>
   <description>SDHC/SDIO Controller</description>
   <baseAddress>0x40037000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SDHC</name>
    <value>66</value>
   </interrupt>
   <registers>
    <register>
     <name>SDMA</name>
     <description>SDMA System Address / Argument 2.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>ADDR</name>
       <description>SDMA System Address / Argument 2  of Auto CMD23.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_SIZE</name>
     <description>Block Size.</description>
     <addressOffset>0x04</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>TRANS</name>
       <description>Transfer Block Size.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>HOST_BUFF</name>
       <description>Host SDMA Buffer Boundary.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_CNT</name>
     <description>Block Count.</description>
     <addressOffset>0x06</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>TRANS</name>
       <description>Blocks Count For Current Transfer.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ARG_1</name>
     <description>Argument 1.</description>
     <addressOffset>0x08</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>CMD</name>
       <description>Command Argument 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TRANS</name>
     <description>Transfer Mode.</description>
     <addressOffset>0x0C</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>DMA_EN</name>
       <description>DMA Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <name>enable</name>
        <enumeratedValue>
         <name>dma_transfer</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>non_dma_transfer</name>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BLK_CNT_EN</name>
       <description>Block Count Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <name>count</name>
        <enumeratedValue>
         <name>enable</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>disable</name>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AUTO_CMD_EN</name>
       <description>Auto CMD Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <name>CMD</name>
        <enumeratedValue>
         <name>disable</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>cmd12</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>cmd23</name>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READ_WRITE</name>
       <description>Data Transfer Direction Select.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <name>read</name>
        <enumeratedValue>
         <name>read</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>write</name>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MULTI</name>
       <description>Multi / Single Block Select.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <name>multi</name>
        <enumeratedValue>
         <name>enable</name>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>disable</name>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CMD</name>
     <description>Command.</description>
     <addressOffset>0x0E</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>RESP_TYPE</name>
       <description>Response Type Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>CRC_CHK_EN</name>
       <description>Command CRC Check Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>IDX_CHK_EN</name>
       <description>Command Index Check Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_PRES_SEL</name>
       <description>Data Present Select.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TYPE</name>
       <description>Command Type.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>IDX</name>
       <description>Command Index.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>RESP[%s]</name>
     <description>Response 0 Register 0-7.</description>
     <addressOffset>0x010</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>CMD_RESP</name>
       <description>Command Response.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BUFFER</name>
     <description>Buffer Data Port.</description>
     <addressOffset>0x20</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DATA</name>
       <description>Buffer Data.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESENT</name>
     <description>Present State.</description>
     <addressOffset>0x024</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>CMD</name>
       <description>Command Inhibit (CMD).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DAT</name>
       <description>Command Inhibit (DAT).</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DAT_LINE_ACTIVE</name>
       <description>DAT Line Active.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RETUNING</name>
       <description>Re-Tuning Request.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>WRITE_TRANSFER</name>
       <description>Write Transfer Active.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>READ_TRANSFER</name>
       <description>Read Transfer Active.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>BUFFER_WRITE</name>
       <description>Buffer Write Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>BUFFER_READ</name>
       <description>Buffer Read Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CARD_INSERTED</name>
       <description>Card Inserted.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CARD_STATE</name>
       <description>Card State Stable.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CARD_DETECT</name>
       <description>Card Detect Pin Level.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>WP</name>
       <description>Write Protect Switch Pin Level.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DAT_SIGNAL_LEVEL</name>
       <description>DAT[3:0] Line Signal Level.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>CMD_SIGNAL_LEVEL</name>
       <description>CMD Line Signal Level.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HOST_CN_1</name>
     <description>Host Control 1.</description>
     <addressOffset>0x028</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>LED_CN</name>
       <description>LED Control.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_TRANSFER_WIDTH</name>
       <description>Data Transfer Width.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>HS_EN</name>
       <description>High Speed Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA_SELECT</name>
       <description>DMA Select.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>EXT_DATA_TRANSFER_WIDTH</name>
       <description>Extended Data Transfer Width.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_DETECT_TEST</name>
       <description>Card Detect Test Level.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_DETECT_SIGNAL</name>
       <description>Card Detect Signal Selection.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PWR</name>
     <description>Power Control.</description>
     <addressOffset>0x029</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>BUS_POWER</name>
       <description>SD Bus Power.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUS_VOLT_SEL</name>
       <description>SD Bus Voltage Select.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BLK_GAP</name>
     <description>Block Gap Control.</description>
     <addressOffset>0x02A</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>STOP</name>
       <description>Stop At Block Gap Request.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CONT</name>
       <description>Continue Request.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>READ_WAIT</name>
       <description>Read Wait Control.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INTR</name>
       <description>Interrupt At Block Gap.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKEUP</name>
     <description>Wakeup Control.</description>
     <addressOffset>0x02B</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>CARD_INT</name>
       <description>Wakeup Event Enable On Card Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INS</name>
       <description>Wakeup Event Enable On SD Card Insertion.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_REM</name>
       <description>Wakeup Event Enable On SD Card Removal.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_CN</name>
     <description>Clock Control.</description>
     <addressOffset>0x02C</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>INTERNAL_CLK_EN</name>
       <description>Internal Clock Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INTERNAL_CLK_STABLE</name>
       <description>Internal Clock Stable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SD_CLK_EN</name>
       <description>SD Clock Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CLK_GEN_SEL</name>
       <description>Clock Generator Select.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>UPPER_SDCLK_FREQ_SEL</name>
       <description>Upper Bits of SDCLK Frequency Select.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>SDCLK_FREQ_SEL</name>
       <description>SDCLK Frequency Select.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TO</name>
     <description>Timeout Control.</description>
     <addressOffset>0x02E</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>DATA_COUNT_VALUE</name>
       <description>Data Timeout Counter Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SW_RESET</name>
     <description>Software Reset.</description>
     <addressOffset>0x02F</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>RESET_ALL</name>
       <description>Software Reset For All.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RESET_CMD</name>
       <description>Software Reset For CMD Line.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RESET_DAT</name>
       <description>Software Reset For DAT Line.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_STAT</name>
     <description>Normal Interrupt Status.</description>
     <addressOffset>0x030</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_COMP</name>
       <description>Command Complete.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TRANS_COMP</name>
       <description>Transfer Complete.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BLK_GAP_EVENT</name>
       <description>Block Gap Event.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA</name>
       <description>DMA Interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUFF_WR_READY</name>
       <description>Buffer Write Ready.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUFF_RD_READY</name>
       <description>Buffer Read Ready.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INSERTION</name>
       <description>Card Insertion.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_REMOVAL</name>
       <description>Card Removal.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INTR</name>
       <description>Card Interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RETUNING</name>
       <description>Re-Tuning Event.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ERR_INTR</name>
       <description>Error Interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ER_INT_STAT</name>
     <description>Error Interrupt Status.</description>
     <addressOffset>0x032</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_TO</name>
       <description>Command Timeout Error.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_CRC</name>
       <description>Command CRC Error.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_END_BIT</name>
       <description>Command End Bit Error.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_IDX</name>
       <description>Command Index Error.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_TO</name>
       <description>Data Timeout Error.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_CRC</name>
       <description>Data CRC Error.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_END_BIT</name>
       <description>Data End Bit Error.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CURRENT_LIMIT</name>
       <description>Current Limit Error.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>AUTO_CMD_12</name>
       <description>Auto CMD Error.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ADMA</name>
       <description>ADMA Error.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA</name>
       <description>DMA Error.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Normal Interrupt Status Enable.</description>
     <addressOffset>0x034</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_COMP</name>
       <description>Command Complete Status Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TRANS_COMP</name>
       <description>Transfer Complete Status Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BLK_GAP</name>
       <description>Block Gap Event Status Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA</name>
       <description>DMA Interrupt Status Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUFFER_WR</name>
       <description>Buffer Write Ready Status Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUFFER_RD</name>
       <description>Buffer Read Ready Status Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INSERT</name>
       <description>Card Insertion Status Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_REMOVAL</name>
       <description>Card Removal Status Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INT</name>
       <description>Card Interrupt Status Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RETUNING</name>
       <description>Re-Tuning Event Status Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ER_INT_EN</name>
     <description>Error Interrupt Status Enable.</description>
     <addressOffset>0x36</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_TO</name>
       <description>Command Timeout Error Status Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_CRC</name>
       <description>Command CRC Error Status Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_END_BIT</name>
       <description>Command End Bit Error Status Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_IDX</name>
       <description>Command Index Error Status Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_TO</name>
       <description>Data Timeout Error Status Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_CRC</name>
       <description>Data CRC Error Status Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_END_BIT</name>
       <description>Data End Bit Error Status Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>AUTO_CMD</name>
       <description>Auto CMD Error Status Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ADMA</name>
       <description>ADMA Error Status Enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TUNING</name>
       <description>Tuning Error Status Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>VENDOR</name>
       <description>Vendor Specific Error Status Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_SIGNAL</name>
     <description>Normal Interrupt Signal Enable.</description>
     <addressOffset>0x038</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_COMP</name>
       <description>Command Complete Signal Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TRANS_COMP</name>
       <description>Transfer Complete Signal Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BLK_GAP</name>
       <description>Block Gap Event Signal Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA</name>
       <description>DMA Interrupt Signal Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUFFER_WR</name>
       <description>Buffer Write Ready Signal Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BUFFER_RD</name>
       <description>Buffer Read Ready Signal Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INSERT</name>
       <description>Card Insertion Signal Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_REMOVAL</name>
       <description>Card Removal Signal Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CARD_INT</name>
       <description>Card Interrupt Signal Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RETUNING</name>
       <description>Re-Tuning Event Signal Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ER_INT_SIGNAL</name>
     <description>Error Interrupt Signal Enable.</description>
     <addressOffset>0x03A</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_TO</name>
       <description>Command Timeout Error Signal Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_CRC</name>
       <description>Command CRC Error Signal Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_END_BIT</name>
       <description>Command End Bit Error Signal Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CMD_IDX</name>
       <description>Command Index Error Signal Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_TO</name>
       <description>Data Timeout Error Signal Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_CRC</name>
       <description>Data CRC Error Signal Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DATA_END_BIT</name>
       <description>Data End Bit Error Signal Enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CURR_LIM</name>
       <description>Current Limit Error Signal Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>AUTO_CMD</name>
       <description>Auto CMD Error Signal Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ADMA</name>
       <description>ADMA Error Signal Enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TUNING</name>
       <description>Tuning Error Signal Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TAR_RESP</name>
       <description>Target Response Error Signal Enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTO_CMD_ER</name>
     <description>Auto CMD Error Status.</description>
     <addressOffset>0x03C</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>NOT_EXCUTED</name>
       <description>Auto CMD12 Not Executed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TO</name>
       <description>Auto CMD Timeout Error.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CRC</name>
       <description>Auto CMD CRC Error.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>END_BIT</name>
       <description>Auto CMD End Bit Error.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>INDEX</name>
       <description>Auto CMD Index Error.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOT_ISSUED</name>
       <description>Command Not Issued By Auto CMD12 Error.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HOST_CN_2</name>
     <description>Host Control 2.</description>
     <addressOffset>0x03E</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>UHS</name>
       <description>UHS Mode Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>SIGNAL_V1_8</name>
       <description>1.8V Signaling Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>EXCUTE</name>
       <description>Execute Tuning.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SAMPLING_CLK</name>
       <description>Sampling Clock Select.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>ASYNCH_INT</name>
       <description>Asynchronous Interrupt Enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PRESET_VAL_EN</name>
       <description>Preset Value Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CFG_0</name>
     <description>Capabilities 0-31.</description>
     <addressOffset>0x040</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>TO_CLK_FREQ</name>
       <description>Timeout Clock Frequency.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TO_CLK_UNIT</name>
       <description>Timeout Clock Unit.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_FREQ</name>
       <description>Base Clock Frequency For SD Clock.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>MAX_BLK_LEN</name>
       <description>Max Block Length.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>BIT_8</name>
       <description>8-bit Support for Embedded Device.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>ADMA2</name>
       <description>ADMA2 Support.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>HS</name>
       <description>High Speed Support.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SDMA</name>
       <description>SDMA Support.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SUSPEND</name>
       <description>Suspend/Resume Support.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>V3_3</name>
       <description>Voltage Support 3.3V.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>V3_0</name>
       <description>Voltage Support 3.0V.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>V1_8</name>
       <description>Voltage Support 1.8V.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>BIT_64_SYS_BUS</name>
       <description>64-bit System Bus Support.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>ASYNC_INT</name>
       <description>Asynchronous Interrupt Support.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SLOT_TYPE</name>
       <description>Slot Type.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CFG_1</name>
     <description>Capabilities 32-63.</description>
     <addressOffset>0x044</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDR50</name>
       <description>SDR50 Support.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SDR104</name>
       <description>SDR104 Support.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>0</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DDR50</name>
       <description>DDR50 Support.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_A</name>
       <description>Driver Type A Support.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_C</name>
       <description>Driver Type C Support.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_D</name>
       <description>Driver Type D Support.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TIMER_CNT_TUNING</name>
       <description>Timer Count for Re-Tuning.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TUNING_SDR50</name>
       <description>Use Tuning for SDR50.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RETUNING</name>
       <description>Re-Tuning Modes.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_MULTI</name>
       <description>Clock Multiplier.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>MAX_CURR_CFG</name>
     <description>Maximum Current Capabilities.</description>
     <addressOffset>0x048</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>V3_3</name>
       <description>Maximum Current for 3.3V.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>V3_0</name>
       <description>Maximum Current for 3.0V.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>V1_8</name>
       <description>Maximum Current for 1.8V.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FORCE_CMD</name>
     <description>Force Event for Auto CMD Error Status.</description>
     <addressOffset>0x050</addressOffset>
     <size>16</size>
     <access>write-only</access>
     <fields>
      <field>
       <name>NOT_EXCU</name>
       <description>Force Event for Auto CMD12 Not Executed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>TO</name>
       <description>Force Event for Auto CMD Timeout Error.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>CRC</name>
       <description>Force Event for Auto CMD CRC Error.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>END_BIT</name>
       <description>Force Event for Auto CMD End Bit Error.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>INDEX</name>
       <description>Force Event for Auto CMD Index Error.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
      <field>
       <name>NOT_ISSUED</name>
       <description>Force Event for Command Not Issued By Auto CMD12 Error.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FORCE_EVENT_INT_STAT</name>
     <description>Force Event for Error Interrupt Status.</description>
     <addressOffset>0x052</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>CMD_TO</name>
       <description>Force Event for Command Timeout Error.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CMD_CRC</name>
       <description>Force Event for Command CRC Error.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CMD_END_BIT</name>
       <description>Force Event for Command End Bit Error.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CMD_INDEX</name>
       <description>Force Event for Command Index Error.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DATA_TO</name>
       <description>Force Event for Data Timeout Error.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DATA_CRC</name>
       <description>Force Event for Data CRC Error.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DATA_END_BIT</name>
       <description>Force Event for Data End Bit Error.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CURR_LIMIT</name>
       <description>Force Event for Current Limit Error.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>AUTO_CMD</name>
       <description>Force Event for Auto CMD Error.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>ADMA</name>
       <description>Force Event for ADMA Error.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>VENDOR</name>
       <description>Force Event for Vendor Specific Error Status.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>3</bitWidth>
       <access>write-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>ADMA_ER</name>
     <description>ADMA Error Status.</description>
     <addressOffset>0x054</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>STATE</name>
       <description>ADMA Error State.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
      </field>
      <field>
       <name>LEN_MISMATCH</name>
       <description>ADMA Length Mismatch Error.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ADMA_ADDR_0</name>
     <description>ADMA System Address 0-31.</description>
     <addressOffset>0x058</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>ADDR</name>
       <description>ADMA System Address  Part 1 (part 2 is ADMA_ADDR_1).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ADMA_ADDR_1</name>
     <description>ADMA System Address 32-63.</description>
     <addressOffset>0x05C</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>ADDR</name>
       <description>ADMA System Address  Part 1 (part 2 is ADMA_ADDR_1).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_0</name>
     <description>Preset Value for Initialization.</description>
     <addressOffset>0x060</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_1</name>
     <description>Preset Value for Default Speed.</description>
     <addressOffset>0x062</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_2</name>
     <description>Preset Value for High Speed.</description>
     <addressOffset>0x064</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_3</name>
     <description>Preset Value for SDR12.</description>
     <addressOffset>0x066</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_4</name>
     <description>Preset Value for SDR25.</description>
     <addressOffset>0x068</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_5</name>
     <description>Preset Value for SDR50.</description>
     <addressOffset>0x06A</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_6</name>
     <description>Preset Value for SDR104.</description>
     <addressOffset>0x06C</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>PRESET_7</name>
     <description>Preset Value for DDR50.</description>
     <addressOffset>0x06E</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>SDCLK_FREQ</name>
       <description>SDCLK Frequency Select Value.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>CLK_GEN</name>
       <description>Clock Generator Select Value.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DRIVER_STRENGTH</name>
       <description>Driver Strength Select Value.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>2</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SLOT_INT</name>
     <description>Slot Interrupt Status.</description>
     <addressOffset>0x0FC</addressOffset>
     <size>16</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>INT_SIGNALS</name>
       <description>Interrupt Signal For Each Slot.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>HOST_CN_VER</name>
     <description>Host Controller Version.</description>
     <addressOffset>0x0FE</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>SPEC_VER</name>
       <description>Specification Version Number.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>VEND_VER</name>
       <description>Vendor Version Number.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SDHC SDHC/SDIO Controller-->
  <peripheral>
   <name>SEMA</name>
   <description>The Semaphore peripheral allows multiple cores in a system to cooperate when accessing shred resources.
                                     The peripheral contains eight semaphores that can be atomically set and cleared. It is left to the discretion of the software
                                     architect to decide how and when the semaphores are used and how they are allocated. Existing hardware does not have to be
                                     
                                     modified for this type of cooperative sharing, and the use of semaphores is exclusively within the software domain.</description>
   <baseAddress>0x4003E000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <dim>8</dim>
     <dimIncrement>0x04</dimIncrement>
     <name>SEMAPHORES[%s]</name>
     <description>Read to test and set, returns prior value. Write 0 to clear semaphore.</description>
     <addressOffset>0x000</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>sema</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>status</name>
     <description>Semaphore status bits. 0 indicates the semaphore is free, 1 indicates taken.</description>
     <addressOffset>0x100</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>STATUS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SEMA The Semaphore peripheral allows multiple cores in a system to cooperate when accessing shred resources.
                                     The peripheral contains eight semaphores that can be atomically set and cleared. It is left to the discretion of the software
                                     architect to decide how and when the semaphores are used and how they are allocated. Existing hardware does not have to be
                                     
                                     modified for this type of cooperative sharing, and the use of semaphores is exclusively within the software domain.-->
  <peripheral>
   <name>SIR</name>
   <description>System Initialization Registers.</description>
   <baseAddress>0x40000400</baseAddress>
   <access>read-only</access>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>SISTAT</name>
     <description>System Initialization Status Register.</description>
     <addressOffset>0x00</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>MAGIC</name>
       <description>Magic Word Validation.  This bit is set by the system initialization block following power-up.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>magicNotSet</name>
         <description>Magic word was not set (OTP has not been initialized properly).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>magicSet</name>
         <description>Magic word was set (OTP contains valid settings).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CRCERR</name>
       <description>CRC Error Status.  This bit is set by the system initialization block following power-up.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <usage>read</usage>
        <enumeratedValue>
         <name>noError</name>
         <description>No CRC errors occurred during the read of the OTP memory block.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>error</name>
         <description>A CRC error occurred while reading the OTP. The address of the failure location in the OTP memory is stored in the ERRADDR register.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>ERRADDR</name>
     <description>Read-only field set by the SIB block if a CRC error occurs during the read of the OTP memory. Contains the failing address in OTP memory (when CRCERR equals 1).</description>
     <addressOffset>0x04</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>ERRADDR</name>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FSTAT</name>
     <description>funcstat register.</description>
     <addressOffset>0x100</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>FPU</name>
       <description>FPU Function.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>USB</name>
       <description>USB Device.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADC</name>
       <description>10-bit Sigma Delta ADC.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>XIP</name>
       <description>XiP function.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDHC</name>
       <description>SDHC function.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SMPHR</name>
       <description>SMPHR function.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SRCC</name>
       <description>SRCC function.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADC9</name>
       <description>ADC9 function.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SC</name>
       <description>SC function.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NMI</name>
       <description>NMI function.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SFSTAT</name>
     <description>secfuncstat register.</description>
     <addressOffset>0x104</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>SBD</name>
       <description>SBD function.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SLD</name>
       <description>SLD function.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TRNGD</name>
       <description>TRNG function.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESD</name>
       <description>AES function.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SHAD</name>
       <description>SHA function.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SMD</name>
       <description>SMD function.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>no</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>yes</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SIR System Initialization Registers.-->
  <peripheral>
   <name>SKBD</name>
   <description>Secure Keyboard</description>
   <baseAddress>0x40032000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>Secure_Keypad</name>
    <description>Secure Keypad interrupt</description>
    <value>19</value>
   </interrupt>
   <registers>
    <register>
     <name>CR0</name>
     <description>Input Output Select Bits.  Each bit of IOSEL selects the pin direction for the corresponding KBDIO pin.  If IOSEL[0] = 1, KBDIO0 is an output.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>KBDIO_0</name>
       <description>Input Output Select for KBDIO0 pin.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>10</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>input</name>
         <description>Input</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>output</name>
         <description>Output</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CR1</name>
     <description>Control Register 1</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>AUTOEN</name>
       <description>Automatic Keyboard Scan Enable</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="AUTOEN">
       <name>CLEAR</name>
       <description>Auto Clear Bit</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>OUTNB</name>
       <description>Output Number. Number of KBDIO pins selected as outputs. NOTE:
                                                                                                                                                                     Output pins must be allocated contiguously starting with KBDIO0 and continuing through to KBDIO7.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>DBTM</name>
       <description>Debounce Time. Number of milliseconds a keypress event must be active before it is considered actual. NOTE:
                                                                                                                                                                     Debounce time values based on system running from an external 12MHz clock source with PLL0 enabled.  Other external crystal values will cause the debounce time to scale linearly.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>time4ms</name>
         <description>4.1 ms</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time5ms</name>
         <description>5.3 ms</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time6ms</name>
         <description>6.5 ms</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time7ms</name>
         <description>7.6 ms</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time8ms</name>
         <description>8.8 ms</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time10ms</name>
         <description>10.0 ms</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time11ms</name>
         <description>11.2 ms</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>time12ms</name>
         <description>12.3 ms</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SR</name>
     <description>Status Register</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BUSY</name>
       <description>Busy bit. This bit is set by hardware when the automatic keyboard scan is enabled and running.  This bit is clear at all other times.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>IER</name>
     <description>Interrupt Enable Register</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>PUSHIE</name>
       <description>Push Event Enable Bit. When set, this bit enables an interrupt to be generated on a key push event.  Automatic keyboard scan must be enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="PUSHIE">
       <name>RELEASEIE</name>
       <description>Release Event Enable Bit. When set, this bit enables an interrupt to be generated on a key release event.  Automatic keyboard scan must be enabled.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="PUSHIE">
       <name>OVERIE</name>
       <description>Overrun Event Enable Bit. When set, this bit enables an interrupt to be generated on an overrun event.  Automatic keyboard scan must be enabled.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ISR</name>
     <description>Interrupt Status Register</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>PUSHIS</name>
       <description>Push Interrupt Flag. This bit is set by hardware when a key has been pushed.  If the interrupt is enabled for this flag, a system interrupt will be fired.  If the interrupt enable is not set, the flag will be set, but no interrupt will fire.  This bit must be cleared by software.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field derivedFrom="PUSHIS">
       <name>RELEASEIS</name>
       <description>Release Interrupt Flag. This bit is set by hardware when a key has been released.  If the interrupt is enabled for this flag, a system interrupt will be fired.  If the interrupt enable is not set, the flag will be set, but no interrupt will fire.  This bit must be cleared by software.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field derivedFrom="PUSHIS">
       <name>OVERIS</name>
       <description>Overrun Event Enable Bit. This bit is set by hardware when an overrun event has occurred.  If the interrupt is enabled for this flag, a system interrupt will be fired.  If the interrupt enable is not set, the flag will be set, but no interrupt will fire.  This bit must be cleared by software.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>4</dimIncrement>
     <name>EVENT[%s]</name>
     <description>Key Register</description>
     <addressOffset>0x14</addressOffset>
     <access>read-only</access>
     <resetValue>0x00000C00</resetValue>
     <fields>
      <field>
       <name>IOIN</name>
       <description>IO Input. Input pin of key event.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>IOOUT</name>
       <description>IO Output. Output pin of key event.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>PUSH</name>
       <description>If set to 1 the key has been released.  If set to 0 the key has been pushed.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>pushed</name>
         <description>Pushed</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>released</name>
         <description>Released</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>READ</name>
       <description>If set to 1 this register has been read.  If set to 0 the key register has not been read since its last change.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>notRead</name>
         <description>This register has not been read since its last change.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>read</name>
         <description>This register has been read.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NEXT</name>
       <description>If set to 1 one of the next key registers (x+1 to 3) contains a key event.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>none</name>
         <description>No more key register contain a key event.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>more</name>
         <description>Other key registers contain a key event.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SKBD Secure Keyboard-->
  <peripheral>
   <name>SMON</name>
   <description>The Security Monitor block used to monitor system threat conditions.</description>
   <baseAddress>0x40004000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>EXTSCN</name>
     <description>External Sensor Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x3800FFC0</resetMask>
     <fields>
      <field>
       <name>EXTS_EN0</name>
       <description>External Sensor Enable for input/output pair 0.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN1</name>
       <description>External Sensor Enable for input/output pair 1.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN2</name>
       <description>External Sensor Enable for input/output pair 2.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN3</name>
       <description>External Sensor Enable for input/output pair 3.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN4</name>
       <description>External Sensor Enable for input/output pair 4.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTS_EN5</name>
       <description>External Sensor Enable for input/output pair 5.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTCNT</name>
       <description>External Sensor Error Counter. These bits set the number of external sensor accepted mismatches that have to occur within a single bit period before an external sensor alarm is triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>EXTFRQ</name>
       <description>External Sensor Frequency. These bits define the frequency at which the external sensors are clocked to/from the EXTS_IN and EXTS_OUT pair.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>freq2000Hz</name>
         <description>Div 4 (2000Hz).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq1000Hz</name>
         <description>Div 8 (1000Hz).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq500Hz</name>
         <description>Div 16 (500Hz).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq250Hz</name>
         <description>Div 32 (250Hz).</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq125Hz</name>
         <description>Div 64 (125Hz).</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq63Hz</name>
         <description>Div 128 (63Hz).</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>freq31Hz</name>
         <description>Div 256 (31Hz).</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>RFU</name>
         <description>Reserved. Do not use.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DIVCLK</name>
       <description>Clock Divide.  These bits are used to divide the 8KHz input clock. The resulting divided clock is used for all logic within the Security Monitor Block. Note:
                                                             If the input clock is divided with these bits, the error count threshold table and output frequency will be affected accordingly with the same divide factor.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1 (8000 Hz).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2 (4000 Hz).</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4 (2000 Hz).</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8 (1000 Hz).</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16 (500 Hz).</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32 (250 Hz).</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64 (125 Hz).</description>
         <value>6</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BUSY</name>
       <description>Busy. This bit is set to 1 by hardware after EXTSCN register is written to. This bit is automatically cleared to 0 after this register information has been transferred to the security monitor domain.</description>
       <bitOffset>30</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>idle</name>
         <description>Idle.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Update in Progress.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOCK</name>
       <description>Lock Register. Once locked, the EXTSCN register can no longer be modified.  Only a battery disconnect will clear this bit. VBAT powers this register.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INTSCN</name>
     <description>Internal Sensor Control Register.</description>
     <addressOffset>0x04</addressOffset>
     <resetMask>0x7F00FFF7</resetMask>
     <fields>
      <field>
       <name>SHIELD_EN</name>
       <description>Die Shield Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TEMP_EN</name>
       <description>Temperature Sensor Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VBAT_EN</name>
       <description>Battery Monitor Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DFD_EN</name>
       <description>Digital Fault Dector Enable</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DFD_NMI</name>
       <description>Digital Fault NMI Enable</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DFD_STDBY</name>
       <description>Digital Fault Dector Stand by Enable</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LOTEMP_SEL</name>
       <description>Low Temperature Detection Select.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>neg50C</name>
         <description>-50 degrees C.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>neg30C</name>
         <description>-30 degrees C.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VTM_LOTHSEL</name>
       <description>VTM Low Threshold Detection</description>
       <bitOffset>18</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1_6V</name>
         <description>1.6V</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2_2V</name>
         <description>2.2V</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2_8V</name>
         <description>2.8V</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOCK</name>
       <description>Lock Register. Once locked, the INTSCN register can no longer be modified.  Only a battery disconnect will clear this bit. VBAT powers this register.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>unlocked</name>
         <description>Unlocked.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>locked</name>
         <description>Locked.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SECALM</name>
     <description>Security Alarm Register.</description>
     <addressOffset>0x08</addressOffset>
     <resetValue>0x00000000</resetValue>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>DRS</name>
       <description>Destructive Reset Trigger. Setting this bit will generate a DRS. This bit is self-cleared by hardware.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>KEYWIPE</name>
       <description>Key Wipe Trigger. Set to 1 to initiate a wipe of the AES key register. It does not reset the part, or log a timestamp. AES and DES registers are not affected by this bit. This bit is automatically cleared to 0 after the keys have been wiped.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>complete</name>
         <description>No operation/complete.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>start</name>
         <description>Start operation.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SHIELDF</name>
       <description>Die Shield Flag.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOTEMP</name>
       <description>Low Temperature Detect.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HITEMP</name>
       <description>High Temperature Detect.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATLO</name>
       <description>Battery Undervoltage Detect.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATHI</name>
       <description>Battery Overvoltage Detect.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTF</name>
       <description>External Sensor Flag. This bit is set to 1 when any of the EXTSTAT bits are set.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DFD</name>
       <description>Digital Fault Detector.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>VMAINPF</name>
       <description>VMAIN Power Fail Flag.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT0</name>
       <description>External Sensor 0 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT1</name>
       <description>External Sensor 1 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT2</name>
       <description>External Sensor 2 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT3</name>
       <description>External Sensor 3 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT4</name>
       <description>External Sensor 4 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT5</name>
       <description>External Sensor 5 Detect. The tamper detect is only active when it is enabled. This bits needs to be cleared in software after a tamper event to re-arm the sensor.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN0</name>
       <description>External Sensor 0 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN1</name>
       <description>External Sensor 1 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN2</name>
       <description>External Sensor 2 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>26</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN3</name>
       <description>External Sensor 3 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>27</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN4</name>
       <description>External Sensor 4 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>28</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSWARN5</name>
       <description>External Sensor 5 Warning Ready flag. The tamper detect warning flags are set, regardless of whether the external sensors are enabled.</description>
       <bitOffset>29</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SECDIAG</name>
     <description>Security Diagnostic Register.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <resetValue>0x00000001</resetValue>
     <resetMask>0xFFC0FE02</resetMask>
     <fields>
      <field>
       <name>PORF</name>
       <description>Power-On-Reset Flag. This bit is set once the power supply is conneted.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SHIELDF</name>
       <description>Die Shield Flag.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOTEMP</name>
       <description>Low Temperature Detect.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HITEMP</name>
       <description>High Temperature Detect.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATLO</name>
       <description>Battery Undervoltage Detect.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BATHI</name>
       <description>Battery Overvoltage Detect.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DYNF</name>
       <description>Dynamic Sensor Flag.  This bit is set to 1 when any of the EXTSTAT bits are set.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESK_MDU</name>
       <description>AES Key Transfer. This bit is set to 1 when AES MDU Key has been transferred from the TRNG to the battery backed AES key register. This bit can only be reset by a BOR.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>incomplete</name>
         <description>Key has not been transferred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>complete</name>
         <description>Key has been transferred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESK_NVSRAM</name>
       <description>NVSRAM 256-bit AES Key Cleared. This field is set to 1 by hardware if the NVSRAM AES key is zero. This field resets to 1 on a POR.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>nonzero</name>
         <description>Key is non-zero.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>zero</name>
         <description>Key is zero.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESK_SPIXF</name>
       <description>SPIXF 128-Bit AES Key Cleared. This field is set to 1 by hardware if the SPIXR 128-bit AES key is zero. This field resets to 1 on a POR.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>nonzero</name>
         <description>Key is non-zero.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>zero</name>
         <description>Key is zero.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESK_SPIXR</name>
       <description>SPIXR 128-Bit AES Key Cleared. This field is set to 1 by hardware if the SPIXR 128-bit AES key is zero. This field resets to 1 on a POR.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>nonzero</name>
         <description>Key is non-zero.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>zero</name>
         <description>Key is zero.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT0</name>
       <description>External Sensor 0 Detect.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT1</name>
       <description>External Sensor 1 Detect.</description>
       <bitOffset>17</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT2</name>
       <description>External Sensor 2 Detect.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT3</name>
       <description>External Sensor 3 Detect.</description>
       <bitOffset>19</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT4</name>
       <description>External Sensor 4 Detect.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>EXTSTAT5</name>
       <description>External Sensor 5 Detect.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>DLRTC</name>
     <description>DRS Log RTC Value. This register contains the 32 bit value in the RTC second register when the last DRS event occurred.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-only</access>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>DLRTC</name>
       <description>DRS Log RTC Value. This register contains the 32 bit value in the RTC second register when the last DRS event occured.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEUCFG</name>
     <description>MEU Configuration</description>
     <addressOffset>0x24</addressOffset>
     <resetMask>0x00000000</resetMask>
     <fields>
      <field>
       <name>ENC_REG0</name>
       <description> NVSRAM Encryption Enable Region 0. Setting this field to 1 enables encryption using the MEU of region 0 of the NVSRAM.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG1</name>
       <description> NVSRAM Encryption Enable Region 1. Setting this field to 1 enables encryption using the MEU of region 1 of the NVSRAM.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG2</name>
       <description> NVSRAM Encryption Enable Region 2. Setting this field to 1 enables encryption using the MEU of region 2 of the NVSRAM.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG3</name>
       <description> NVSRAM Encryption Enable Region 3. Setting this field to 1 enables encryption using the MEU of region 3 of the NVSRAM.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG4</name>
       <description> NVSRAM Encryption Enable Region 4. Setting this field to 1 enables encryption using the MEU of region 4 of the NVSRAM.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG5</name>
       <description> NVSRAM Encryption Enable Region 5. Setting this field to 1 enables encryption using the MEU of region 5 of the NVSRAM.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG6</name>
       <description> NVSRAM Encryption Enable Region 6. Setting this field to 1 enables encryption using the MEU of region 6 of the NVSRAM.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ENC_REG7</name>
       <description> NVSRAM Encryption Enable Region 7. Setting this field to 1 enables encryption using the MEU of region 7 of the NVSRAM.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>plaintext</name>
         <description>Plain text.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>encrypted</name>
         <description>Encrypted.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LOCK</name>
       <description>Lock.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SECST</name>
     <description>Security Monitor Status Register.</description>
     <addressOffset>0x34</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>EXTSRS</name>
       <description>External Sensor Control Register Status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>allowed</name>
         <description>Access authorized.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>notAllowed</name>
         <description>Access not authorized.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INTSRS</name>
       <description>Internal Sensor Control Register Status.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>allowed</name>
         <description>Access authorized.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>notAllowed</name>
         <description>Access not authorized.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SECALRS</name>
       <description>Security Alarm Register Status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>allowed</name>
         <description>Access authorized.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>notAllowed</name>
         <description>Access not authorized.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MEUCFG</name>
       <description>MEU Configuration Register Status.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>normal</name>
         <description>Normal Operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>busy</name>
         <description>Busy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SDBE</name>
     <description>Security Monitor Self Destruct Byte.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>DBYTE</name>
       <description>Self Destruct Byte</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SBDEN</name>
       <description>Self-Destruct Byte Enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SMON The Security Monitor block used to monitor system threat conditions.-->
  <peripheral>
   <name>SPI</name>
   <description>SPI peripheral.</description>
   <baseAddress>0x40046000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SPI0</name>
    <value>16</value>
   </interrupt>
   <registers>
    <register>
     <name>DATA32</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>QSPIFIFO</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>2</dim>
     <dimIncrement>2</dimIncrement>
     <name>DATA16[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>16</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>QSPIFIFO</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>1</dimIncrement>
     <name>DATA8[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>QSPIFIFO</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL0</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>EN</name>
       <description>SPI Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MASTER</name>
       <description>Master Mode Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is Slave mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is  Master mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_IO</name>
       <description>Slave Select 0, IO direction, to support Multi-Master mode,Slave Select 0 can be input in Master mode. This bit has no effect in slave mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>output</name>
         <description>Slave select 0 is output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>input</name>
         <description>Slave Select 0 is input, only valid if MMEN=1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>START</name>
       <description>Start Transmit.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>start</name>
         <description>Master Initiates a transaction, this bit is self clearing when transactions are done. If a transaction cimpletes, and the TX FIFO is empty, the Master halts, if a transaction completes, and the TX FIFO is not empty, the Master initiates another transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_CTRL</name>
       <description>Start Select Control. Used in Master mode to control the behavior of the Slave Select signal at the end of a transaction.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DEASSERT</name>
         <description>SPI De-asserts Slave Select at the end of a transaction.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ASSERT</name>
         <description>SPI leaves Slave Select asserted at the end of a transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS</name>
       <description>Slave Select, when in Master mode selects which Slave devices are selected. More than one Slave device can be selected.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0</name>
         <description>SS0 is selected.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1</name>
         <description>SS1 is selected.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2</name>
         <description>SS2 is selected.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3</name>
         <description>SS3 is selected.</description>
         <value>0x8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL1</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_NUM_CHAR</name>
       <description>Nubmer of Characters to transmit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>RX_NUM_CHAR</name>
       <description>Nubmer of Characters to receive.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL2</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CPHA</name>
       <description>Clock Phase.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Rising_Edge</name>
         <description>Data Sampled on clock rising edge. Use when in SPI Mode 0 and Mode 2 </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Falling_Edge</name>
         <description>Data Sampled on clock falling edge. Use when in SPI Mode 1 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CPOL</name>
       <description>Clock Polarity.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Normal</name>
         <description>Normal Clock. Use when in SPI Mode 0 and Mode 1</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Inverted</name>
         <description>Inverted Clock. Use when in SPI Mode 2 and Mode 3</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NUMBITS</name>
       <description>Number of Bits per character.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>16 bits per character.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_WIDTH</name>
       <description>SPI Data width.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Mono</name>
         <description>1 data pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual</name>
         <description>2 data pins.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad</name>
         <description>4 data pins.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>THREE_WIRE</name>
       <description>Three Wire mode. MOSI/MISO pin(s) shared. Only Mono mode suports Four-Wire.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Use four wire mode (Mono only).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Use three wire mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_POL</name>
       <description>Slave Select Polarity, each Slave Select can have unique polarity.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0_high</name>
         <description>SS0 active high.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1_high</name>
         <description>SS1 active high.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2_high</name>
         <description>SS2 active high.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3_high</name>
         <description>SS3 active high.</description>
         <value>0x8</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SS_TIME</name>
     <description>Register for controlling SPI peripheral/Slave Select Timing.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>PRE</name>
       <description>Slave Select Pre delay 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between SS active and first serial clock edge.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>POST</name>
       <description>Slave Select Post delay 2.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between last serial clock edge and SS inactive.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INACT</name>
       <description>Slave Select Inactive delay.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between transactions.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CLK_CFG</name>
     <description>Register for controlling SPI clock rate.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>LO</name>
       <description>Low duty cycle control. In timer mode, reload[7:0].</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HI</name>
       <description>High duty cycle control. In timer mode, reload[15:8].</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCALE</name>
       <description>System Clock scale factor. Scales the AMBA clock by 2^SCALE before generating serial clock.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>Register for controlling DMA.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_FIFO_LEVEL</name>
       <description>Transmit FIFO level that will trigger a DMA request, also level for threshold status. When TX FIFO has fewer than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_EN</name>
       <description>Transmit FIFO enabled for SPI transactions.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Transmit FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Transmit FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CLEAR</name>
       <description>Clear TX FIFO, clear is accomplished by resetting the read and write
            pointers. This should be done when FIFO is not being accessed on the SPI side.
          .</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Transmit FIFO, clears any pending TX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CNT</name>
       <description>Count of entries in TX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_DMA_EN</name>
       <description>TX DMA Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>TX DMA requests are disabled, andy pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_LEVEL</name>
       <description>Receive FIFO level that will trigger a DMA request, also level for threshold status. When RX FIFO has more than this many bytes, the associated events and conditions are triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_EN</name>
       <description>Receive FIFO enabled for SPI transactions.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>Receive FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Receive FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CLEAR</name>
       <description>Clear RX FIFO, clear is accomplished by resetting the read and write pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Receive FIFO, clears any pending RX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CNT</name>
       <description>Count of entries in RX FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_DMA_EN</name>
       <description>RX DMA Enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX DMA requests are disabled, any pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Register for reading and clearing interrupt flags. All bits are write 1 to clear.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>M_DONE</name>
       <description>Master Done, set when SPI Master has completed any transactions.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OVR</name>
       <description>Transmit FIFO Overrun, set when the AMBA side attempts to write data to a full transmit FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UND</name>
       <description>Transmit FIFO Underrun, set when the SPI side attempts to read data from an empty transmit FIFO.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>Receive FIFO Overrun, set when the SPI side attempts to write to a full receive FIFO.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UND</name>
       <description>Receive FIFO Underrun, set when the AMBA side attempts to read data from an empty receive FIFO.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Register for enabling interrupts.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>TX FIFO Threshold interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX FIFO Empty interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>RX FIFO Threshold Crossed interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>M_DONE</name>
       <description>Master Done interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OVR</name>
       <description>Transmit FIFO Overrun interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UND</name>
       <description>Transmit FIFO Underrun interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>Receive FIFO Overrun interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UND</name>
       <description>Receive FIFO Underrun interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_FL</name>
     <description>Register for wake up flags. All bits in this register are write 1 to clear.</description>
     <addressOffset>0x28</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>Wake on TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Wake on TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>Wake on RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>Register for wake up enable.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>Wake on TX FIFO Threshold Crossed Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Wake on TX FIFO Empty Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>Wake on RX FIFO Threshold Crossed Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>SPI Status register.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SPI active status. In Master mode, set when transaction starts, cleared when last bit of last character is acted upon and Slave Select de-assertion would occur. In Slave mode, set when Slave Select is asserted, cleared when Slave Select is de-asserted. Not used in Timer mode. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>SPI not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <description>SPI active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SPI SPI peripheral.-->
  <peripheral derivedFrom="SPI">
   <name>SPI1</name>
   <description>SPI peripheral. 1</description>
   <baseAddress>0x40047000</baseAddress>
   <interrupt>
    <name>SPI1</name>
    <description>SPI1 IRQ</description>
    <value>17</value>
   </interrupt>
  </peripheral>
<!--SPI1 SPI peripheral. 1-->
  <peripheral derivedFrom="SPI">
   <name>SPI2</name>
   <description>SPI peripheral. 2</description>
   <baseAddress>0x40048000</baseAddress>
   <interrupt>
    <name>SPI2</name>
    <description>SPI2 IRQ</description>
    <value>18</value>
   </interrupt>
  </peripheral>
<!--SPI2 SPI peripheral. 2-->
  <peripheral>
   <name>SPIXR</name>
   <description>SPIXR peripheral.</description>
   <baseAddress>0x4003A000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>DATA32</name>
     <description>Register for reading and writing the FIFO.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>2</dim>
     <dimIncrement>2</dimIncrement>
     <name>DATA16[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>16</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <dim>4</dim>
     <dimIncrement>1</dimIncrement>
     <name>DATA8[%s]</name>
     <description>Register for reading and writing the FIFO.</description>
     <alternateRegister>DATA32</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Read to pull from RX FIFO, write to put into TX FIFO.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL1</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SPIEN</name>
       <description>SPI Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MMEN</name>
       <description>Master Mode Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>SPI is Slave mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>SPI is  Master mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSIO</name>
       <description>Slave Select 0, IO direction, to support Multi-Master mode,
						Slave Select 0 can be input in Master mode. This bit has no
						effect in slave mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>output</name>
         <description>Slave select 0 is output.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>input</name>
         <description>Slave Select 0 is input, only valid if MMEN=1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_START</name>
       <description>Start Transmit.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>start</name>
         <description>Master Initiates a transaction, this bit is
								self clearing when transactions are done. If
								a transaction completes, and the TX FIFO
								is empty, the Master halts, if a transaction
								completes, and the TX FIFO is not empty,
								the Master initiates another transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_CTRL</name>
       <description>Slave Select Control.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>deassert</name>
         <description>SPI de-asserts Slave Select at the end of a transaction.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>assert</name>
         <description>SPI leaves Slave Select asserted at the end of a transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS</name>
       <description>Slave Select, when in Master mode selects which Slave devices are
						selected. More than one Slave device can be selected.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0</name>
         <description>SS0 is selected.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1</name>
         <description>SS1 is selected.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2</name>
         <description>SS2 is selected.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3</name>
         <description>SS3 is selected.</description>
         <value>0x8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS4</name>
         <description>SS4 is selected.</description>
         <value>0x10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS5</name>
         <description>SS5 is selected.</description>
         <value>0x20</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS6</name>
         <description>SS6 is selected.</description>
         <value>0x40</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS7</name>
         <description>SS7 is selected.</description>
         <value>0x80</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL2</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_NUM_CHAR</name>
       <description>Nubmer of Characters to transmit.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>RX_NUM_CHAR</name>
       <description>Nubmer of Characters to receive.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTRL3</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>CPHA</name>
       <description>Clock Phase.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CPOL</name>
       <description>Clock Polarity.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SCLK_FB_INV</name>
       <description>Invert SCLK Feedback in Master Mode.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>NON_INV</name>
         <description>SCLK is not inverted to Line Receiver.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>INV</name>
         <description>SCLK is inverted to Line Receiver.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NUMBITS</name>
       <description>Number of Bits per character.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>16 bits per character.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_WIDTH</name>
       <description>SPI Data width.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Mono</name>
         <description>1 data pin.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual</name>
         <description>2 data pins.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad</name>
         <description>4 data pins.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>THREE_WIRE</name>
       <description>Three Wire mode. MOSI/MISO pin(s) shared. Only Mono mode suports Four-Wire.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Use four wire mode (Mono only).</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Use three wire mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSPOL</name>
       <description>Slave Select Polarity, each Slave Select can have unique polarity.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SS0_high</name>
         <description>SS0 active high.</description>
         <value>0x1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS1_high</name>
         <description>SS1 active high.</description>
         <value>0x2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS2_high</name>
         <description>SS2 active high.</description>
         <value>0x4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS3_high</name>
         <description>SS3 active high.</description>
         <value>0x8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS4_high</name>
         <description>SS4 active high.</description>
         <value>0x10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS5_high</name>
         <description>SS5 active high.</description>
         <value>0x20</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS6_high</name>
         <description>SS6 active high.</description>
         <value>0x40</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SS7_high</name>
         <description>SS7 active high.</description>
         <value>0x80</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SS_TIME</name>
     <description>Register for controlling SPI peripheral.</description>
     <addressOffset>0x10</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>SSACT1</name>
       <description>Slave Select Action delay 1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between SS active and first serial clock edge.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSACT2</name>
       <description>Slave Select Action delay 2.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between last serial clock edge and SS inactive.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSINACT</name>
       <description>Slave Select Inactive delay.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>256</name>
         <description>256 system clocks between transactions.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>BRG_CTRL</name>
     <description>Register for controlling SPI clock rate.</description>
     <addressOffset>0x14</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>LOW</name>
       <description>Low duty cycle control. In timer mode, reload[7:0].</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HI</name>
       <description>High duty cycle control. In timer mode, reload[15:8].</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Dis</name>
         <description>Duty cycle control of serial clock generation is disabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCALE</name>
       <description>System Clock scale factor. Scales the AMBA clock by 2^SCALE before generating serial clock.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>Register for controlling DMA.</description>
     <addressOffset>0x1C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_FIFO_LEVEL</name>
       <description>Transmit FIFO level that will trigger a DMA request, also level for
						threshold status. When TX FIFO has fewer than this many bytes, the
						associated events and conditions are triggered.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_EN</name>
       <description>Transmit FIFO enabled for SPI transactions.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Transmit FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Transmit FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CLEAR</name>
       <description>Clear TX FIFO, clear is accomplished by resetting the read and write
						pointers. This should be done when FIFO is not being accessed on the SPI side.
					</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Transmit FIFO, clears any pending TX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_CNT</name>
       <description>Count of entries in TX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>TX_DMA_EN</name>
       <description>TX DMA Enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>TX DMA requests are disabled, andy pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>TX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_LEVEL</name>
       <description>Receive FIFO level that will trigger a DMA request, also level for
						threshold status. When RX FIFO has more than this many bytes, the
						associated events and conditions are triggered.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_EN</name>
       <description>Receive FIFO enabled for SPI transactions.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>Receive FIFO is not enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Receive FIFO is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CLEAR</name>
       <description>Clear RX FIFO, clear is accomplished by resetting the read and write
						pointers. This should be done when FIFO is not being accessed on the SPI side.</description>
       <bitOffset>23</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLEAR</name>
         <description>Clear the Receive FIFIO, clears any pending RX FIFO status.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_CNT</name>
       <description>Count of entries in RX FIFO.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RX_DMA_EN</name>
       <description>RX DMA Enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>RX DMA requests are disabled, any pending DMA requests are cleared.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>RX DMA requests are enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Register for reading and clearing interrupt flags. All bits are write 1 to clear.</description>
     <addressOffset>0x20</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>M_DONE</name>
       <description>Master Done, set when SPI Master has completed any transactions.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OVR</name>
       <description>Transmit FIFO Overrun, set when the AMBA side attempts to write data
						to a full transmit FIFO.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UND</name>
       <description>Transmit FIFO Underrun, set when the SPI side attempts to read data
						from an empty transmit FIFO.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>Receive FIFO Overrun, set when the SPI side attempts to write to a full receive FIFO.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UND</name>
       <description>Receive FIFO Underrun, set when the AMBA side attempts to read data from an empty receive FIFO.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Register for enabling interrupts.</description>
     <addressOffset>0x24</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>TX FIFO Threshold interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>TX FIFO Empty interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>RX FIFO Threshold Crossed interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>RX FIFO FULL interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSA</name>
       <description>Slave Select Asserted interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSD</name>
       <description>Slave Select Deasserted interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FAULT</name>
       <description>Multi-Master Mode Fault interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ABORT</name>
       <description>Slave Abort Detected interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>M_DONE</name>
       <description>Master Done interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_OVR</name>
       <description>Transmit FIFO Overrun interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_UND</name>
       <description>Transmit FIFO Underrun interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_OVR</name>
       <description>Receive FIFO Overrun interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_UND</name>
       <description>Receive FIFO Underrun interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Interrupt is disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Interrupt is enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_FL</name>
     <description>Register for wake up flags. All bits in this register are write 1 to clear.</description>
     <addressOffset>0x28</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>Wake on TX FIFO Threshold Crossed.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Wake on TX FIFO Empty.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>Wake on RX FIFO Threshold Crossed.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>clear</name>
         <description>Flag is set when value read is 1. Write 1 to clear this flag.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>WAKE_EN</name>
     <description>Register for wake up enable.</description>
     <addressOffset>0x2C</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>TX_THRESH</name>
       <description>Wake on TX FIFO Threshold Crossed Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Wake on TX FIFO Empty Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_THRESH</name>
       <description>Wake on RX FIFO Threshold Crossed Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Wake on RX FIFO Full Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Wakeup source disabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Wakeup source enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>STAT</name>
     <description>SPI Status register.</description>
     <addressOffset>0x30</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>BUSY</name>
       <description>SPI active status. In Master mode, set when transaction starts,
						cleared when last bit of last character is acted upon and Slave Select
						de-assertion would occur. In Slave mode, set when Slave Select is
						asserted, cleared when Slave Select is de-asserted. Not used in Timer mode.
					</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>not</name>
         <description>SPI not active.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>active</name>
         <description>SPI active.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>XMEM_CTRL</name>
     <description>Register to control external memory.</description>
     <addressOffset>0x34</addressOffset>
     <access>read-write</access>
     <fields>
      <field>
       <name>RD_CMD</name>
       <description>Read command.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>WR_CMD</name>
       <description>Write command.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>DUMMY_CLK</name>
       <description>Dummy clocks.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>XMEM_EN</name>
       <description>XMEM enable.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SPIXR SPIXR peripheral.-->
  <peripheral>
   <name>SPIXFC</name>
   <description>SPI XiP Flash Configuration Controller</description>
   <baseAddress>0x40027000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>SPIXFC</name>
    <description>SPIXFC IRQ</description>
    <value>38</value>
   </interrupt>
   <registers>
    <register>
     <name>CFG</name>
     <description>Configuration Register.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>SSEL</name>
       <description>Slaves Select.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Slave_0</name>
         <description>Slave 0 is selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Slave_1</name>
         <description>Slave 1 is selected.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE</name>
       <description>Defines SPI Mode, Only valid values are 0 and 3.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SPIX_Mode_0</name>
         <description>SPIX Mode 0. CLK Polarity = 0, CLK Phase = 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SPIX_Mode_3</name>
         <description>SPIX Mode 3. CLK Polarity = 1, CLK Phase = 1.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PAGE_SIZE</name>
       <description>Page Size.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>4_bytes</name>
         <description>4 bytes.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8_bytes</name>
         <description>8 bytes.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16_bytes</name>
         <description>16 bytes.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>32_bytes</name>
         <description>32 bytes.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>HI_CLK</name>
       <description>SCLK High Clocks. Number of system clocks that SCLK will be high when SCLK pulses are generated. 0 Correspond to 16 system clocks and, all other values defines the number of system clock taht SCLK will be held high.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>16_SCLK</name>
         <description>16 system clocks.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>LO_CLK</name>
       <description>SCLK low Clocks. Number of system clocks that SCLK will be low when SCLK pulses are generated. 0 correspond to 16 system clocks and, all other values defines the number of system clock taht SCLK will be held low.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>16_SCLK</name>
         <description>16 system clocks.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSACT</name>
       <description>Slaves Select Activate Timing.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0_CLKS</name>
         <description>0 sytem clocks.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>2_CLKS</name>
         <description>2 sytem clocks.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4_CLKS</name>
         <description>4 sytem clocks.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8_CLKS</name>
         <description>8 sytem clocks.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSIACT</name>
       <description>Slaves Select Inactive Timing.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>4_CLKS</name>
         <description>4 sytem clocks.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6_CLKS</name>
         <description>6 sytem clocks.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8_CLKS</name>
         <description>8 sytem clocks.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>12_CLKS</name>
         <description>12 sytem clocks.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>IOSMPL</name>
       <description>Sample Delay</description>
       <bitOffset>20</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SS_POL</name>
     <description>SPIX Controller Slave Select Polarity Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>SSPOL_0</name>
       <description>Slave Select Polarity.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>lo</name>
         <description>Active Low.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>hi</name>
         <description>Active High.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>GEN_CTRL</name>
     <description>SPIX Controller General Controller Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>ENABLE</name>
       <description>SPI Master enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable SPI Master, putting a reset state.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable SPI Master for processing transactions.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_EN</name>
       <description>Transaction FIFO Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis_txfifo</name>
         <description>Disable Transaction FIFO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en_txfifo</name>
         <description>Enable Transaction FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_EN</name>
       <description>Result FIFO Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis_rxfifo</name>
         <description>Disable Result FIFO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en_rxfifo</name>
         <description>Enable Result FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BBMODE</name>
       <description>Bit-Bang Mode.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Bit-Bang Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Bit-Bang Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSDR</name>
       <description>This bits reflects the state of the currently selected slave select.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>output0</name>
         <description>Selected Slave select output = 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>output1</name>
         <description>Selected Slave select output = 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCLK_DR</name>
       <description>SSCLK Drive and State.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SCLK_0</name>
         <description>SCLK is 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SCLK_1</name>
         <description>SCLK is 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDIO_DATA_IN</name>
       <description>SDIO Input Data Value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SDIO0</name>
         <description>SDIO[0]</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO1</name>
         <description>SDIO[1]</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO2</name>
         <description>SDIO[2]</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO3</name>
         <description>SDIO[3]</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BB_DATA</name>
       <description>No description available.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SDIO0</name>
         <description>SDIO[0]</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO1</name>
         <description>SDIO[1]</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO2</name>
         <description>SDIO[2]</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO3</name>
         <description>SDIO[3]</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BB_DATA_OUT_EN</name>
       <description>Bit Bang SDIO Output Enable.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SDIO0</name>
         <description>SDIO[0]</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO1</name>
         <description>SDIO[1]</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO2</name>
         <description>SDIO[2]</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SDIO3</name>
         <description>SDIO[3]</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SIMPLE</name>
       <description>Simple Mode Enable.</description>
       <bitOffset>20</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SIMPLE_RX</name>
       <description>Simple Receive Enable.</description>
       <bitOffset>21</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SIMPLE_SS</name>
       <description>Simple Mode Slave Select.</description>
       <bitOffset>22</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SCLK_FB</name>
       <description>Enable SCLK Feedback Mode.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SCLK_FB_INVERT</name>
       <description>SCK Invert.</description>
       <bitOffset>25</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO_CTRL</name>
     <description>SPIX Controller FIFO Control and Status Register.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>TX_FIFO_AE_LVL</name>
       <description>Transaction FIFO Almost Empty Level.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_CNT</name>
       <description>Transaction FIFO Used.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_AF_LVL</name>
       <description>Results FIFO Almost Full Level.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_CNT</name>
       <description>Result FIFO Used.</description>
       <bitOffset>24</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>SP_CTRL</name>
     <description>SPIX Controller Special Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>SAMPL</name>
       <description>Setting this bit to a 1 enables the ability to drive SDIO outputs prior to the assertion of Slave Select. This bit must
                                                                         only be set when the SPIXF bus is idle and the transaction FIFO is empty. This bit is automatically cleared by hardware after the
                                                                         next slave select assertion.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>SDIO_OUT</name>
       <description>SDIO Output Value Sample Mode</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>SDIO_OUT_EN</name>
       <description>SDIO Output Enable Sample Mode</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>SCLKINH3</name>
       <description>SCLK Inhibit Mode3. In SPI Mode 3, some SPI flash read timing diagrams show the last SCLK going low prior to de-assertion. The default is to support this additional falling edge of clock. When this bit is set and the device is in SPI Mode 3, the SPI clock is held high while Slave Select is de-asserted. This is to support some SPI flash write timing diagrams.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>EN</name>
         <description>Allow trailing SCLK low pulse prior to Slave Select de-assertion.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>DIS</name>
         <description>Inhibit trailing SCLK low pulse prior to Slave Select de-assertion.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>SPIX Controller Interrupt Status Register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>TX_STALLED</name>
       <description>Transaction Stalled Interrupt Flag.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLR</name>
         <description>Normal FIFO Transaction.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SET</name>
         <description>Stalled FIFO Transaction.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_STALLED</name>
       <description>Results Stalled Interrupt Flag.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLR</name>
         <description>Normal FIFO Operation.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SET</name>
         <description>Stalled FIFO.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_READY</name>
       <description>Transaction Ready Interrupt Status.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLR</name>
         <description>FIFO Transaction not ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SET</name>
         <description>FIFO Transaction ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_DONE</name>
       <description>Results Done Interrupt Status.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLR</name>
         <description>Results FIFO ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SET</name>
         <description>Results FIFO Not ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_AE</name>
       <description>Transaction FIFO Almost Empty Flag.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLR</name>
         <description>Transaction FIFO not Almost Empty.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SET</name>
         <description>Transaction FIFO Almost Empty.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_AF</name>
       <description>Results FIFO Almost Full Flag.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>CLR</name>
         <description>Results FIFO level below the Almost Full level.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SET</name>
         <description>Results FIFO level at Almost Full level.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>SPIX Controller Interrupt Enable Register.</description>
     <addressOffset>0x18</addressOffset>
     <fields>
      <field>
       <name>TX_STALLED</name>
       <description>Transaction Stalled Interrupt Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Disable Transaction Stalled Interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Enable Transaction Stalled Interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_STALLED</name>
       <description>Results Stalled Interrupt Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Disable Results Stalled Interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Enable Results Stalled Interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_READY</name>
       <description>Transaction Ready Interrupt Enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Disable FIFO Transaction Ready Interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Enable FIFO Transaction Ready Interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_DONE</name>
       <description>Results Done Interrupt Enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Disable Results Done Interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Enable Results Done Interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FIFO_AE</name>
       <description>Transaction FIFO Almost Empty Interrupt Enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Disable Transaction FIFO Almost Empty Interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Enable Transaction FIFO Almost Empty Interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_FIFO_AF</name>
       <description>Results FIFO Almost Full Interrupt Enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Disable Results FIFO Almost Full Interrupt.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Enable Results FIFO Almost Full Interrupt.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SPIXFC SPI XiP Flash Configuration Controller-->
  <peripheral>
   <name>SPIXFC_FIFO</name>
   <description>SPI XiP Master Controller FIFO.</description>
   <baseAddress>0x400BC000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>TX_8</name>
     <description>SPI TX FIFO 8-Bit Write</description>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <dataType>uint8_t</dataType>
    </register>
    <register>
     <name>TX_16</name>
     <description>SPI TX FIFO 16-Bit Write</description>
     <alternateRegister>TX_8</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>16</size>
     <dataType>uint16_t</dataType>
    </register>
    <register>
     <name>TX_32</name>
     <description>SPI TX FIFO 32-Bit Write</description>
     <alternateRegister>TX_8</alternateRegister>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <dataType>uint32_t</dataType>
    </register>
    <register>
     <name>RX_8</name>
     <description>SPI RX FIFO 8-Bit Access</description>
     <addressOffset>0x04</addressOffset>
     <size>8</size>
     <dataType>uint8_t</dataType>
    </register>
    <register>
     <name>RX_16</name>
     <description>SPI RX FIFO 16-Bit Access</description>
     <alternateRegister>RX_8</alternateRegister>
     <addressOffset>0x04</addressOffset>
     <size>16</size>
     <dataType>uint16_t</dataType>
    </register>
    <register>
     <name>RX_32</name>
     <description>SPI RX FIFO 32-Bit Access</description>
     <alternateRegister>RX_8</alternateRegister>
     <addressOffset>0x04</addressOffset>
     <size>32</size>
     <dataType>uint32_t</dataType>
    </register>
   </registers>
  </peripheral>
<!--SPIXFC_FIFO SPI XiP Master Controller FIFO.-->
  <peripheral>
   <name>SPIXFM</name>
   <description>SPIXF Master</description>
   <baseAddress>0x40026000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CFG</name>
     <description>SPIX Configuration Register.</description>
     <addressOffset>0x00</addressOffset>
     <fields>
      <field>
       <name>MODE</name>
       <description>Defines SPI Mode, Only valid values are 0 and 3.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SCLK_HI_SAMPLE_RISING</name>
         <description>Description not available.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SCLK_LO_SAMPLE_FAILLING</name>
         <description>Description not available.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSPOL</name>
       <description>Slave Select Polarity.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>ACTIVE_HIGH</name>
         <description>Slave Select is Active High.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ACTIVE_LOW</name>
         <description>Slave Select is Active Low.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSEL</name>
       <description>Slave Select. Only valid value is zero.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>3</bitWidth>
      </field>
      <field>
       <name>LO_CLK</name>
       <description>Number of system clocks that SCLK will be low when SCLK pulses are generated.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>HI_CLK</name>
       <description>Number of system clocks that SCLK will be high when SCLK pulses are generated.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>SSACT</name>
       <description>Slave Select Active Timing.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>off</name>
         <description>0 system clocks.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>for_2_mod_clk</name>
         <description>2 System clocks.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>for_4_mod_clk</name>
         <description>4 System clocks.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>for_8_mod_clk</name>
         <description>8 System clocks.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SSIACT</name>
       <description>Slave Select Inactive Timing.</description>
       <bitOffset>18</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>for_1_mod_clk</name>
         <description>1 system clocks.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>for_3_mod_clk</name>
         <description>3 System clocks.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>for_5_mod_clk</name>
         <description>5 System clocks.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>for_9_mod_clk</name>
         <description>9 System clocks.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>FETCH_CTRL</name>
     <description>SPIX Fetch Control Register.</description>
     <addressOffset>0x04</addressOffset>
     <fields>
      <field>
       <name>CMDVAL</name>
       <description>Command Value sent to target to initiate fetching from SPI flash.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>CMD_WIDTH</name>
       <description>Command Width. Number of data I/O used to send commands.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Single</name>
         <description>Single SDIO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual_IO</name>
         <description>Dual SDIO.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad_IO</name>
         <description>Quad SDIO.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Invalid</name>
         <description>Invalid.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ADDR_WIDTH</name>
       <description>Address Width. Number of data I/O used to send address, and mode/dummy clocks.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Single</name>
         <description>Single SDIO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual_IO</name>
         <description>Dual SDIO.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad_IO</name>
         <description>Quad SDIO.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Invalid</name>
         <description>Invalid.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DATA_WIDTH</name>
       <description>Data Width. Number of data I/O used to receive data.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Single</name>
         <description>Single SDIO.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Dual_IO</name>
         <description>Dual SDIO.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Quad_IO</name>
         <description>Quad SDIO.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Invalid</name>
         <description>Invalid.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FOUR_BYTE_ADDR</name>
       <description>Four Byte Address Mode. Enables 4-byte Flash Address Mode.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>3</name>
         <description>3 Byte Address Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>4</name>
         <description>4 Byte Address Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>MODE_CTRL</name>
     <description>SPIX Mode Control Register.</description>
     <addressOffset>0x08</addressOffset>
     <fields>
      <field>
       <name>MDCLK</name>
       <description>Mode Clocks. Number of SPI clocks needed during mode/dummy phase of fetch.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>NO_CMD</name>
       <description>No Command Mode.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>always</name>
         <description>Send read command every time SPI transaction is initiated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>once</name>
         <description>Send read command only once. NO read command in subsequent SPI transactions.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE_SEND</name>
       <description>Mode Send.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MODE_DATA</name>
     <description>SPIX Mode Data Register.</description>
     <addressOffset>0x0C</addressOffset>
     <fields>
      <field>
       <name>DATA</name>
       <description>Mode Data. Specifies the data to send with the Dummy/Mode clocks.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>OUT_EN</name>
       <description>Mode Output Enable. Output enable state for each corresponding data bit in MD_DATA. 0: output enable off, I/O is tristate and 1: Output enable on, I/O is driving MD_DATA.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FB_CTRL</name>
     <description>SPIX Feedback Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>FB_EN</name>
       <description>Enable SCLK feedback mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable SCLK feedback mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable SCLK feedback mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INVERT_EN</name>
       <description>Invert SCLK in feedback mode.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Invert SCLK feedback mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Invert SCLK feedback mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>IO_CTRL</name>
     <description>SPIX IO Control Register.</description>
     <addressOffset>0x1C</addressOffset>
     <fields>
      <field>
       <name>SCLK_DS</name>
       <description>SCLK drive Strength. This bit controls the drive strength on the SCLK pin.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Low</name>
         <description>Low drive strength.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>High</name>
         <description>High drive strength.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SS_DS</name>
       <description>Slave Select Drive Strength. This bit controls the drive strength on the dedicated slave select pin.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Low</name>
         <description>Low drive strength.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>High</name>
         <description>High drive strength.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>SDIO_DS</name>
       <description>SDIO Drive Strength. This bit controls the drive strength of all SDIO pins.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Low</name>
         <description>Low drive strength.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>High</name>
         <description>High drive strength.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PU_PD_CTRL</name>
       <description>IO Pullup/Pulldown Control. These bits control the pullups and pulldowns associated with all SPI XiP SDIO pins.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>tri_state</name>
         <description>Tristate.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pull_Up</name>
         <description>Pull-Up.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Pull_down</name>
         <description>Pull-Down.</description>
         <value>2</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>SEC_CTRL</name>
     <description>SPIX Memory Security Control Register.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>DEC_EN</name>
       <description>Decryption Enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable decryption of SPIX data.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable decryption of SPIX data.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AUTH_DISABLE</name>
       <description>Integrity Enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Integrity checking enabled.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Integrity checking disabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>BUS_IDLE</name>
     <description>Bus Idle</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>BUSIDLE</name>
       <description>A 16-bit timer will be triggered for each external access. The timer will be
                                         restarted if another access is performed before the timer expires. When the
                                             timer expires, slave select will be deactivated.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>AUTHOFFSET</name>
     <description>Auth Offset</description>
     <addressOffset>0x28</addressOffset>
    </register>
   </registers>
  </peripheral>
<!--SPIXFM SPIXF Master-->
  <peripheral>
   <name>SRCC</name>
   <description>SPIX Cache Controller Registers.</description>
   <baseAddress>0x40033000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>CACHE_ID</name>
     <description>Cache ID Register.</description>
     <addressOffset>0x0000</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RELNUM</name>
       <description>Release Number. Identifies the RTL release version.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>PARTNUM</name>
       <description>Part Number. This field reflects the value of C_ID_PART_NUMBER configuration parameter.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>4</bitWidth>
      </field>
      <field>
       <name>CCHID</name>
       <description>Cache ID. This field reflects the value of the C_ID_CACHEID configuration parameter.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MEMCFG</name>
     <description>Memory Configuration Register.</description>
     <addressOffset>0x0004</addressOffset>
     <access>read-only</access>
     <resetValue>0x00080008</resetValue>
     <fields>
      <field>
       <name>CCHSZ</name>
       <description>Cache Size. Indicates total size in Kbytes of cache.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
      <field>
       <name>MEMSZ</name>
       <description>Main Memory Size. Indicates the total size, in units of 128 Kbytes, of code memory accessible to the cache controller.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CACHE_CTRL</name>
     <description>Cache Control and Status Register.</description>
     <addressOffset>0x0100</addressOffset>
     <fields>
      <field>
       <name>CACHE_EN</name>
       <description>Cache Enable. Controls whether the cache is bypassed or is in use. Changing the state of this bit will cause the instruction cache to be flushed and its contents invalidated.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Cache Bypassed. Instruction data is stored in the line fill buffer but is not written to main cache memory array.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Cache Enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WRITE_ALLOC_EN</name>
       <description>Write Allocate Enable. This bit only writable while the cache is disabled.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Write-no-allocate.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Write-allocate enabled.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CWFST_DIS</name>
       <description>Critical word first and streaming disable. This bit only writeable while the cache is disabled.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Critical word first and streaming disabled.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Critical word first and streaming enabled.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CACHE_RDY</name>
       <description>Cache Ready flag. Cleared by hardware when at any time the cache as a whole is invalidated (including a system reset). When this bit is 0, the cache is effectively in bypass mode (instruction fetches will come from main memory or from the line fill buffer). Set by hardware when the invalidate operation is complete and the cache is ready.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>notReady</name>
         <description>Not Ready.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ready</name>
         <description>Ready.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>INVALIDATE</name>
     <description>Invalidate All Cache Contents. Any time this register location is written (regardless of the data value), the cache controller immediately begins invalidating the entire contents of the cache memory. The cache will be in bypass mode until the invalidate operation is complete. System software can examine the Cache Ready bit (CACHE_CTRL.CACHE_RDY) to determine when the invalidate operation is complete. Note that it is not necessary to disable the cache controller prior to beginning this operation. Reads from this register always return 0.</description>
     <addressOffset>0x0700</addressOffset>
     <fields>
      <field>
       <name>IA</name>
       <description>Invalidate all cache contents.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--SRCC SPIX Cache Controller Registers.-->
  <peripheral>
   <name>TMR0</name>
   <description>32-bit reloadable timer that can be used for timing and event counting.</description>
   <groupName>Timers</groupName>
   <baseAddress>0x40010000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TMR0</name>
    <description>TMR0 IRQ</description>
    <value>5</value>
   </interrupt>
   <registers>
    <register>
     <name>CNT</name>
     <description>Count.  This register stores the current timer count.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000001</resetValue>
    </register>
    <register>
     <name>CMP</name>
     <description>Compare.  This register stores the compare value, which is used to set the maximum count value to initiate a reload of the timer to 0x0001.</description>
     <addressOffset>0x04</addressOffset>
     <resetValue>0x0000FFFF</resetValue>
    </register>
    <register>
     <name>PWM</name>
     <description>PWM.  This register stores the value that is compared to the current timer count.</description>
     <addressOffset>0x08</addressOffset>
    </register>
    <register>
     <name>INTR</name>
     <description>Clear Interrupt. Writing a value (0 or 1) to a bit in this register clears the associated interrupt.</description>
     <addressOffset>0x0C</addressOffset>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>IRQ</name>
       <description>Clear Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CN</name>
     <description>Timer Control Register.</description>
     <addressOffset>0x10</addressOffset>
     <fields>
      <field>
       <name>TMODE</name>
       <description>Timer Mode.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>oneShot</name>
         <description>One Shot Mode.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>continuous</name>
         <description>Continuous Mode.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>counter</name>
         <description>Counter Mode.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pwm</name>
         <description>PWM Mode.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>capture</name>
         <description>Capture Mode.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>compare</name>
         <description>Compare Mode.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>gated</name>
         <description>Gated Mode.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>captureCompare</name>
         <description>Capture/Compare Mode.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES</name>
       <description>Prescaler.  Set the Timer's prescaler value. The prescaler divides the PCLK input to the timer and sets the Timer's Count Clock, F_CNT_CLK = PCLK (HZ) /prescaler. The Timer's prescaler setting is a 4-bit value with pres3:pres[2:0].</description>
       <bitOffset>3</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>div1</name>
         <description>Divide by 1.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div2</name>
         <description>Divide by 2.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div4</name>
         <description>Divide by 4.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div8</name>
         <description>Divide by 8.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div16</name>
         <description>Divide by 16.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div32</name>
         <description>Divide by 32.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div64</name>
         <description>Divide by 64.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>div128</name>
         <description>Divide by 128.</description>
         <value>7</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TPOL</name>
       <description>Timer input/output polarity bit.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>activeHi</name>
         <description>Active High.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>activeLo</name>
         <description>Active Low.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TEN</name>
       <description>Timer Enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PRES3</name>
       <description>MSB of prescaler value.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PWMSYNC</name>
       <description>Timer PWM Synchronization Mode Enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOLHPOL</name>
       <description>Timer PWM output 0A polarity bit.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NOLLPOL</name>
       <description>Timer PWM output 0A' polarity bit.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PWMCKBD</name>
       <description>Timer PWM output 0A Mode Disable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>NOLCMP</name>
     <description>Timer Non-Overlapping Compare Register.</description>
     <addressOffset>0x14</addressOffset>
     <fields>
      <field>
       <name>NOLLCMP</name>
       <description>Non-overlapping Low Compare.  The 8-bit timer count value of non-overlapping time between falling edge of PWM output 0A and next rising edge of PWM output 0A'.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
      <field>
       <name>NOLHCMP</name>
       <description>Non-overlapping High Compare.  The 8-bit timer count value of non-overlapping time between falling edge of PWM output 0A' and next rising edge of PWM output 0A.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--TMR0 32-bit reloadable timer that can be used for timing and event counting.-->
  <peripheral derivedFrom="TMR0">
   <name>TMR1</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 1</description>
   <baseAddress>0x40011000</baseAddress>
   <interrupt>
    <name>TMR1</name>
    <description>TMR1 IRQ</description>
    <value>6</value>
   </interrupt>
  </peripheral>
<!--TMR1 32-bit reloadable timer that can be used for timing and event counting. 1-->
  <peripheral derivedFrom="TMR0">
   <name>TMR2</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 2</description>
   <baseAddress>0x40012000</baseAddress>
   <interrupt>
    <name>TMR2</name>
    <description>TMR2 IRQ</description>
    <value>7</value>
   </interrupt>
  </peripheral>
<!--TMR2 32-bit reloadable timer that can be used for timing and event counting. 2-->
  <peripheral derivedFrom="TMR0">
   <name>TMR3</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 3</description>
   <baseAddress>0x40013000</baseAddress>
   <interrupt>
    <name>TMR3</name>
    <description>TMR3 IRQ</description>
    <value>8</value>
   </interrupt>
  </peripheral>
<!--TMR3 32-bit reloadable timer that can be used for timing and event counting. 3-->
  <peripheral derivedFrom="TMR0">
   <name>TMR4</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 4</description>
   <baseAddress>0x40014000</baseAddress>
   <interrupt>
    <name>TMR4</name>
    <description>TMR4 IRQ</description>
    <value>9</value>
   </interrupt>
  </peripheral>
<!--TMR4 32-bit reloadable timer that can be used for timing and event counting. 4-->
  <peripheral derivedFrom="TMR0">
   <name>TMR5</name>
   <description>32-bit reloadable timer that can be used for timing and event counting. 5</description>
   <baseAddress>0x40015000</baseAddress>
   <interrupt>
    <name>TMR5</name>
    <description>TMR5 IRQ</description>
    <value>10</value>
   </interrupt>
  </peripheral>
<!--TMR5 32-bit reloadable timer that can be used for timing and event counting. 5-->
  <peripheral>
   <name>TRIMSIR</name>
   <description>Trim System Initilazation Registers</description>
   <baseAddress>0x40005400</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x400</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>rsv0</name>
     <description>RFU</description>
     <addressOffset>0x00</addressOffset>
    </register>
    <register>
     <name>BB_SIR2</name>
     <description>System Init. Configuration Register 2.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
    </register>
    <register>
     <name>BB_SIR3</name>
     <description>System Init. Configuration Register 3.</description>
     <addressOffset>0x0C</addressOffset>
     <access>read-only</access>
    </register>
   </registers>
  </peripheral>
<!--TRIMSIR Trim System Initilazation Registers-->
  <peripheral>
   <name>TRNG</name>
   <description>Random Number Generator.</description>
   <baseAddress>0x4004D000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>TRNG</name>
    <description>TRNG interrupt.</description>
    <value>4</value>
   </interrupt>
   <registers>
    <register>
     <name>CN</name>
     <description>TRNG Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetValue>0x00000003</resetValue>
     <fields>
      <field>
       <name>RND_IRQ_EN</name>
       <description>To enable IRQ generation when a new 32-bit Random number is ready.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>disable</name>
         <description>Disable</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>enable</name>
         <description>Enable</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESKG</name>
       <description>AES Key Generate.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>AESKG_MEMPROTE</name>
       <description>AES Key Generate. When enabled, the key for securing NVSRAM is generated and transferred to the secure key register automatically without user visibility or intervention. This bit is cleared by hardware once the key has been transferred to the secure key register.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>ST</name>
     <description>Data. The content of this register is valid only when RNG_IS = 1. When TRNG is disabled, read returns 0x0000 0000.</description>
     <addressOffset>0x04</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>RND_RDY</name>
       <description>32-bit random data is ready to read from TRNG_DATA register. Reading TRNG_DATA when RND_RDY=0 will return all 0's. IRQ is generated when RND_RDY=1 if TRNG_CN.RND_IRQ_EN=1.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Busy</name>
         <description>TRNG Busy</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>Ready</name>
         <description>32 bit random data is ready</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>AESKGD_MEU_S</name>
       <description>Automatically AES transfer on going</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DATA</name>
     <description>Data. The content of this register is valid only when RNG_IS = 1. When TRNG is disabled, read returns 0x0000 0000.</description>
     <addressOffset>0x08</addressOffset>
     <access>read-only</access>
     <fields>
      <field>
       <name>DATA</name>
       <description>Data. The content of this register is valid only when RNG_IS =1. When TNRG is disabled, read returns 0x0000 0000.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--TRNG Random Number Generator.-->
  <peripheral>
   <name>UART0</name>
   <description>UART</description>
   <baseAddress>0x40042000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>UART0</name>
    <description>UART0 IRQ</description>
    <value>14</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>ENABLE</name>
       <description>UART enabled, to enable UART block, it is used to drive a gated clock in order to save power consumption when UART is not used. FIFOs are flushed when UART is disabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>UART disabled. FIFOs are flushed. Clock is gated off for power savings. </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>UART enabled. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY_EN</name>
       <description>Enable/disable Parity bit (9th character).</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>No Parity </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Parity enabled as 9th bit</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARITY</name>
       <description>When PARITY_EN=1, selects odd, even, Mark or Space parity.
                Mark parity = always 1;

                Space parity = always 0.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>Even</name>
         <description>Even parity selected.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ODD</name>
         <description>Odd parity selected.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>MARK</name>
         <description>Mark parity selected.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>SPACE</name>
         <description>Space parity selected.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>PARMD</name>
       <description>Selects parity based on 1s or 0s count (when PARITY_EN=1).</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1</name>
         <description>Parity calculation is based on number of 1s in frame.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>0</name>
         <description>Parity calculation is based on number of 0s in frame.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>TX_FLUSH</name>
       <description>Flushes the TX FIFO buffer.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FLUSH</name>
       <description>Flushes the RX FIFO buffer.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BITACC</name>
       <description>If set, bit accuracy is selected, in this case the bit duration is the same for all the bits with the optimal accuracy. But the frame duration can have a significant deviation from the expected baudrate.If clear, frame accuracy is selected, therefore bits can have different duration in order to guarantee the minimum frame deviation.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>FRAME</name>
         <description>Frame accuracy.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>BIT</name>
         <description>Bit accuracy.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CHAR_SIZE</name>
       <description>Selects UART character size.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>2</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>5</name>
         <description>5 bits.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>6</name>
         <description>6 bits.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>7</name>
         <description>7 bits.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>8</name>
         <description>8 bits.</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>STOPBITS</name>
       <description>Selects the number of stop bits that will be generated.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>1</name>
         <description>1 stop bit.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1_5</name>
         <description>1.5 stop bits.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLOW_CTRL</name>
       <description>Enables/disables hardware flow control.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>HW Flow Control with RTS/CTS enabled</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>HW Flow Control disabled</description>
         <value>0</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLOW_POL</name>
       <description>RTS/CTS polarity.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>RTS/CTS asserted is logic 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1</name>
         <description>RTS/CTS asserted is logic 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>NULL_MODEM</name>
       <description>NULL Modem Support (RTS/CTS and TXD/RXD swap).</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>Direct convention.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EN</name>
         <description>Null Modem Mode.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>BREAK</name>
       <description>Break control bit. It causes a break condition to be transmitted to receiving UART.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>DIS</name>
         <description>Break characters are not generated.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>EN</name>
         <description>Break characters are sent (all the bits are at '0' including start/parity/stop).</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>CLKSEL</name>
       <description>Baud Rate Clock Source Select.  Selects the baud rate clock.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>SYSTEM</name>
         <description>System clock.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>ALTERNATE</name>
         <description>Alternate 7.3727MHz internal clock.  Useful in low power modes when the system clock is slow.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RX_TO</name>
       <description>RX Time Out. RX time out interrupt will occur after RXTO Uart
                       characters if RX-FIFO is not empty and RX FIFO has not been read.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>THRESH_CTRL</name>
     <description>Threshold Control register.</description>
     <addressOffset>0x04</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>RX_FIFO_THRESH</name>
       <description>RX FIFO Threshold Level.When the RX FIFO reaches this many bytes or higher, UARTn_INFTL.rx_fifo_level is set.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_THRESH</name>
       <description>TX FIFO Threshold Level. When the TX FIFO reaches this many bytes or higher, UARTn_INTFL.tx_fifo_level is set.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RTS_FIFO_THRESH</name>
       <description>RTS threshold control. When the RX FIFO reaches this many bytes or higher, the RTS output signal is deasserted, informing the transmitting UART to stop sending data to this UART.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>STATUS</name>
     <description>Status Register.</description>
     <addressOffset>0x08</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <fields>
      <field>
       <name>TX_BUSY</name>
       <description>Read-only flag indicating the UART transmit status.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_BUSY</name>
       <description>Read-only flag indicating the UARTreceiver status.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>PARITY</name>
       <description>9th Received bit state. This bit identifies the state of the 9th bit of received data. Only available for UART_CTRL.SIZE[1:0]=3.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>BREAK</name>
       <description>Received BREAK status. BREAKS is cleared when UART_STAT register is read. Received data input is held in spacing (logic 0) state for longer than a full word transmission time (that is, the total time of Start bit + data bits + Parity + Stop bits).</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_EMPTY</name>
       <description>Read-only flag indicating the RX FIFO state.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_FULL</name>
       <description>Read-only flag indicating the RX FIFO state.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_EMPTY</name>
       <description>Read-only flag indicating the TX FIFO state.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_FULL</name>
       <description>Read-only flag indicating the TX FIFO state.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RX_FIFO_CNT</name>
       <description>Indicates the number of bytes currently in the RX FIFO.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>TX_FIFO_CNT</name>
       <description>Indicates the number of bytes currently in the TX FIFO.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_EN</name>
     <description>Interrupt Enable Register.</description>
     <addressOffset>0x0C</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>RX_FRAME_ERROR</name>
       <description>Enable for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_PARITY_ERROR</name>
       <description>Enable for RX Parity Error interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTS_CHANGE</name>
       <description>Enable for CTS signal change interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_OVERRUN</name>
       <description>Enable for RX FIFO OVerrun interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_THRESH</name>
       <description>Enable for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_ALMOST_EMPTY</name>
       <description>Enable for interrupt when TX FIFO has only one byte remaining.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_THRESH</name>
       <description>Enable for interrupt when TX FIFO reaches the number of bytes configured by the TXTHD field.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BREAK</name>
       <description>Enable for received BREAK character interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_TIMEOUT</name>
       <description>Enable for RX Timeout Interrupt. Trigger if there is no RX communication during n UART characters (n=UART_CN.RXTO).</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LAST_BREAK</name>
       <description>Enable for Last break character interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>INT_FL</name>
     <description>Interrupt Status Flags.</description>
     <addressOffset>0x10</addressOffset>
     <size>32</size>
     <modifiedWriteValues>oneToClear</modifiedWriteValues>
     <fields>
      <field>
       <name>FRAME</name>
       <description>FLAG for RX Frame Error Interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>PARITY</name>
       <description>FLAG for RX Parity Error interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>CTS_CHANGE</name>
       <description>FLAG for CTS signal change interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_OVERRUN</name>
       <description>FLAG for RX FIFO Overrun interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_FIFO_THRESH</name>
       <description>FLAG for interrupt when RX FIFO reaches the number of bytes configured by the RXTHD field.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_ALMOST_EMPTY</name>
       <description>FLAG for interrupt when TX FIFO has only one byte remaining.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TX_FIFO_THRESH</name>
       <description>FLAG for interrupt when TX FIFO reaches the number of bytes configured by the TXTHD field.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>BREAK</name>
       <description>FLAG for received BREAK character interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RX_TIMEOUT</name>
       <description>FLAG for RX Timeout Interrupt. Trigger if there is no RX communication during n UART characters (n=UART_CN.RXTO).</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>LAST_BREAK</name>
       <description>FLAG for Last break character interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>BAUD0</name>
     <description>Baud rate register. Integer portion.</description>
     <addressOffset>0x14</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>IBAUD</name>
       <description>Integer portion of baud rate divisor value. IBAUD = InputClock / (factor * Baud Rate Frequency).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
      <field>
       <name>FACTOR</name>
       <description>FACTOR must be chosen to have IDIV&gt;
                0. factor used in calculation = 128 &gt;
                &gt;
                FACTOR.
      </description>
       <bitOffset>16</bitOffset>
       <bitWidth>3</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>128</name>
         <description>Baud Factor 128</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>64</name>
         <description>Baud Factor 64</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>32</name>
         <description>Baud Factor 32</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>16</name>
         <description>Baud Factor 16</description>
         <value>3</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>BAUD1</name>
     <description>Baud rate register. Decimal Setting.</description>
     <addressOffset>0x18</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DBAUD</name>
       <description>Decimal portion of baud rate divisor value. DIV = InputClock/ (factor*Baud Rate Frequency). DDIV= (DIV-IDIV) *128.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>12</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO</name>
     <description>FIFO Data buffer.</description>
     <addressOffset>0x1C</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>FIFO</name>
       <description>Load/unload location for TX and RX FIFO buffers.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>DMA</name>
     <description>DMA Configuration.</description>
     <addressOffset>0x20</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>TXDMA_EN</name>
       <description>TX DMA channel enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA is disabled </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA is enabled </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXDMA_EN</name>
       <description>RX DMA channel enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>DMA is disabled </description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>DMA is enabled </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RXDMA_START</name>
       <description>Receive DMA Start.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>RXDMA_AUTO_TO</name>
       <description>Receive DMA Timeout Start.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>TXDMA_LEVEL</name>
       <description>TX threshold for DMA transmission.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
      <field>
       <name>RXDMA_LEVEL</name>
       <description>RX threshold for DMA transmission.</description>
       <bitOffset>16</bitOffset>
       <bitWidth>6</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>TX_FIFO</name>
     <description>Transmit FIFO Status register.</description>
     <addressOffset>0x24</addressOffset>
     <size>32</size>
     <fields>
      <field>
       <name>DATA</name>
       <description>Reading from this field returns the next character available at the output of the TX FIFO (if one is available, otherwise 00h is returned).</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--UART0 UART-->
  <peripheral derivedFrom="UART0">
   <name>UART1</name>
   <description>UART 1</description>
   <baseAddress>0x40043000</baseAddress>
   <interrupt>
    <name>UART1</name>
    <description>UART1 IRQ</description>
    <value>15</value>
   </interrupt>
  </peripheral>
<!--UART1 UART 1-->
  <peripheral derivedFrom="UART0">
   <name>UART2</name>
   <description>UART 2</description>
   <baseAddress>0x40044000</baseAddress>
   <interrupt>
    <name>UART2</name>
    <description>UART2 IRQ</description>
    <value>34</value>
   </interrupt>
  </peripheral>
<!--UART2 UART 2-->
  <peripheral derivedFrom="UART0">
   <name>UART3</name>
   <description>UART 3</description>
   <baseAddress>0x40045000</baseAddress>
   <interrupt>
    <name>UART3</name>
    <description>UART3 IRQ</description>
    <value>88</value>
   </interrupt>
  </peripheral>
<!--UART3 UART 3-->
  <peripheral derivedFrom="UART0">
   <name>UART4</name>
   <description>UART 4</description>
   <baseAddress>0x40023000</baseAddress>
   <interrupt>
    <name>UART4</name>
    <description>UART4 IRQ</description>
    <value>89</value>
   </interrupt>
  </peripheral>
<!--UART4 UART 4-->
  <peripheral derivedFrom="UART0">
   <name>UART5</name>
   <description>UART 5</description>
   <baseAddress>0x40024000</baseAddress>
   <interrupt>
    <name>UART5</name>
    <description>UART5 IRQ</description>
    <value>90</value>
   </interrupt>
  </peripheral>
<!--UART5 UART 5-->
  <peripheral>
   <name>USBHS</name>
   <description>USB 2.0 High-speed Controller.</description>
   <baseAddress>0x400B1000</baseAddress>
   <addressBlock>
    <offset>0</offset>
    <size>0x1000</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>USB</name>
    <value>2</value>
   </interrupt>
   <registers>
    <register>
     <name>FADDR</name>
     <description>Function address register.</description>
     <addressOffset>0x00</addressOffset>
     <size>8</size>
     <resetMask>0x00</resetMask>
     <fields>
      <field>
       <name>ADDR</name>
       <description>Function address for this controller.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>UPDATE</name>
       <description>Set when ADDR is written, cleared when new address takes effect.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>POWER</name>
     <description>Power management register.</description>
     <addressOffset>0x01</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>EN_SUSPENDM</name>
       <description>Enable SUSPENDM signal.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SUSPEND</name>
       <description>Suspend mode detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RESUME</name>
       <description>Generate resume signaling.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RESET</name>
       <description>Bus reset detected.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>HS_MODE</name>
       <description>High-speed mode detected.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>HS_ENABLE</name>
       <description>High-speed mode enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SOFTCONN</name>
       <description>Softconn.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>ISO_UPDATE</name>
       <description>Wait for SOF during Isochronous xfers.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRIN</name>
     <description>Interrupt register for EP0 and IN EP1-15.</description>
     <addressOffset>0x02</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_IN_INT</name>
       <description>Endpoint 15 interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP14_IN_INT</name>
       <description>Endpoint 14 interrupt.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP13_IN_INT</name>
       <description>Endpoint 13 interrupt.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP12_IN_INT</name>
       <description>Endpoint 12 interrupt.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP11_IN_INT</name>
       <description>Endpoint 11 interrupt.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP10_IN_INT</name>
       <description>Endpoint 10 interrupt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP9_IN_INT</name>
       <description>Endpoint 9 interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP8_IN_INT</name>
       <description>Endpoint 8 interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP7_IN_INT</name>
       <description>Endpoint 7 interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP6_IN_INT</name>
       <description>Endpoint 6 interrupt.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP5_IN_INT</name>
       <description>Endpoint 5 interrupt.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP4_IN_INT</name>
       <description>Endpoint 4 interrupt.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP3_IN_INT</name>
       <description>Endpoint 3 interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP2_IN_INT</name>
       <description>Endpoint 2 interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP1_IN_INT</name>
       <description>Endpoint 1 interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP0_IN_INT</name>
       <description>Endpoint 0 interrupt.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTROUT</name>
     <description>Interrupt register for OUT EP 1-15.</description>
     <addressOffset>0x04</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_OUT_INT</name>
       <description>Endpoint 15 interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP14_OUT_INT</name>
       <description>Endpoint 14 interrupt.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP13_OUT_INT</name>
       <description>Endpoint 13 interrupt.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP12_OUT_INT</name>
       <description>Endpoint 12 interrupt.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP11_OUT_INT</name>
       <description>Endpoint 11 interrupt.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP10_OUT_INT</name>
       <description>Endpoint 10 interrupt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP9_OUT_INT</name>
       <description>Endpoint 9 interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP8_OUT_INT</name>
       <description>Endpoint 8 interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP7_OUT_INT</name>
       <description>Endpoint 7 interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP6_OUT_INT</name>
       <description>Endpoint 6 interrupt.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP5_OUT_INT</name>
       <description>Endpoint 5 interrupt.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP4_OUT_INT</name>
       <description>Endpoint 4 interrupt.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP3_OUT_INT</name>
       <description>Endpoint 3 interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP2_OUT_INT</name>
       <description>Endpoint 2 interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>EP1_OUT_INT</name>
       <description>Endpoint 1 interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRINEN</name>
     <description>Interrupt enable for EP 0 and IN EP 1-15.</description>
     <addressOffset>0x06</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_IN_INT_EN</name>
       <description>Endpoint 15 interrupt enable.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP14_IN_INT_EN</name>
       <description>Endpoint 14 interrupt enable.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP13_IN_INT_EN</name>
       <description>Endpoint 13 interrupt enable.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP12_IN_INT_EN</name>
       <description>Endpoint 12 interrupt enable.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP11_IN_INT_EN</name>
       <description>Endpoint 11 interrupt enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP10_IN_INT_EN</name>
       <description>Endpoint 10 interrupt enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP9_IN_INT_EN</name>
       <description>Endpoint 9 interrupt enable.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP8_IN_INT_EN</name>
       <description>Endpoint 8 interrupt enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP7_IN_INT_EN</name>
       <description>Endpoint 7 interrupt enable.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP6_IN_INT_EN</name>
       <description>Endpoint 6 interrupt enable.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP5_IN_INT_EN</name>
       <description>Endpoint 5 interrupt enable.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP4_IN_INT_EN</name>
       <description>Endpoint 4 interrupt enable.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP3_IN_INT_EN</name>
       <description>Endpoint 3 interrupt enable.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP2_IN_INT_EN</name>
       <description>Endpoint 2 interrupt enable.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP1_IN_INT_EN</name>
       <description>Endpoint 1 interrupt enable.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP0_INT_EN</name>
       <description>Endpoint 0 interrupt enable.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTROUTEN</name>
     <description>Interrupt enable for OUT EP 1-15.</description>
     <addressOffset>0x08</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>EP15_OUT_INT_EN</name>
       <description>Endpoint 15 interrupt.</description>
       <bitOffset>15</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP14_OUT_INT_EN</name>
       <description>Endpoint 14 interrupt.</description>
       <bitOffset>14</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP13_OUT_INT_EN</name>
       <description>Endpoint 13 interrupt.</description>
       <bitOffset>13</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP12_OUT_INT_EN</name>
       <description>Endpoint 12 interrupt.</description>
       <bitOffset>12</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP11_OUT_INT_EN</name>
       <description>Endpoint 11 interrupt.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP10_OUT_INT_EN</name>
       <description>Endpoint 10 interrupt.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP9_OUT_INT_EN</name>
       <description>Endpoint 9 interrupt.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP8_OUT_INT_EN</name>
       <description>Endpoint 8 interrupt.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP7_OUT_INT_EN</name>
       <description>Endpoint 7 interrupt.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP6_OUT_INT_EN</name>
       <description>Endpoint 6 interrupt.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP5_OUT_INT_EN</name>
       <description>Endpoint 5 interrupt.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP4_OUT_INT_EN</name>
       <description>Endpoint 4 interrupt.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP3_OUT_INT_EN</name>
       <description>Endpoint 3 interrupt.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP2_OUT_INT_EN</name>
       <description>Endpoint 2 interrupt.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EP1_OUT_INT_EN</name>
       <description>Endpoint 1 interrupt.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRUSB</name>
     <description>Interrupt register for common USB interrupts.</description>
     <addressOffset>0x0A</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>SOF_INT</name>
       <description>Start of Frame.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RESET_INT</name>
       <description>Bus reset detected.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RESUME_INT</name>
       <description>Resume detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>SUSPEND_INT</name>
       <description>Suspend detected.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INTRUSBEN</name>
     <description>Interrupt enable for common USB interrupts.</description>
     <addressOffset>0x0B</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>SOF_INT_EN</name>
       <description>Start of Frame.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RESET_INT_EN</name>
       <description>Bus reset detected.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RESUME_INT_EN</name>
       <description>Resume detected.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SUSPEND_INT_EN</name>
       <description>Suspend detected.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FRAME</name>
     <description>Frame number.</description>
     <addressOffset>0x0C</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>FRAMENUM</name>
       <description>Read the last received frame number, that is the 11-bit frame number received in the SOF packet.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INDEX</name>
     <description>Index for banked registers.</description>
     <addressOffset>0x0E</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>INDEX</name>
       <description>Index Register Access Selector. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>TESTMODE</name>
     <description>USB 2.0 test mode enable register.</description>
     <addressOffset>0x0F</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>FORCE_FS</name>
       <description>Force USB to Full-speed after reset.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FORCE_HS</name>
       <description>Force USB to High-speed after reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_PKT</name>
       <description>Transmit fixed test packet.</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_K</name>
       <description>Force USB to continuous K state.</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_J</name>
       <description>Force USB to continuous J state.</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>TEST_SE0_NAK</name>
       <description>Respond to any valid IN token with NAK.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INMAXP</name>
     <description>Maximum packet size for INx endpoint (x == INDEX).</description>
     <addressOffset>0x10</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>MAXPACKETSIZE</name>
       <description>Maximum Packet Size in a Single Transaction. That is the maximum packet size in bytes, that is transmitted for each microframe. The maximum value is 1024, subject to the limitations of the endpoint type set in USB 2.0 Specification, Chapter 9</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
      </field>
      <field>
       <name>NUMPACKMINUS1</name>
       <description>Number of Split Packets - 1. Defines the maximum number of packets minus 1 that a USB payload can be split into. THis must be an exact multiple of maxpacketsize. Only applicable for HS High-Bandwidth isochronous endpoints and Bulk endpoints. Ignored in all other cases. </description>
       <bitOffset>11</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CSR0</name>
     <description>Control status register for EP 0 (when INDEX == 0).</description>
     <addressOffset>0x12</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>SERV_SETUP_END</name>
       <description>Clear EP0 Setup End Bit. Write a 1 to clear the setupend bit. Automatically cleared after being set </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SERV_OUTPKTRDY</name>
       <description>Clear EP0 Out Packet Ready Bit. Write a 1 to clear the outpktrdy bit. Automatically cleared after being set.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SEND_STALL</name>
       <description>Send EP0 STALL Handshake. Write a 1 to this bit to terminate the current control transaction by sneding a STALL handshake. Automatically cleared after being set. </description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SETUP_END</name>
       <description>Read Setup End Status. Automatically set when a contorl transaction ends before the dataend bit has been set by fimrware. An interrupt is generated when this bit is set. Write 1 to servicedsetupend to clear.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>DATA_END</name>
       <description>Control Transaction Data End. Write a 1 to this bit after firmware completes any of the following three transactions: 1. set inpktrdy = 1 for the last data packet. 2. Set inpktrdy =1 for a zero-length data packet. 3. Clear outpktrdy = 0 after unloading the last data packet. </description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENT_STALL</name>
       <description> Read EP0 STALL Handshake Sent Status Automatically set when a STALL handshake is transmitted. Write a 0 to clear. </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>INPKTRDY</name>
       <description>EP0 IN Packet Ready 1: Write a 1 after writing a data packet to the IN FIFO. Automatically cleared when the data packet is transmitted. An interrupt is generated when this bit is cleared. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>OUTPKTRDY</name>
       <description>EP0 OUT Packet Ready Status Automatically set when a data packet is received in the OUT FIFO. An interrupt is generated when this bit is set. Write a 1 to the servicedoutpktrdy bit (above) to clear after the packet is unloaded from the OUT FIFO. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INCSRL</name>
     <description>Control status lower register for INx endpoint (x == INDEX).</description>
     <alternateRegister>CSR0</alternateRegister>
     <addressOffset>0x12</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>INCOMPTX</name>
       <description>Read Incomplete Split Transfer Error Status High-bandwidth isochronous transfers: Automatically set when a payload is split into multiple packets but insufficient IN tokens were received to send all packets. The current packets is flushed from the IN FIFO. Write 0 to clear.</description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>CLRDATATOG</name>
       <description>Write 1 to clear IN endpoint data-toggle to 0.</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENTSTALL</name>
       <description>Read STALL Handshake Sent Status Automatically set when a STALL handshake is transmitted, at which time the IN FIFO is flushed, and inpktrdy is cleared. Write 0 to clear.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENDSTALL</name>
       <description>Send STALL Handshake.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>terminate</name>
         <description>Terminate STALL handhsake</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>respond</name>
         <description>Respond to an IN token with a STALL handshake</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FLUSHFIFO</name>
       <description>Flush Next Packet from IN FIFO. Write 1 to clear</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>UNDERRUN</name>
       <description>Read IN FIFO Underrun Error Status Isochronous Mode: Automatically set if the IN FIFO is empty. Write 0 to clear</description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFONOTEMPTY</name>
       <description>Read FIFO Not Empty Status. Automatically set when there is at least one packet in the IN FIFO. Write a 0 to clear. </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>INPKTRDY</name>
       <description>IN Packet Ready. Write a 1 to clear </description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>INCSRU</name>
     <description>Control status upper register for INx endpoint (x == INDEX).</description>
     <addressOffset>0x13</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>AUTOSET</name>
       <description>Auto Set inpktrdy. </description>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>set</name>
         <description>USBHS_INCSRL_inpktrdy must be set by firmware.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>auto</name>
         <description>USBHS_INCSRL_inpktrdy is automatically set. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ISO</name>
       <description>Isochronous Transfer Enable</description>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>interrupt</name>
         <description>Enable IN Bulk and IN interrupt transfers.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>isochronous</name>
         <description>Enable IN Isochronous transfers. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>MODE</name>
       <description> Endpoint Direction Mode.</description>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>out</name>
         <description>Endpoint direction is OUT.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>in</name>
         <description>Endpoint direction is IN. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAREQEN</name>
       <description> DMA Request Enable </description>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable DMA for this IN endpoint.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable DMA for this IN endpoint.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>FRCDATATOG</name>
       <description> Force In Data - Toggle</description>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>received</name>
         <description>Toggle data-toglge only when an ACK is received.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dontcare</name>
         <description>Toggle data-toggle regardless of ACK. </description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DMAREQMODE</name>
       <description> DMA Request Mode Enable </description>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>0</name>
         <description>Enable DMA Request Mode 0.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>1</name>
         <description>Enable DMA Request Mode 1.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>DPKTBUFDIS</name>
       <description> Double Packet Buffering Disable </description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
       <enumeratedValues>
        <enumeratedValue>
         <name>en</name>
         <description>Enable Double packet buffering.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable Double Packet Buffering.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTMAXP</name>
     <description>Maximum packet size for OUTx endpoint (x == INDEX).</description>
     <addressOffset>0x14</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>NUMPACKMINUS1</name>
       <description>Number of Split Packets -1. Defines the maximum number of packets - 1 that a usb payload is combined into. The value must be exact multiple of maxpacketsize. </description>
       <bitOffset>11</bitOffset>
       <bitWidth>5</bitWidth>
      </field>
      <field>
       <name>MAXPACKETSIZE</name>
       <description>Maximum Packet in a Single Transaction. This is the maximum packet size, in bytes, that is transmitted for each microframe. The maximum value is 1024, subject to the limitations for the endpoint type set in USB2.0 spesification, chapter 9.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>11</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTCSRL</name>
     <description>Control status lower register for OUTx endpoint (x == INDEX).</description>
     <addressOffset>0x16</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>CLRDATATOG</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENTSTALL</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>SENDSTALL</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FLUSHFIFO</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DATAERROR</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>OVERRUN</name>
       <bitOffset>2</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>FIFOFULL</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>OUTPKTRDY</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTCSRU</name>
     <description>Control status upper register for OUTx endpoint (x == INDEX).</description>
     <addressOffset>0x17</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>AUTOCLEAR</name>
       <bitOffset>7</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>ISO</name>
       <bitOffset>6</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DMAREQEN</name>
       <bitOffset>5</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DISNYET</name>
       <bitOffset>4</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DMAREQMODE</name>
       <bitOffset>3</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>DPKTBUFDIS</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>INCOMPRX</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>COUNT0</name>
     <description>Number of received bytes in EP 0 FIFO (INDEX == 0).</description>
     <addressOffset>0x18</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>COUNT0</name>
       <description>Read Number of Data Bytes in the Endpoint 0 FIFO. Returns the number of data bytes in the endpoint 0 FIFO. This value changes as contents of the FIFO change. The value is only valued when USBHS_OUTSCRL_outpktrdy = 1 </description>
       <bitOffset>0</bitOffset>
       <bitWidth>7</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>OUTCOUNT</name>
     <description>Number of received bytes in OUT EPx FIFO (x == INDEX).</description>
     <alternateRegister>COUNT0</alternateRegister>
     <addressOffset>0x18</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>OUTCOUNT</name>
       <description>Read Number of Data Bytes in OUT FIFO. Returns the number of data bytes in the packet that are read next in the OUT FIFO. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>13</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO0</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x20</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO0</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO1</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x24</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO1</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO2</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x28</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO2</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO3</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x2c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO3</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO4</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x30</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO4</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO5</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x34</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO5</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO6</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x38</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO6</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO7</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x3c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO7</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO8</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x40</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO8</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO9</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x44</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO9</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO10</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x48</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO10</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO11</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x4c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO11</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO12</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x50</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO12</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO13</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x54</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO13</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO14</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x58</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO14</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>FIFO15</name>
     <description>Read for OUT data FIFO, write for IN data FIFO.</description>
     <addressOffset>0x5c</addressOffset>
     <fields>
      <field>
       <name>USBHS_FIFO15</name>
       <description>USBHS Endpoint FIFO Read/Write Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>32</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>HWVERS</name>
     <description>HWVERS</description>
     <addressOffset>0x6c</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>USBHS_HWVERS</name>
       <description>USBHS Register.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>EPINFO</name>
     <description>Endpoint hardware information.</description>
     <addressOffset>0x78</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>OUTENDPOINTS</name>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>INTENDPOINTS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>RAMINFO</name>
     <description>RAM width and DMA hardware information.</description>
     <addressOffset>0x79</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>DMACHANS</name>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
      <field>
       <name>RAMBITS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>SOFTRESET</name>
     <description>Software reset register.</description>
     <addressOffset>0x7A</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>RSTXS</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>RSTS</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>EARLYDMA</name>
     <description>DMA timing control register.</description>
     <addressOffset>0x7B</addressOffset>
     <size>8</size>
     <fields>
      <field>
       <name>EDMAIN</name>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
      <field>
       <name>EDMAOUT</name>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>CTUCH</name>
     <description>Chirp timeout timer setting.</description>
     <addressOffset>0x80</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>C_T_UCH</name>
       <description>HS Chirp Timeout Clock Cycles. This configures the chirp timeout used by this device to negotiate a HS connection with a FS Host. </description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>CTHSRTN</name>
     <description>Sets delay between HS resume to UTM normal operating mode.</description>
     <addressOffset>0x82</addressOffset>
     <size>16</size>
     <fields>
      <field>
       <name>C_T_HSTRN</name>
       <description>High Speed Resume Delay Clock Cycles. This configures the delay from when the RESUME state on the bus ends, the when the USBHS resumes normal operation.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>16</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_USB_REG_00</name>
     <description>MXM_USB_REG_00</description>
     <addressOffset>0x400</addressOffset>
    </register>
    <register>
     <name>M31_PHY_UTMI_RESET</name>
     <description>M31_PHY_UTMI_RESET</description>
     <addressOffset>0x404</addressOffset>
    </register>
    <register>
     <name>M31_PHY_UTMI_VCONTROL</name>
     <description>M31_PHY_UTMI_VCONTROL</description>
     <addressOffset>0x408</addressOffset>
    </register>
    <register>
     <name>M31_PHY_CLK_EN</name>
     <description>M31_PHY_CLK_EN</description>
     <addressOffset>0x40C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_PONRST</name>
     <description>M31_PHY_PONRST</description>
     <addressOffset>0x410</addressOffset>
    </register>
    <register>
     <name>M31_PHY_NONCRY_RSTB</name>
     <description>M31_PHY_NONCRY_RSTB</description>
     <addressOffset>0x414</addressOffset>
    </register>
    <register>
     <name>M31_PHY_NONCRY_EN</name>
     <description>M31_PHY_NONCRY_EN</description>
     <addressOffset>0x418</addressOffset>
    </register>
    <register>
     <name>M31_PHY_U2_COMPLIANCE_EN</name>
     <description>M31_PHY_U2_COMPLIANCE_EN</description>
     <addressOffset>0x420</addressOffset>
    </register>
    <register>
     <name>M31_PHY_U2_COMPLIANCE_DAC_ADJ</name>
     <description>M31_PHY_U2_COMPLIANCE_DAC_ADJ</description>
     <addressOffset>0x424</addressOffset>
    </register>
    <register>
     <name>M31_PHY_U2_COMPLIANCE_DAC_ADJ_EN</name>
     <description>M31_PHY_U2_COMPLIANCE_DAC_ADJ_EN</description>
     <addressOffset>0x428</addressOffset>
    </register>
    <register>
     <name>M31_PHY_CLK_RDY</name>
     <description>M31_PHY_CLK_RDY</description>
     <addressOffset>0x42C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_PLL_EN</name>
     <description>M31_PHY_PLL_EN</description>
     <addressOffset>0x430</addressOffset>
    </register>
    <register>
     <name>M31_PHY_BIST_OK</name>
     <description>M31_PHY_BIST_OK</description>
     <addressOffset>0x434</addressOffset>
    </register>
    <register>
     <name>M31_PHY_DATA_OE</name>
     <description>M31_PHY_DATA_OE</description>
     <addressOffset>0x438</addressOffset>
    </register>
    <register>
     <name>M31_PHY_OSCOUTEN</name>
     <description>M31_PHY_OSCOUTEN</description>
     <addressOffset>0x43C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_LPM_ALIVE</name>
     <description>M31_PHY_LPM_ALIVE</description>
     <addressOffset>0x440</addressOffset>
    </register>
    <register>
     <name>M31_PHY_HS_BIST_MODE</name>
     <description>M31_PHY_HS_BIST_MODE</description>
     <addressOffset>0x444</addressOffset>
    </register>
    <register>
     <name>M31_PHY_CORECLKIN</name>
     <description>M31_PHY_CORECLKIN</description>
     <addressOffset>0x448</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XTLSEL</name>
     <description>M31_PHY_XTLSEL</description>
     <addressOffset>0x44C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_LS_EN</name>
     <description>M31_PHY_LS_EN</description>
     <addressOffset>0x450</addressOffset>
    </register>
    <register>
     <name>M31_PHY_DEBUG_SEL</name>
     <description>M31_PHY_DEBUG_SEL</description>
     <addressOffset>0x454</addressOffset>
    </register>
    <register>
     <name>M31_PHY_DEBUG_OUT</name>
     <description>M31_PHY_DEBUG_OUT</description>
     <addressOffset>0x458</addressOffset>
    </register>
    <register>
     <name>M31_PHY_OUTCLKSEL</name>
     <description>M31_PHY_OUTCLKSEL</description>
     <addressOffset>0x45C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_31_0</name>
     <description>M31_PHY_XCFGI_31_0</description>
     <addressOffset>0x460</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_63_32</name>
     <description>M31_PHY_XCFGI_63_32</description>
     <addressOffset>0x464</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_95_64</name>
     <description>M31_PHY_XCFGI_95_64</description>
     <addressOffset>0x468</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_127_96</name>
     <description>M31_PHY_XCFGI_127_96</description>
     <addressOffset>0x46C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_137_128</name>
     <description>M31_PHY_XCFGI_137_128</description>
     <addressOffset>0x470</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_HS_COARSE_TUNE_NUM</name>
     <description>M31_PHY_XCFG_HS_COARSE_TUNE_NUM</description>
     <addressOffset>0x474</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_HS_FINE_TUNE_NUM</name>
     <description>M31_PHY_XCFG_HS_FINE_TUNE_NUM</description>
     <addressOffset>0x478</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_FS_COARSE_TUNE_NUM</name>
     <description>M31_PHY_XCFG_FS_COARSE_TUNE_NUM</description>
     <addressOffset>0x47C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_FS_FINE_TUNE_NUM</name>
     <description>M31_PHY_XCFG_FS_FINE_TUNE_NUM</description>
     <addressOffset>0x480</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_LOCK_RANGE_MAX</name>
     <description>M31_PHY_XCFG_LOCK_RANGE_MAX</description>
     <addressOffset>0x484</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGI_LOCK_RANGE_MIN</name>
     <description>M31_PHY_XCFGI_LOCK_RANGE_MIN</description>
     <addressOffset>0x488</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_OB_RSEL</name>
     <description>M31_PHY_XCFG_OB_RSEL</description>
     <addressOffset>0x48C</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFG_OC_RSEL</name>
     <description>M31_PHY_XCFG_OC_RSEL</description>
     <addressOffset>0x490</addressOffset>
    </register>
    <register>
     <name>M31_PHY_XCFGO</name>
     <description>M31_PHY_XCFGO</description>
     <addressOffset>0x494</addressOffset>
    </register>
    <register>
     <name>MXM_INT</name>
     <description>USB Added Maxim Interrupt Flag Register.</description>
     <addressOffset>0x498</addressOffset>
     <fields>
      <field>
       <name>VBUS</name>
       <description>VBUS</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOVBUS</name>
       <description>NOVBUS</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_INT_EN</name>
     <description>USB Added Maxim Interrupt Enable Register.</description>
     <addressOffset>0x49C</addressOffset>
     <fields>
      <field>
       <name>VBUS</name>
       <description>VBUS</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>NOVBUS</name>
       <description>NOVBUS</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_SUSPEND</name>
     <description>USB Added Maxim Suspend Register.</description>
     <addressOffset>0x4A0</addressOffset>
     <fields>
      <field>
       <name>SEL</name>
       <description>Suspend register</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
    <register>
     <name>MXM_REG_A4</name>
     <description>USB Added Maxim Power Status Register</description>
     <addressOffset>0x4A4</addressOffset>
     <fields>
      <field>
       <name>VRST_VDDB_N_A</name>
       <description>VRST_VDDB_N_A</description>
       <bitOffset>0</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
      <field>
       <name>DMA_INT</name>
       <description>DMA_INT</description>
       <bitOffset>1</bitOffset>
       <bitWidth>1</bitWidth>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--USBHS USB 2.0 High-speed Controller.-->
  <peripheral>
   <name>WDT0</name>
   <description>Watchdog Timer 0</description>
   <baseAddress>0x40003000</baseAddress>
   <addressBlock>
    <offset>0x00</offset>
    <size>0x0400</size>
    <usage>registers</usage>
   </addressBlock>
   <interrupt>
    <name>WDT0</name>
    <value>1</value>
   </interrupt>
   <registers>
    <register>
     <name>CTRL</name>
     <description>Watchdog Timer Control Register.</description>
     <addressOffset>0x00</addressOffset>
     <resetMask>0x7FFFF000</resetMask>
     <fields>
      <field>
       <name>INT_PERIOD</name>
       <description>Watchdog Interrupt Period. The watchdog timer will assert an interrupt, if enabled, if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_PERIOD</name>
       <description>Watchdog Reset Period. The watchdog timer will assert a reset, if enabled, if the CPU does not write the watchdog reset sequence to the WDT_RST register before the watchdog timer has counted this time period since the last timer reset.</description>
       <bitOffset>4</bitOffset>
       <bitWidth>4</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>wdt2pow31</name>
         <description>2**31 clock cycles.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow30</name>
         <description>2**30 clock cycles.</description>
         <value>1</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow29</name>
         <description>2**29 clock cycles.</description>
         <value>2</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow28</name>
         <description>2**28 clock cycles.</description>
         <value>3</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow27</name>
         <description>2^27 clock cycles.</description>
         <value>4</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow26</name>
         <description>2**26 clock cycles.</description>
         <value>5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow25</name>
         <description>2**25 clock cycles.</description>
         <value>6</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow24</name>
         <description>2**24 clock cycles.</description>
         <value>7</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow23</name>
         <description>2**23 clock cycles.</description>
         <value>8</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow22</name>
         <description>2**22 clock cycles.</description>
         <value>9</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow21</name>
         <description>2**21 clock cycles.</description>
         <value>10</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow20</name>
         <description>2**20 clock cycles.</description>
         <value>11</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow19</name>
         <description>2**19 clock cycles.</description>
         <value>12</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow18</name>
         <description>2**18 clock cycles.</description>
         <value>13</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow17</name>
         <description>2**17 clock cycles.</description>
         <value>14</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>wdt2pow16</name>
         <description>2**16 clock cycles.</description>
         <value>15</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>WDT_EN</name>
       <description>Watchdog Timer Enable.</description>
       <bitOffset>8</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_FLAG</name>
       <description>Watchdog Timer Interrupt Flag.</description>
       <bitOffset>9</bitOffset>
       <bitWidth>1</bitWidth>
       <modifiedWriteValues>oneToClear</modifiedWriteValues>
       <enumeratedValues>
        <enumeratedValue>
         <name>inactive</name>
         <description>No interrupt is pending.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>pending</name>
         <description>An interrupt is pending.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>INT_EN</name>
       <description>Watchdog Timer Interrupt Enable.</description>
       <bitOffset>10</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_EN</name>
       <description>Watchdog Timer Reset Enable.</description>
       <bitOffset>11</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>dis</name>
         <description>Disable.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>en</name>
         <description>Enable.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>RST_FLAG</name>
       <description>Watchdog Timer Reset Flag.</description>
       <bitOffset>31</bitOffset>
       <bitWidth>1</bitWidth>
       <enumeratedValues>
        <usage>read-write</usage>
        <enumeratedValue>
         <name>noEvent</name>
         <description>The event has not occurred.</description>
         <value>0</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>occurred</name>
         <description>The event has occurred.</description>
         <value>1</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>RST</name>
     <description>Watchdog Timer Reset Register.</description>
     <addressOffset>0x04</addressOffset>
     <access>write-only</access>
     <fields>
      <field>
       <name>WDT_RST</name>
       <description>Writing the watchdog counter 'reset sequence' to this register resets the watchdog counter. If the watchdog count exceeds INT_PERIOD then a watchdog interrupt will occur, if enabled. If the watchdog count exceeds RST_PERIOD then a watchdog reset will occur, if enabled.</description>
       <bitOffset>0</bitOffset>
       <bitWidth>8</bitWidth>
       <enumeratedValues>
        <enumeratedValue>
         <name>seq0</name>
         <description>The first value to be written to reset the WDT.</description>
         <value>0x000000A5</value>
        </enumeratedValue>
        <enumeratedValue>
         <name>seq1</name>
         <description>The second value to be written to reset the WDT.</description>
         <value>0x0000005A</value>
        </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
<!--WDT0 Watchdog Timer 0-->
  <peripheral derivedFrom="WDT0">
   <name>WDT1</name>
   <description>Watchdog Timer 0 1</description>
   <baseAddress>0x40003400</baseAddress>
   <interrupt>
    <name>WDT1</name>
    <description>WDT1 IRQ</description>
    <value>57</value>
   </interrupt>
  </peripheral>
<!--WDT1 Watchdog Timer 0 1-->
 </peripherals>
</device>
